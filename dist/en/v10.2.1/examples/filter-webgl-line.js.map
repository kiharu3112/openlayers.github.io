{"version":3,"file":"filter-webgl-line.js","mappings":"sLAQA,MAAMA,EAAY,CAChBC,UAAW,CACTC,UAAW,UAEb,eAAgB,EAChB,eAAgB,CACd,cACA,CAAC,UACD,CAAC,eACD,QACA,oBACA,SACA,oBAEFC,OAAQ,CAAC,KAAM,CAAC,eAAgB,CAAC,MAAO,eAG1C,MAAMC,UAAmB,IACvB,cAAAC,GACE,OAAO,IAAI,IAAyBC,KAAM,CACxCC,UAAWD,KAAKE,eAChBC,MAAOT,GAEX,EAGF,MAAMU,EAAU,CACd,8BACA,gCACA,gCACA,yBACA,6BAGIC,EAAS,IAAI,IAAa,CAC9BC,SAAU,KAGNC,EAAS,IAAI,IACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQK,SAAUD,EACpCE,MAAMN,EAAQI,IACXG,MAAMC,GAASA,EAAKC,SACpBF,MAAMG,IACL,MAAMR,EAAWC,EAAOQ,aAAaD,EAAM,CACzCE,kBAAmB,cAErBX,EAAOY,YAAYX,EAAS,IAIlC,MAAMY,EAAc,IAAIpB,EAAW,CACjCO,WAGIc,EAAM,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZf,OAAQ,IAAI,MAEda,GAEFG,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,kBAAmB,mBAC5BC,KAAM,MAIV,SAASC,IACP,MAAMC,EAAO,IAAIC,KAAqC,IAAhCjC,EAAUC,UAAUC,WAC1CgC,SAASC,eAAe,cAAcC,YAAcJ,EAAKK,aAC3D,CACAH,SAASC,eAAe,cAAcG,iBAAiB,SAAUC,IAC/DvC,EAAUC,UAAUC,UAAYsC,WAAWD,EAAMZ,OAAOc,OACxDV,IACAN,EAAIiB,QAAQ,IAEdX,G","sources":["webpack:///./filter-webgl-line.js"],"sourcesContent":["import IGC from '../src/ol/format/IGC.js';\nimport Layer from '../src/ol/layer/Layer.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport WebGLVectorLayerRenderer from '../src/ol/renderer/webgl/VectorLayer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer} from '../src/ol/layer.js';\n\nconst lineStyle = {\n  variables: {\n    timestamp: 1303240000,\n  },\n  'stroke-width': 4,\n  'stroke-color': [\n    'interpolate',\n    ['linear'],\n    ['line-metric'],\n    1303200000,\n    'hsl(312,100%,39%)',\n    1303240000,\n    'hsl(36,100%,45%)',\n  ],\n  filter: ['<=', ['line-metric'], ['var', 'timestamp']],\n};\n\nclass WebGLLayer extends Layer {\n  createRenderer() {\n    return new WebGLVectorLayerRenderer(this, {\n      className: this.getClassName(),\n      style: lineStyle,\n    });\n  }\n}\n\nconst igcUrls = [\n  'data/igc/Clement-Latour.igc',\n  'data/igc/Damien-de-Baenst.igc',\n  'data/igc/Sylvain-Dhonneur.igc',\n  'data/igc/Tom-Payne.igc',\n  'data/igc/Ulrich-Prinz.igc',\n];\n\nconst source = new VectorSource({\n  features: [],\n});\n\nconst format = new IGC();\nfor (let i = 0; i < igcUrls.length; ++i) {\n  fetch(igcUrls[i])\n    .then((resp) => resp.text())\n    .then((data) => {\n      const features = format.readFeatures(data, {\n        featureProjection: 'EPSG:3857',\n      });\n      source.addFeatures(features);\n    });\n}\n\nconst vectorLayer = new WebGLLayer({\n  source,\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    vectorLayer,\n  ],\n  target: 'map',\n  view: new View({\n    center: [703365.7089403362, 5714629.865071137],\n    zoom: 9,\n  }),\n});\n\nfunction showTime() {\n  const time = new Date(lineStyle.variables.timestamp * 1000);\n  document.getElementById('time-value').textContent = time.toUTCString();\n}\ndocument.getElementById('time-input').addEventListener('input', (event) => {\n  lineStyle.variables.timestamp = parseFloat(event.target.value);\n  showTime();\n  map.render();\n});\nshowTime();\n"],"names":["lineStyle","variables","timestamp","filter","WebGLLayer","createRenderer","this","className","getClassName","style","igcUrls","source","features","format","i","length","fetch","then","resp","text","data","readFeatures","featureProjection","addFeatures","vectorLayer","map","layers","target","view","center","zoom","showTime","time","Date","document","getElementById","textContent","toUTCString","addEventListener","event","parseFloat","value","render"],"sourceRoot":""}