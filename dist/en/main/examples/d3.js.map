{"version":3,"file":"d3.js","mappings":"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","sources":["webpack:///../node_modules/topojson-client/src/identity.js","webpack:///../node_modules/topojson-client/src/feature.js","webpack:///../node_modules/topojson-client/src/transform.js","webpack:///../node_modules/topojson-client/src/reverse.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-array/src/fsum.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/d3-fetch/src/json.js","webpack:///./d3.js"],"sourcesContent":["export default function(x) {\n  return x;\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import Map from '../src/ol/Map.js';\nimport StadiaMaps from '../src/ol/source/StadiaMaps.js';\nimport View from '../src/ol/View.js';\nimport {Layer, Tile as TileLayer} from '../src/ol/layer.js';\nimport {feature} from 'topojson-client';\nimport {fromLonLat, toLonLat} from '../src/ol/proj.js';\nimport {geoBounds, geoMercator, geoPath} from 'd3-geo';\nimport {getCenter, getWidth} from '../src/ol/extent.js';\nimport {json} from 'd3-fetch';\nimport {select} from 'd3-selection';\n\nclass CanvasLayer extends Layer {\n  constructor(options) {\n    super(options);\n\n    this.features = options.features;\n\n    this.svg = select(document.createElement('div'))\n      .append('svg')\n      .style('position', 'absolute');\n\n    this.svg.append('path').datum(this.features).attr('class', 'boundary');\n  }\n\n  getSourceState() {\n    return 'ready';\n  }\n\n  render(frameState) {\n    const width = frameState.size[0];\n    const height = frameState.size[1];\n    const projection = frameState.viewState.projection;\n    const d3Projection = geoMercator().scale(1).translate([0, 0]);\n    let d3Path = geoPath().projection(d3Projection);\n\n    const pixelBounds = d3Path.bounds(this.features);\n    const pixelBoundsWidth = pixelBounds[1][0] - pixelBounds[0][0];\n    const pixelBoundsHeight = pixelBounds[1][1] - pixelBounds[0][1];\n\n    const bounds = geoBounds(this.features);\n    const geoBoundsLeftBottom = fromLonLat(bounds[0], projection);\n    const geoBoundsRightTop = fromLonLat(bounds[1], projection);\n    let geoBoundsWidth = geoBoundsRightTop[0] - geoBoundsLeftBottom[0];\n    if (geoBoundsWidth < 0) {\n      geoBoundsWidth += getWidth(projection.getExtent());\n    }\n    const geoBoundsHeight = geoBoundsRightTop[1] - geoBoundsLeftBottom[1];\n\n    const widthResolution = geoBoundsWidth / pixelBoundsWidth;\n    const heightResolution = geoBoundsHeight / pixelBoundsHeight;\n    const r = Math.max(widthResolution, heightResolution);\n    const scale = r / frameState.viewState.resolution;\n\n    const center = toLonLat(getCenter(frameState.extent), projection);\n    const angle = (-frameState.viewState.rotation * 180) / Math.PI;\n\n    d3Projection\n      .scale(scale)\n      .center(center)\n      .translate([width / 2, height / 2])\n      .angle(angle);\n\n    d3Path = d3Path.projection(d3Projection);\n    d3Path(this.features);\n\n    this.svg.attr('width', width);\n    this.svg.attr('height', height);\n\n    this.svg.select('path').attr('d', d3Path);\n\n    return this.svg.node();\n  }\n}\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new StadiaMaps({\n        layer: 'stamen_watercolor',\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([-97, 38]),\n    zoom: 4,\n  }),\n});\n\n/**\n * Load the topojson data and create an ol/layer/Layer for that data.\n */\njson('data/topojson/us.json').then(function (us) {\n  const layer = new CanvasLayer({\n    features: feature(us, us.objects.counties),\n  });\n\n  map.addLayer(layer);\n});\n"],"names":["x","topology","o","id","bbox","properties","geometry","transformPoint","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","i","j","n","length","output","Array","arcs","arc","points","pop","a","k","push","array","t","reverse","point","p","line","ring","polygon","map","coordinates","type","geometries","object","epsilon","epsilon2","pi","Math","PI","halfPi","quarterPi","tau","abs","atan","atan2","cos","exp","ceil","log","floor","hypot","sin","pow","sign","sqrt","tan","asin","b","compose","y","invert","rotationIdentity","lambda","phi","round","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","cosPhi","z","noop","lines","m","lineStart","lineEnd","rejoin","concat","shift","result","Intersection","other","entry","this","e","v","segments","compareIntersection","startInside","interpolate","stream","subject","clip","forEach","segment","p0","p1","pointEqual","sort","start","current","isSubject","constructor","_partials","Float64Array","_n","add","hi","lo","valueOf","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","longitude","merge","arrays","from","flatten","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","intersection","phiArc","polygonContains","sphere","pointLine","clean","ringSegments","filter","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","step","circleRadius","acos","clipMax","clipMin","clipRectangle","x1","y1","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","r","ax","ay","transformer","methods","s","TransformStream","key","streamGeometry","streamGeometryType","hasOwnProperty","prototype","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","closed","coordinate","Infinity","boundsStream","bounds","fit","projection","fitBounds","clipExtent","fitExtent","extent","w","h","maxDepth","cosMinDistance","project","delta2","resampleLineTo","c0","c1","depth","d2","c","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","apply","resample","reset","transformRotate","_","arguments","undefined","clipAngle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","A","u","uu","t2","q","polar","q1","code","v0","v00","point2","reflectX","reflectY","precision","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","projectionStream","contextStream","path","measure","phi00","deltaSum","ranges","range","areaRing","dLambda","sdLambda","adLambda","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","feature","merged","deltaMax","responseJson","response","ok","Error","status","statusText","json","CanvasLayer","Layer","options","super","svg","document","createElement","style","datum","attr","getSourceState","render","frameState","viewState","d3Projection","d3Path","pixelBounds","pixelBoundsWidth","pixelBoundsHeight","geoBoundsLeftBottom","geoBoundsRightTop","geoBoundsWidth","getExtent","widthResolution","heightResolution","resolution","select","node","Map","layers","Tile","source","StadiaMaps","layer","target","view","View","zoom","init","fetch","then","us","objects","counties","addLayer"],"sourceRoot":""}