{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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CAEA,IAEIytF,GAuBAC,GAAiB,CACjB,YAAe,CACX,EACA,EACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,OAAU,CACN,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,EACA,EACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,MAAS,CACL,IACA,GACA,GACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,GACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,GACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,GACA,GACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,SAAY,CACR,EACA,EACA,IACA,GAEJ,SAAY,CACR,EACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,GACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,EACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,qBAAwB,CACpB,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,IACA,IACA,GAEJ,aAAgB,CACZ,I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","sources":["webpack:///../node_modules/color-name/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/math.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../node_modules/pbf/index.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../node_modules/quickselect/index.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../node_modules/color-space/rgb.js","webpack:///../node_modules/color-space/xyz.js","webpack:///../node_modules/color-space/luv.js","webpack:///../node_modules/color-space/lchuv.js","webpack:///../node_modules/color-parse/index.js","webpack:///../node_modules/color-space/hsl.js","webpack:///../src/ol/color.js","webpack:///../node_modules/color-rgba/index.js","webpack:///../src/ol/has.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/DataTile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/DataTile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/net.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        (evt) => {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const tileGrid = this.getLayer().getSource().tileGrid;\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @override\n   */\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @override\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Array<import(\"./render/canvas/ExecutorGroup.js\").default>}\n     */\n    this.executorGroups = [];\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    releaseCanvas(this.context_);\n    canvasPool.push(this.context_.canvas);\n    this.context_ = null;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getCacheKeyForTileKey} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache_ = new TileCache(128);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   * @override\n   */\n  clear() {\n    this.sourceTileCache_.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache_.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        const sourceTile = this.sourceTileCache_.containsKey(tileUrl)\n          ? this.sourceTileCache_.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction,\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          this.sourceTileCache_.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { toPromise } from 'ol/functions.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport TileState from 'ol/TileState.js';\nimport { VectorTile } from 'ol';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { METERS_PER_UNIT } from 'ol/proj/Units.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { get as get$1, getUserProjection, getPointResolution, fromLonLat, equivalent } from 'ol/proj.js';\nimport { getCenter, getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_byte(parseFloat(str) / 100 * 255);\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_float(parseFloat(str) / 100);\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        h += 1;\n    else if (h > 1)\n        h -= 1;\n    if (h * 6 < 1)\n        return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1)\n        return m2;\n    if (h * 3 < 2)\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        return kCSSColorTable[str].slice();\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                return null;\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                return null;\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor_1(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${ Math.round(r) },${ Math.round(g) },${ Math.round(b) },${ a })`;\n    }\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha() {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(stop => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        const expression = [\n            'step',\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = [\n            'match',\n            get\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${ type }`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error(`Unknown zoom function type \"${ type }\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nclass ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${ name } not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        const itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? `array<${ itemType }, ${ type.N }>` : type.itemType.kind === 'value' ? 'array' : `array<${ itemType }>`;\n    } else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${ toString$1(expected) } but found ${ toString$1(t) } instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n            sensitivity: this.sensitivity,\n            usage: 'search'\n        });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n    }\n}\n\n//      \nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\n                    'image',\n                    section.image.name\n                ]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = [\n                    'literal',\n                    section.fontStack.split(',')\n                ];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null;\n        // treat empty values as no image\n        return new ResolvedImage({\n            name,\n            available: false\n        });\n    }\n    serialize() {\n        return [\n            'image',\n            this.name\n        ];\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return `Invalid rgba value [${ value.join(', ') }]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return `Invalid rgba value [${ [\n            r,\n            g,\n            b,\n            a\n        ].join(', ') }]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\n                'literal',\n                this.value\n            ];\n        } else if (this.value instanceof Color$1) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            return this.value;\n        }\n    }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nvar RuntimeError$1 = RuntimeError;\n\nconst types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$2) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$2[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array$1(itemType, N);\n        } else {\n            type = types$2[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError$1(`Expected value to be of type ${ toString$1(this.type) }, but found ${ toString$1(typeOf(value)) } instead.`);\n            }\n        }\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array$1(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n                nextTokenMayBeObject = true;\n                sections.push({\n                    content,\n                    scale: null,\n                    font: null,\n                    textColor: null\n                });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error(`No image name provided.`);\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return [\n            'image',\n            this.input.serialize()\n        ];\n    }\n}\n\nconst types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        const name = args[0];\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const type = types$1[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color$1) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${ JSON.stringify(input) }: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError$1(error || `Could not parse color from value '${ typeof input === 'string' ? input : String(JSON.stringify(input)) }'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError$1(`Could not convert ${ JSON.stringify(value) } to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n        } else {\n            return toString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{\n                    content: this.args[0],\n                    scale: null,\n                    font: null,\n                    textColor: null\n                }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${ this.type.kind }`];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n    id() {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    distanceFromCenter() {\n        if (this.featureTileCoord && this.featureDistanceData) {\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n            // Distance is calculated as `dot(d, v)`\n            const dist = bX * dX + bY * dY;\n            return dist;\n        }\n        return 0;\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color$1.parse(input);\n        }\n        return cached;\n    }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ? definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ? [[\n                definition[1],\n                definition[2]\n            ]] : definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) || // varags\n        signature.length === args.length - 1    // correct param count\n);\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${ params.length } arguments, but found ${ parsedArgs.length } instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString$1(parsed.type));\n            }\n            context.error(`Expected arguments of type ${ signatures }, but found (${ actualTypes.join(', ') }) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${ signature.map(toString$1).join(', ') })`;\n    } else {\n        return `(${ toString$1(signature.type) }...)`;\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\n            'collator',\n            options\n        ];\n    }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    const vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tilePoints = [];\n    if (!geometry)\n        return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tileLines = [];\n    if (!geometry)\n        return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'within',\n            this.geojson\n        ];\n    }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${ name }\". Make sure \"${ name }\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'var',\n            this.name\n        ];\n    }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${ part }]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = [\n                'literal',\n                expr\n            ];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion$1(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion$1(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${ typeof op } instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                    const ec = new EvaluationContext$1();\n                    try {\n                        parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${ typeof expr } instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${ this.key }${ keys.map(k => `[${ k }]`).join('') }`;\n        this.errors.push(new ParsingError$1(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = [\n            'step',\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        epsilon = 0.000001;\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            return t2;\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            break;\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        return t0;\n    if (t2 > t1)\n        return t1;\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            return t2;\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nconst lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nconst hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${ String(interpolation[0]) }`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n            return context.error(`Type ${ toString$1(outputType) } is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);    // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = [\n                    'exponential',\n                    this.interpolation.base\n                ];\n            }\n        } else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [\n            this.operator,\n            interpolation,\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${ args.length - 1 } instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${ typeof name } instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([\n                name,\n                value\n            ]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } > ${ array.length - 1 }.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError$1(`Array index must be an integer, but found ${ index } instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'at',\n            this.index.serialize(),\n            this.input.serialize()\n        ];\n    }\n}\nvar At$1 = At;\n\n//      \nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (haystack == null)\n            return false;\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'in',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\n                'index-of',\n                this.needle.serialize(),\n                this.haystack.serialize(),\n                fromIndex\n            ];\n        }\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${ Number.MAX_SAFE_INTEGER }.`);\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = [\n            'match',\n            this.input.serialize()\n        ];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {};\n        // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([\n                    this.cases[label],\n                    [label]\n                ]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nvar Match$1 = Match;\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([\n                test,\n                result\n            ]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [\n                array$1(ValueType),\n                StringType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${ toString$1(input.type) } instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\n                'slice',\n                this.input.serialize(),\n                this.beginIndex.serialize(),\n                endIndex\n            ];\n        }\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize()\n        ];\n    }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(lhs.type) }'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(rhs.type) }'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${ toString$1(lhs.type) }' and '${ toString$1(rhs.type) }'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1(`Expected arguments for \"${ op }\" to be (string, string) or (number, number), but found (${ lt.kind }, ${ rt.kind }) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n    // BCP 47 language tag\n    // ISO 4217 currency code, required if style=currency\n    // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    // Default 0\n    // Default 3\n    constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\n            'number-format',\n            this.number.serialize(),\n            options\n        ];\n    }\n}\n\n//      \nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${ args.length - 1 } instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${ toString$1(input.type) } instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError$1(`Expected value to be of type string or array, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError$1(error);\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = i + j >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => {\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        ctx => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        ctx => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        ctx => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        ctx => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        ctx => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        ctx => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        ctx => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ],\n            [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        ctx => ctx.id() !== null && ctx.id() !== undefined\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext$1();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError$1(`Expected value to be one of ${ Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ') }, but found ${ JSON.stringify(val) } instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(child => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n    if (filter === null || filter === undefined) {\n        return {\n            filter: () => true,\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = filter;\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${ JSON.stringify(filterExp, null, 2) }\n        `);\n    }\n    // Compile the static component of the filter\n    const filterSpec = spec[`filter_${ layerType }`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    } else {\n        filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    const needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    let isBranchingDynamically = false;\n    const branches = [];\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return op !== 'any';\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-${ op }`,\n            value\n        ];\n    case '$id':\n        return [\n            `filter-id-${ op }`,\n            value\n        ];\n    default:\n        return [\n            `filter-${ op }`,\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            `filter-id-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [\n            `filter-has`,\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(k => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 200,\n    'extra-light': 200,\n    light: 300,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    'extra-bold': 800,\n    'ultra-bold': 800,\n    heavy: 900,\n    black: 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900,\n    'ultra-black': 950,\n    'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                haveStyle = true;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n                haveStyle = true;\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n                haveWeight = true;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    const startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    const startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected sprites url: ${ url }`);\n    }\n    const sprite = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ sprite }/sprite?access_token=${ token }`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    const startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected style url: ${ url }`);\n    }\n    const style = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ style }?&access_token=${ token }`;\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    const urlObject = new URL(url, styleUrl);\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        if (!urlObject.searchParams.has(tokenParam)) {\n            urlObject.searchParams.set(tokenParam, token);\n        }\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return `https://api.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}${ sizeFactor }.webp?access_token=${ token }`;\n    }\n    return `https://{a-d}.tiles.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}.vector.pbf?access_token=${ token }`;\n}\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    let functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (const key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    let filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst defaultResolutions = (function () {\n    const resolutions = [];\n    for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    let i = 0;\n    const ii = resolutions.length;\n    for (; i < ii; ++i) {\n        const candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            const zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nfunction getResolutionForZoom(zoom, resolutions) {\n    const base = Math.floor(zoom);\n    const factor = Math.pow(2, zoom - base);\n    return resolutions[base] / factor;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    const transformedRequest = options.transformRequest ? options.transformRequest(url, resourceType) || url : url;\n    const pendingRequest = toPromise(() => transformedRequest).then(transformedRequest => {\n        if (!(transformedRequest instanceof Request)) {\n            transformedRequest = new Request(transformedRequest);\n        }\n        if (!transformedRequest.headers.get('Accept')) {\n            transformedRequest.headers.set('Accept', 'application/json');\n        }\n        if (metadata) {\n            metadata.request = transformedRequest;\n        }\n        return fetch(transformedRequest).then(function (response) {\n            delete pendingRequests[url];\n            return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n        }).catch(function (error) {\n            delete pendingRequests[url];\n            return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    });\n    pendingRequests[url] = [\n        transformedRequest,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                const glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n    const cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    let promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        let tileLoadFunction;\n        if (options.transformRequest) {\n            tileLoadFunction = (tile, src) => {\n                const transformedRequest = options.transformRequest ? options.transformRequest(src, 'Tiles') || src : src;\n                if (tile instanceof VectorTile) {\n                    tile.setLoader((extent, resolution, projection) => {\n                        toPromise(() => transformedRequest).then(transformedRequest => {\n                            fetch(transformedRequest).then(response => response.arrayBuffer()).then(data => {\n                                const format = tile.getFormat();\n                                const features = format.readFeatures(data, {\n                                    extent: extent,\n                                    featureProjection: projection\n                                });\n                                // @ts-ignore\n                                tile.setFeatures(features);\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        });\n                    });\n                } else {\n                    const img = tile.getImage();\n                    toPromise(() => transformedRequest).then(transformedRequest => {\n                        if (transformedRequest instanceof Request) {\n                            fetch(transformedRequest).then(response => response.blob()).then(blob => {\n                                const url = URL.createObjectURL(blob);\n                                img.addEventListener('load', () => URL.revokeObjectURL(url));\n                                img.addEventListener('error', () => URL.revokeObjectURL(url));\n                                img.src = url;\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        } else {\n                            img.src = transformedRequest;\n                        }\n                    });\n                }\n            };\n        }\n        const url = glSource.url;\n        if (url && !glSource.tiles) {\n            const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve({\n                    tileJson: Object.assign({}, glSource, {\n                        url: undefined,\n                        tiles: expandUrl(normalizedSourceUrl)\n                    }),\n                    tileLoadFunction\n                });\n            } else {\n                const metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url);\n                    });\n                    return Promise.resolve({\n                        tileJson,\n                        tileLoadFunction\n                    });\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n                })\n            });\n            promise = Promise.resolve({\n                tileJson: Object.assign({}, glSource),\n                tileLoadFunction\n            });\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    const imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = `rgba(${ haloColor.r * 255 },${ haloColor.g * 255 },${ haloColor.b * 255 },${ haloColor.a })`;\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    const imageCanvas = createCanvas(area.width, area.height);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const dist = data[index + 3] / 255;\n            const buffer = 0.75;\n            const gamma = 0.1;\n            const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        let textWithLetterSpacing = '';\n        const lines = text.split('\\n');\n        const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (let l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        const hardLines = text.split('\\n');\n        const lines = [];\n        for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    let wrappedText = measureCache[key];\n    if (!wrappedText) {\n        const words = text.split(' ');\n        if (words.length > 1) {\n            const ctx = getMeasureContext();\n            ctx.font = font;\n            const oneEm = ctx.measureText('M').width;\n            const maxWidth = oneEm * em;\n            let line = '';\n            const lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (let i = 0, ii = words.length; i < ii; ++i) {\n                const word = words[i];\n                const testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                const line = lines[i];\n                if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n                    const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line;\n                        i -= 1;\n                    } else {\n                        lines[i] = line + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n                const line = lines[i];\n                const next = lines[i + 1];\n                if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    const lineWords = line.split(' ');\n                    const lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        const styleSheets = document.styleSheets;\n        for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n            const styleSheet = styleSheets[i];\n            try {\n                const cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n                        const cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            const match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n    const fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    const fontDescriptions = [];\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        const font = fonts[i];\n        const cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        const parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n        const fontDescription = fontDescriptions[i];\n        const family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(`${ fontDescription[2] }\\n${ fontDescription[1] } \\n${ family }`) !== 100) {\n                const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    const markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\nconst types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nconst anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n    const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    }\n    return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = { zoom: 0 };\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    const layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    const functions = functionCache[layerId];\n    if (!functions[property]) {\n        let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        const propertySpec = spec[`${ layoutOrPaint }_${ layer.type }`][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        let isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            const compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n    const allowOverlap = getValue(layer, 'layout', `${ prefix }-allow-overlap`, zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    const ignorePlacement = getValue(layer, 'layout', `${ prefix }-ignore-placement`, zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        const a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n    recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    let spriteImage, spriteImageSize;\n    let spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            const img = new Image();\n            let blobUrl;\n            toPromise(() => spriteImageUrl).then(spriteImageUrl => {\n                if (spriteImageUrl instanceof Request) {\n                    fetch(spriteImageUrl).then(response => response.blob()).then(blob => {\n                        blobUrl = URL.createObjectURL(blob);\n                        img.src = blobUrl;\n                    }).catch(() => {\n                    });\n                } else {\n                    img.crossOrigin = 'anonymous';\n                    img.src = spriteImageUrl;\n                    if (blobUrl) {\n                        URL.revokeObjectURL(blobUrl);\n                    }\n                }\n            });\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            const worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    const allLayers = derefLayers(glStyle.layers);\n    const layersBySourceLayer = {};\n    const mapboxLayers = [];\n    const iconImageCache = {};\n    const patternCache = {};\n    const functionCache = getFunctionCache(glStyle);\n    const filterCache = getFilterCache(glStyle);\n    let mapboxSource;\n    for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n        const layer = allLayers[i];\n        const layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1) {\n            const sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                const source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error(`Source \"${ mapboxSource }\" is not defined`);\n                }\n                const type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(`Source \"${ mapboxSource }\" is not of type \"vector\" or \"geojson\", but \"${ type }\"`);\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error(`Layer \"${ layerId }\" does not use source \"${ mapboxSource }`);\n            }\n            let layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    const textHalo = new Stroke();\n    const textColor = new Fill();\n    const styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    const styleFunction = function (feature, resolution, onlyLayer) {\n        const properties = feature.getProperties();\n        const layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        let zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        const type = types[feature.getGeometry().getType()];\n        const f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        let stylesLength = -1;\n        let featureBelongsToLayer;\n        for (let i = 0, ii = layers.length; i < ii; ++i) {\n            const layerData = layers[i];\n            const layer = layerData.layer;\n            const layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            const layout = layer.layout || emptyObj$1;\n            const paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            const filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                let color, opacity, fill, stroke, strokeColor, style;\n                const index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                const icon_cache_key = icon + '.' + opacity;\n                                let pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    const spriteImageData = spriteData[icon];\n                                    const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    const ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    if (!('line-pattern' in paint)) {\n                        color = colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState));\n                    } else {\n                        color = undefined;\n                    }\n                    const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                let hasImage = false;\n                let text = null;\n                let placementAngle = 0;\n                let icon, iconImg, skipLabel;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        let styleGeom = undefined;\n                        const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n                            const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                const geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    const extent = geom.getExtent();\n                                    const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], 2, {}, undefined);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            const stride = geom.getStride();\n                                            const coordinates = geom.getFlatCoordinates();\n                                            for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                                                const x1 = coordinates[i];\n                                                const y1 = coordinates[i + 1];\n                                                const x2 = coordinates[i + stride];\n                                                const y2 = coordinates[i + stride + 1];\n                                                const minX = Math.min(x1, x2);\n                                                const minY = Math.min(y1, y2);\n                                                const maxX = Math.max(x1, x2);\n                                                const maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    let iconCacheKey = `${ icon }.${ iconSize }.${ haloWidth }.${ haloColor }`;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += `.${ iconColor }`;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        const declutterMode = getDeclutterMode(layer, zoom, f, 'icon', functionCache);\n                                        let displacement;\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[0] *= iconSize;\n                                            displacement[1] *= -iconSize;\n                                        }\n                                        let color = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            const iconOptions = {\n                                                color: color,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode,\n                                                scale: iconSize\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            const spriteImageData = spriteData[icon];\n                                            let img, size, offset;\n                                            if (haloWidth) {\n                                                if (spriteImageData.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor || [\n                                                        0,\n                                                        0,\n                                                        0,\n                                                        1\n                                                    ]), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData.width,\n                                                        height: spriteImageData.height,\n                                                        pixelRatio: spriteImageData.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                                                }\n                                            } else {\n                                                if (spriteImageData.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                size = [\n                                                    spriteImageData.width,\n                                                    spriteImageData.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData.x,\n                                                    spriteImageData.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color,\n                                                img: img,\n                                                // @ts-ignore\n                                                imgSize: spriteImageSize,\n                                                size: size,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    const circleTranslate = getValue(layer, 'paint', 'circle-translate', zoom, f, functionCache, featureState);\n                    const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth + '.' + circleTranslate[0] + '.' + circleTranslate[1];\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            displacement: [\n                                circleTranslate[0],\n                                -circleTranslate[1]\n                            ],\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce((acc, chunk, i) => {\n                                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                let text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (let i = 0, ii = text.length; i < ii; ++i) {\n                                    if (i > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    const declutterMode = getDeclutterMode(layer, zoom, f, 'text', functionCache);\n                    if (!style.getText()) {\n                        style.setText(text);\n                    }\n                    text = style.getText();\n                    if (!text || 'getDeclutterMode' in text && text.getDeclutterMode() !== declutterMode) {\n                        text = new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ],\n                            // @ts-ignore\n                            declutterMode: declutterMode\n                        });\n                        style.setText(text);\n                    }\n                    const textTransform = getValue(layer, 'layout', 'text-transform', zoom, f, functionCache, featureState);\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n                    }\n                    const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    let textAlign;\n                    if (placement === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement);\n                    }\n                    if (placement === 'line' && typeof text.setRepeat === 'function') {\n                        const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement === 'point');\n                    let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    let vOffset = 0;\n                    let hOffset = 0;\n                    if (placement == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    let textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor && textHaloWidth > 0) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        const halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    const padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    const evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    const elevationImage = inputs[0];\n    const width = elevationImage.width;\n    const height = elevationImage.height;\n    const elevationData = elevationImage.data;\n    const shadeData = new Uint8ClampedArray(elevationData.length);\n    const dp = data.resolution * 2;\n    const maxX = width - 1;\n    const maxY = height - 1;\n    const pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    const twoPi = 2 * Math.PI;\n    const halfPi = Math.PI / 2;\n    const sunEl = Math.PI * data.sunEl / 180;\n    const sunAz = Math.PI * data.sunAz / 180;\n    const cosSunEl = Math.cos(sunEl);\n    const sinSunEl = Math.sin(sunEl);\n    const highlightColor = data.highlightColor;\n    const shadowColor = data.shadowColor;\n    const accentColor = data.accentColor;\n    const encoding = data.encoding;\n    let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding = 'mapbox') {\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        const searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach((value, key) => {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n    let styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    let options;\n    let sourceOrLayers;\n    let updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error(`No ${ type } source found in the glStyle.`));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        const targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        const tileGrid = layer.getSource().getTileGrid();\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom()) && tileGrid.getMinZoom() > 0) {\n                            layer.setMaxResolution(getResolutionForZoom(Math.max(0, tileGrid.getMinZoom() - 1e-12), tileGrid.getResolutions()));\n                        }\n                    });\n                }\n                const glSource = glStyle.sources[sourceId];\n                let source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                const targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            let spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        const projection = get$1(options.projection);\n                        const units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, (fonts, templateUrl = options.webfonts) => getFonts(fonts, templateUrl), options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error(`Nothing to show for source [${ sourceId }]`));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage') || spriteImageUrl;\n                        if (transformed instanceof Request || transformed instanceof Promise) {\n                            spriteImageUrl = transformed;\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error(`Sprites cannot be loaded: ${ spriteUrl }: ${ err.message }`));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().insertAt(0, setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    let sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    const bounds = tileJSON.bounds;\n    if (bounds) {\n        const ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        const tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    const tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    const tileJSONDoc = tileJSONSource.getTileJSON();\n    const tileGrid = tileJSONSource.getTileGrid();\n    const projection = get$1(options.projection || 'EPSG:3857');\n    const extent = extentFromTileJSON(tileJSONDoc, projection);\n    const projectionExtent = projection.getExtent();\n    const minZoom = tileJSONDoc.minzoom || 0;\n    const maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n    const sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    const background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    const layout = glLayer.layout || {};\n    const paint = glLayer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    let opacity;\n    const bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    const div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render(frameState) {\n            const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJson, options);\n            sourceOptions.tileLoadFunction = tileLoadFunction;\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    const layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    const projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return `{bbox-${ projCode.toLowerCase().replace(/[^a-z0-9]/g, '-') }}`;\n}\nfunction setupRasterSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const source = new TileJSON({\n                interpolate: options.interpolate === undefined ? true : options.interpolate,\n                transition: 0,\n                crossOrigin: 'anonymous',\n                tileJSON: tileJson\n            });\n            source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n            if (options.projection) {\n                //@ts-ignore\n                source.projection = get$1(options.projection);\n            }\n            const getTileUrl = source.getTileUrlFunction();\n            if (tileLoadFunction) {\n                source.setTileLoadFunction(tileLoadFunction);\n            }\n            source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n                const bboxTemplate = getBboxTemplate(projection);\n                let src = getTileUrl(tileCoord, pixelRatio, projection);\n                if (src.indexOf(bboxTemplate) != -1) {\n                    const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                    src = src.replace(bboxTemplate, bbox.toString());\n                }\n                return src;\n            });\n            source.set('mapbox-source', glSource);\n            resolve(source);\n        }).catch(function (error) {\n            reject(error);\n        });\n    });\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    const layer = new TileLayer();\n    setupRasterSource(glSource, styleUrl, options).then(function (source) {\n        layer.setSource(source);\n    }).catch(function () {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    const layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    const geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    const data = glSource.data;\n    const sourceOptions = {};\n    if (typeof data == 'string') {\n        const geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            const extentUrl = (extent, resolution, projection) => {\n                const bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, `${ extent.join(',') }`);\n            };\n            const source = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                loader: (extent, resolution, projection, success, failure) => {\n                    const url = typeof extentUrl === 'function' ? extentUrl(extent, resolution, projection) : extentUrl;\n                    fetchResource('GeoJSON', url, options).then(json => {\n                        const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                        source.addFeatures(features);\n                        success(features);\n                    }).catch(response => {\n                        source.removeLoadedExtent(extent);\n                        failure();\n                    });\n                },\n                strategy: bbox\n            });\n            source.set('mapbox-source', glSource);\n            return source;\n        }\n        const source = new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl,\n            loader: (extent, resolution, projection, success, failure) => {\n                fetchResource('GeoJSON', geoJsonUrl, options).then(json => {\n                    const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                    source.addFeatures(features);\n                    success(features);\n                }).catch(response => {\n                    source.removeLoadedExtent(extent);\n                    failure();\n                });\n            }\n        });\n        return source;\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    const source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    let zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        const glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        const mapboxLayers = derefLayers(glStyle.layers);\n        const layerMapboxLayerids = layer.get('mapbox-layers');\n        const visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    const functionCache = getFunctionCache(glStyle);\n    const glLayers = glStyle.layers;\n    const type = glLayer.type;\n    const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    const glSource = glStyle.sources[id];\n    let layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = getPointResolution(options.projection || 'EPSG:3857', event.resolution, getCenter(event.extent), 'm');\n            const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    const glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    const promises = [];\n    let view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            const projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl,\n        options\n    });\n    const glLayers = glStyle.layers;\n    let layerIds = [];\n    let layer, glSourceId, id;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        const type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            // eslint-disable-next-line no-console\n            console.debug(`layers[${ i }].type \"${ type }\" not supported`);\n            continue;\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n    let promise;\n    /** @type {Map|LayerGroup} */\n    let mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error(`Could not load ${ style }: ${ err.message }`));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n    let minZoom = 24;\n    let maxZoom = 0;\n    const glLayers = glStyle.layers;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        const setStyle = function () {\n            const source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    const sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions), getResolutionForZoom(Math.max(0, sourceMinZoom - 1e-12), tileGrid.getResolutions())));\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(getResolutionForZoom(maxZoom, defaultResolutions));\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions));\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        const layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    const style = mapOrGroup.get('mapbox-style');\n    const layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    let spliceIndex;\n    let sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error(`Layer with id \"${ beforeLayerId }\" not found.`);\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    let sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n        const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" already exists.`);\n    }\n    const sourceLayerId = mapboxLayers[sourceIndex].id;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    const index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" not found.`);\n    }\n    const oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nfunction updateMapboxSource(mapOrGroup, id, mapboxSource) {\n    const currentSource = getSource(mapOrGroup, id);\n    const layers = mapOrGroup.getLayers().getArray().filter(function (layer) {\n        return (layer instanceof VectorLayer || layer instanceof TileLayer || layer instanceof VectorTileLayer) && layer.getSource() === currentSource;\n    });\n    const metadata = mapOrGroup.get('mapbox-metadata');\n    let newSourcePromise;\n    switch (mapboxSource.type) {\n    case 'vector':\n        newSourcePromise = setupVectorSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    case 'geojson':\n        newSourcePromise = Promise.resolve(setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options));\n        break;\n    case 'raster':\n    case 'raster-dem':\n        newSourcePromise = setupRasterSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    default:\n        return Promise.reject(new Error('Unsupported source type ' + mapboxSource.type));\n    }\n    newSourcePromise.then(function (newSource) {\n        layers.forEach(function (layer) {\n            layer.setSource(newSource);\n        });\n    });\n    return newSourcePromise;\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    const layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    const layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const layers = glStyle.layers;\n    layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n    const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    const result = [];\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error(`Map or layer for source \"${ feature.source }\" not found.`);\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n    /**\n   * @param {Error} error error object.\n   */\n    constructor(error) {\n        super(EventType.ERROR);\n        /**\n     * @type {Error}\n     */\n        this.error = error;\n    }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/render/Feature.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n    /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n    constructor(options) {\n        const declutter = 'declutter' in options ? options.declutter : true;\n        const source = new VectorTileSource({\n            state: 'loading',\n            format: new MVT()\n        });\n        super({\n            source: source,\n            background: options.background === false ? null : options.background,\n            declutter: declutter,\n            className: options.className,\n            opacity: options.opacity,\n            visible: options.visible,\n            zIndex: options.zIndex,\n            minResolution: options.minResolution,\n            maxResolution: options.maxResolution,\n            minZoom: options.minZoom,\n            maxZoom: options.maxZoom,\n            renderOrder: options.renderOrder,\n            renderBuffer: options.renderBuffer,\n            renderMode: options.renderMode,\n            map: options.map,\n            updateWhileAnimating: options.updateWhileAnimating,\n            updateWhileInteracting: options.updateWhileInteracting,\n            preload: options.preload,\n            useInterimTilesOnError: options.useInterimTilesOnError,\n            properties: options.properties\n        });\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n        }\n        const url = options.styleUrl;\n        const promises = [applyStyle(this, url, options.layers || options.source, { accessToken: this.accessToken })];\n        if (this.getBackground() === undefined) {\n            promises.push(applyBackground(this, options.styleUrl, { accessToken: this.accessToken }));\n        }\n        Promise.all(promises).then(() => {\n            source.setState('ready');\n        }).catch(error => {\n            this.dispatchEvent(new ErrorEvent(error));\n            const source = this.getSource();\n            source.setState('error');\n        });\n    }\n}\n\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer, updateMapboxSource };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/streets-v2/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont,\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    ),\n  () => worker.postMessage({action: 'requestRender'}),\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState),\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel),\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      if (layer.getDeclutter() && !frameState.declutterTree) {\n        frameState.declutter = {};\n      }\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach((layer) => {\n    if (!layer.getRenderer().context) {\n      return;\n    }\n    layer.renderDeclutter(frameState, layer.getLayerState());\n    layer.renderDeferred(frameState);\n  });\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData],\n  );\n});\n"],"names":["module","exports","serializer","replacer","cycleReplacer","stack","keys","key","value","slice","indexOf","join","length","thisPos","this","splice","push","Infinity","call","obj","spaces","JSON","stringify","getSerialize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","constructor","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","b","linearFindNearest","arr","direction","i","candidate","reverseSubArray","begin","end","tmp","data","extension","Array","isArray","equals","arr1","arr2","len1","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","arguments","apply","toPromise","err","Promise","reject","resolve","promiseGetter","clear","object","property","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","index","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Error","uidCounter_","getUid","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","assertion","errorMessage","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","name","tmp_","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","e","f","coordinate","x","y","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","matrixPrecision","map","round","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","intersects","applyTransform","transformFn","stops","width","height","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","squaredSegmentDistance","t","angleInDegrees","PI","r","lerp","decimals","factor","pow","ceil","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","last","pop","first","maxSquaredDistance","squaredDistance","douglasPeuckerArray","ends","simplifiedEnds","snap","tolerance","quantize","quantizeArray","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","NaN","maxSegmentLength","sort","segmentLength","abs","isNaN","getInteriorPointsOfMultiArray","endss","interiorPoints","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","coordinate1","coordinate2","cosAngle","sinAngle","worldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","levels","info","warn","error","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","add","projectionLike","replace","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","projections2","forwardTransform","inverseTransform","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","startOrientation","prevEndIndex","orientation","interpolatePoint","fraction","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","linearRingss","transform2D","destinationStride","j","k","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","RenderFeature","styleFunction","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","ends_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoint","flatCenter","getFlatInteriorPoints","getFlatMidpoint","getFlatMidpoints","midpoint","getOrientedFlatCoordinates","getSimplifiedGeometry","simplifyTransformed","getStride","getType","pixelExtent","projectedExtent","getEnds","enableSimplifyTransformed","getFlatCoordinates","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","simplify","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","getLayoutForStride","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","startsWith","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","deflateCoordinate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","linearRing","twiceArea","linearRings","LinearRing","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","appendPoint","multiPoint","getPoint","getPoints","points","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","transformed","fromProjection","toProjection","power","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","pos","readFields","readField","result","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","s","p","h","toNum","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","str","b0","b3","bytesPerSequence","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","LN2","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","ctor","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","ERROR","EMPTY","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","quickselect","left","compare","quickselectStep","defaultCompare","sd","swap","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","node","toBBox","nodesToSearch","children","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","item","createNode","remove","equalsFn","path","indexes","parent","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","cstr","space","parts","alpha","toLowerCase","base","parseInt","exec","dims","trim","split","shift","parseFloat","baseHues","endsWith","test","match","red","orange","yellow","green","blue","purple","hsl","t1","t2","t3","NO_COLOR","MAX_CACHE_SIZE","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","Number","parsed","normalize","asArray","ua","navigator","userAgent","WORKER_OFFSCREEN_CANVAS","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","passive","window","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","decodeFallback","image","src","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","ImageState","createPattern","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","asString","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","Set","featureId","encoded","expectedType","toString","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","prepareContainer","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","tileCoord","transition_","transition","transitionStarts_","release","setState","getTileCoord","getAlpha","time","inTransition","endTransition","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","loader_","loader","data_","error_","controller_","controller","getError","abort","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","highWaterMark","count_","entries_","oldest_","newest_","expireCache","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","Uint8ClampedArray","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","srcX","srcY","reproject_","dataSources","imageLike","tileData","arrayData","Float32Array","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","getTileSize","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","ImageData","leftToLoad","sourceListenKey","unlistenSources_","renderEdges_","TileRange","containsTileRange","tileRange","extend","getKeyZXY","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","layerIndex","getWrapX","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","pixelToCoordinateTransform","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","sourceRevision","renderedRevision_","enqueueTiles","initialZ","preload","minZ","zDirection","tileQueueKey","tileQueue","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","nextExtent","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","usedTiles","postRenderFunctions","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","viewHints","wantedResolution","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","getOverlaps","lastIndexOf","executorGroup","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","accumulator","getFeaturesInExtent","tileFeatures","hifi","tiles","getTileRenderTransform","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","group","clipContext","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","getUseInterimTilesOnError","format","format_","features_","url_","getFormat","onLoad","setFeatures","onError","setLoader","pruneExceptNewestZ","fromKey","tmpTileCoord","strict","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","useTile","zRegEx","xRegEx","yRegEx","dashYRegEx","expandUrl","url","urls","startCharCode","stopCharCode","charCode","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","tileCoordKey","urlTileCoord","replayState_","errorTileKeys","hasContext","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","onerror","send","defaultLoadFunction","sourceTileCache_","tileClass","tileGrids_","usedSourceTiles","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","newTile","getDefaultExportFromCjs","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","substr","ep","fname","params","parse","rgba","toArray01","toArray01PremultipliedAlpha","black","transparent","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","colorSpace","getFallback","defaultValue","curve","interpolated","re","literal","lastIndex","ParsingError","ParsingError$1","Scope","bindings","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","toString$1","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError$1","types$2","string","number","boolean","Assertion","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","types$1","Coercion","parseColor","Coercion$1","geometryTypes","EvaluationContext$1","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CompoundExpression$1","CollatorExpression","updateBBox","boxWithinBox","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","vectorQ","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","out","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","solve","UnitBezier$1","freeze","__proto__","from","to","Xn","Yn","Zn","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Interpolate$1","needsAnnotation","firstImage","Coalesce$1","Let","binding","Let$1","At","At$1","In$1","IndexOf","fromIndex","IndexOf$1","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Match$1","branches","_","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","types","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","create","ref","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","haveWeight","haveStyle","fontFamilies","maybeWeight","previousPart","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj$1","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","blobUrl","Request","fetch","response","blob","URL","createObjectURL","revokeObjectURL","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","metadata","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","observables","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}