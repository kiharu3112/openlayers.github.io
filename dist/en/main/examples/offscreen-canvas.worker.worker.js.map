{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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WAAc,CACV,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,OAAU,CACN,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,EACA,EACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,MAAS,CACL,IACA,GACA,GACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,GACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,GACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,GACA,GACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,SAAY,CACR,EACA,EACA,IACA,GAEJ,SAAY,CACR,EACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,GACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,I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","sources":["webpack:///../node_modules/color-name/index.js","webpack:///webpack/bootstrap","webpack:///../src/ol/ImageState.js","webpack:///../node_modules/color-parse/index.js","webpack:///../node_modules/color-space/rgb.js","webpack:///../node_modules/color-space/hsl.js","webpack:///../node_modules/color-space/xyz.js","webpack:///../node_modules/color-space/luv.js","webpack:///../node_modules/color-space/lchuv.js","webpack:///../src/ol/math.js","webpack:///../src/ol/color.js","webpack:///../node_modules/color-rgba/index.js","webpack:///../src/ol/has.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/console.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/proj/utm.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/format/GeoJSON.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/View.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/layer/Layer.js","webpack:///../node_modules/pbf/index.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileQueue.js","webpack:///../node_modules/rbush/node_modules/quickselect/index.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/net.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/DataTile.js","webpack:///../src/ol/vec/mat4.js","webpack:///../src/ol/webgl/Canvas.js","webpack:///../src/ol/reproj/glreproj.js","webpack:///../src/ol/reproj/DataTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/color\n */\nimport parseRgba from 'color-rgba';\nimport lchuv from 'color-space/lchuv.js';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * @return {string} Tile url.\n   */\n  getTileUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport PBF from 'pbf';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport {get} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/vec/mat4\n */\n\n/** @typedef {Array<number>} Mat4 */\n\n/**\n * @return {Mat4} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Mat4} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Mat4} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @param {Mat4} [out] mat4 frustum matrix will be written into\n * @return {Mat4} out\n */\nexport function orthographic(left, right, bottom, top, near, far, out) {\n  out = out ?? create();\n  const lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {Mat4} m The matrix to scale.\n * @param {number} x How much to scale in the x direction.\n * @param {number} y How much to scale in the y direction.\n * @param {number} z How much to scale in the z direction.\n * @param {Mat4} [out] The matrix to write to.\n * @return {Mat4} out\n */\nexport function scale(m, x, y, z, out) {\n  out = out ?? create();\n  out[0] = m[0] * x;\n  out[1] = m[1] * x;\n  out[2] = m[2] * x;\n  out[3] = m[3] * x;\n  out[4] = m[4] * y;\n  out[5] = m[5] * y;\n  out[6] = m[6] * y;\n  out[7] = m[7] * y;\n  out[8] = m[8] * z;\n  out[9] = m[9] * z;\n  out[10] = m[10] * z;\n  out[11] = m[11] * z;\n  out[12] = m[12];\n  out[13] = m[13];\n  out[14] = m[14];\n  out[15] = m[15];\n  return out;\n}\n\n/**\n * Translate a matrix.\n *\n * @param {Mat4} m the matrix to translate\n * @param {number} x How much to translate in the x direction.\n * @param {number} y How much to translate in the y direction.\n * @param {number} z How much to translate in the z direction.\n * @param {Mat4} [out] the receiving matrix\n * @return {Mat4} out\n */\nexport function translate(m, x, y, z, out) {\n  out = out ?? create();\n  let a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;\n\n  if (m === out) {\n    out[12] = m[0] * x + m[4] * y + m[8] * z + m[12];\n    out[13] = m[1] * x + m[5] * y + m[9] * z + m[13];\n    out[14] = m[2] * x + m[6] * y + m[10] * z + m[14];\n    out[15] = m[3] * x + m[7] * y + m[11] * z + m[15];\n  } else {\n    a00 = m[0];\n    a01 = m[1];\n    a02 = m[2];\n    a03 = m[3];\n    a10 = m[4];\n    a11 = m[5];\n    a12 = m[6];\n    a13 = m[7];\n    a20 = m[8];\n    a21 = m[9];\n    a22 = m[10];\n    a23 = m[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + m[12];\n    out[13] = a01 * x + a11 * y + a21 * z + m[13];\n    out[14] = a02 * x + a12 * y + a22 * z + m[14];\n    out[15] = a03 * x + a13 * y + a23 * z + m[15];\n  }\n\n  return out;\n}\n\n/**\n * @param {number} x x translation.\n * @param {number} y y translation.\n * @param {number} z z translation.\n * @param {Mat4} [out] optional matrix to store result\n * @return {Mat4} out\n */\nexport function translation(x, y, z, out) {\n  out = out ?? create();\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = x;\n  out[13] = y;\n  out[14] = z;\n  out[15] = 1;\n\n  return out;\n}\n","import * as mat4 from '../vec/mat4.js';\n\n/**\n * @module ol/webgl/Canvas\n */\n\nconst VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec4 a_texcoord;\n\n  uniform mat4 u_matrix;\n  uniform mat4 u_textureMatrix;\n\n  varying vec2 v_texcoord;\n\n  void main() {\n    gl_Position = u_matrix * a_position;\n    vec2 texcoord = (u_textureMatrix * a_texcoord).xy;\n    v_texcoord = texcoord;\n  }\n`;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (\n      v_texcoord.x < 0.0 ||\n      v_texcoord.y < 0.0 ||\n      v_texcoord.x > 1.0 ||\n      v_texcoord.y > 1.0\n    ) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/** @typedef {import(\"../transform.js\").Transform} Matrix */\n\n/**\n * Canvas-like operations implemented in webgl.\n */\nexport class Canvas {\n  /**\n   * @param {WebGLRenderingContext} gl Context to render in.\n   */\n  constructor(gl) {\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.program_ = createProgram(gl, FRAGMENT_SHADER, VERTEX_SHADER);\n\n    this.positionLocation = gl.getAttribLocation(this.program_, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(this.program_, 'a_texcoord');\n\n    this.matrixLocation = gl.getUniformLocation(this.program_, 'u_matrix');\n    this.textureMatrixLocation = gl.getUniformLocation(\n      this.program_,\n      'u_textureMatrix',\n    );\n    this.textureLocation = gl.getUniformLocation(this.program_, 'u_texture');\n\n    this.positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\n    this.positions = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.positions),\n      gl.STATIC_DRAW,\n    );\n\n    this.texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.texcoords = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.texcoords),\n      gl.STATIC_DRAW,\n    );\n  }\n\n  /**\n   * 2dContext drawImage call implemented in webgl.\n   * Unlike images, textures do not have a width and height associated\n   * with them so we'll pass in the width and height of the texture.\n   *\n   * @param {WebGLTexture} tex Image to draw.\n   * @param {number} texWidth Image width.\n   * @param {number} texHeight Image height.\n   * @param {number} srcX Top-left x-point to read src image.\n   * @param {number} srcY Top-left y-point to read src image.\n   * @param {number} [srcWidth] Width of source to read.\n   * @param {number} [srcHeight] Height of source to read.\n   * @param {number} [dstX] Top-left x-point of destination.\n   * @param {number} [dstY] Top-left y-point of destination.\n   * @param {number} [dstWidth] Width of written image in destination.\n   * @param {number} [dstHeight] Height of written image in destination.\n   * @param {number} [width] Width of canvas.\n   * @param {number} [height] Height of canvas.\n   */\n  drawImage(\n    tex,\n    texWidth,\n    texHeight,\n    srcX,\n    srcY,\n    srcWidth,\n    srcHeight,\n    dstX,\n    dstY,\n    dstWidth,\n    dstHeight,\n    width,\n    height,\n  ) {\n    const gl = this.gl_;\n\n    if (dstX === undefined) {\n      dstX = srcX;\n    }\n    if (dstY === undefined) {\n      dstY = srcY;\n    }\n    if (srcWidth === undefined) {\n      srcWidth = texWidth;\n    }\n    if (srcHeight === undefined) {\n      srcHeight = texHeight;\n    }\n    if (dstWidth === undefined) {\n      dstWidth = srcWidth;\n    }\n    if (dstHeight === undefined) {\n      dstHeight = srcHeight;\n    }\n    if (width === undefined) {\n      width = gl.canvas.width;\n    }\n    if (height === undefined) {\n      height = gl.canvas.height;\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n\n    gl.useProgram(this.program_);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n    gl.enableVertexAttribArray(this.texcoordLocation);\n    gl.vertexAttribPointer(this.texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // matrix for converting pixels to clip space\n    let matrix = mat4.orthographic(0, width, 0, height, -1, 1);\n    matrix = mat4.translate(matrix, dstX, dstY, 0);\n    matrix = mat4.scale(matrix, dstWidth, dstHeight, 1);\n    gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    let texMatrix = mat4.translation(srcX / texWidth, srcY / texHeight, 0);\n    texMatrix = mat4.scale(\n      texMatrix,\n      srcWidth / texWidth,\n      srcHeight / texHeight,\n      1,\n    );\n\n    gl.uniformMatrix4fv(this.textureMatrixLocation, false, texMatrix);\n    gl.uniform1i(this.textureLocation, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, this.positions.length / 2);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {GLenum} type Type of shader.\n * @param {string} source source of shader.\n * @return {WebGLShader} [progam] The program.\n */\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  if (shader === null) {\n    throw new Error('Shader compilation failed');\n  }\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader);\n    if (log === null) {\n      throw new Error('Shader info log creation failed');\n    }\n    throw new Error(log);\n  }\n\n  return shader;\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {string} fragmentSource Fragment shader source.\n * @param {string} vertexSource Vertex shader source.\n * @return {WebGLProgram} [progam] The program.\n */\nexport function createProgram(gl, fragmentSource, vertexSource) {\n  const program = gl.createProgram();\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n  if (program === null) {\n    throw new Error('Program creation failed');\n  }\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(program);\n    if (log === null) {\n      throw new Error('Program info log creation failed');\n    }\n    throw new Error();\n  }\n  return program;\n}\n","/**\n * @module ol/reproj/glreproj\n */\nimport {\n  createEmpty,\n  extend,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from '../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport * as mat4 from '../vec/mat4.js';\nimport {Canvas as WebGLCanvas, createProgram} from '../webgl/Canvas.js';\n\nconst EDGE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n  }\n`;\nconst EDGE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform vec4 u_val;\n  void main() {\n     gl_FragColor = u_val;\n  }\n`;\n\nconst TRIANGLE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec2 a_texcoord;\n\n  varying vec2 v_texcoord;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n     v_texcoord = a_texcoord;\n  }\n`;\nconst TRIANGLE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (v_texcoord.x < 0.0 || v_texcoord.x > 1.0 || v_texcoord.y < 0.0 || v_texcoord.y > 1.0) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/**\n * Create an html canvas element and returns its webgl context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement | OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {WebGLContextAttributes} [settings] CanvasRenderingContext2DSettings\n * @return {WebGLRenderingContext} The context.\n */\nexport function createCanvasContextWebGL(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {WebGLRenderingContext} */ (\n    canvas.getContext('webgl', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {WebGLRenderingContext} gl Context.\n */\nexport function releaseGLCanvas(gl) {\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n}\n\n/**\n * @type {Array<HTMLCanvasElement | OffscreenCanvas>}\n */\nexport const canvasGLPool = [];\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"../extent.js\").Extent} extent Extent.\n * @property {import(\"../extent.js\").Extent} [clipExtent] Clip extent.\n * @property {WebGLTexture} texture Texture.\n * @property {number} width Width of texture.\n * @property {number} height Height of texture.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {WebGLRenderingContext} gl the context to render in.\n * @param {number} width_ Width of the canvas.\n * @param {number} height_ Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"../extent.js\").Extent} targetExtent Target extent (tile).\n * @param {import(\"../reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {number} dataType What kind of data is the textures, must be gl.FLOAT or gl.UNSIGNED_BYTE\n * TODO: Allow setting renderEdges value in the data as this is done in \"data-space\".\n * @param {boolean | Array<number>} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchTexture.\n * @return {{framebuffer: WebGLFramebuffer, width: number, height: number, texture: WebGLTexture}} Canvas with reprojected data.\n */\nexport function render(\n  gl,\n  width_,\n  height_,\n  pixelRatio,\n  sourceResolution,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  dataType,\n  renderEdges,\n  interpolate,\n  drawSingle,\n) {\n  const width = Math.round(pixelRatio * width_);\n  const height = Math.round(pixelRatio * height_);\n  gl.canvas.width = width;\n  gl.canvas.height = height;\n\n  /** @type {WebGLFramebuffer | null} */\n  let resultFrameBuffer;\n  /** @type {WebGLTexture | null} */\n  let resultTexture;\n  {\n    resultTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, resultTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    resultFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      resultTexture,\n      0,\n    );\n  }\n\n  if (resultFrameBuffer === null) {\n    throw new Error('Could not create framebuffer');\n  }\n  if (resultTexture === null) {\n    throw new Error('Could not create texture');\n  }\n\n  if (sources.length === 0) {\n    return {\n      width,\n      height,\n      framebuffer: resultFrameBuffer,\n      texture: resultTexture,\n    };\n  }\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  /** @type {WebGLTexture | null} */\n  let stitchTexture;\n  /** @type {number} */\n  let stitchWidth;\n  /** @type {number} */\n  let stitchHeight;\n  const stitchScale = 1 / sourceResolution;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchTexture = gl.createTexture();\n    if (resultTexture === null) {\n      throw new Error('Could not create texture');\n    }\n    stitchWidth = Math.round(getWidth(sourceDataExtent) * stitchScale);\n    stitchHeight = Math.round(getHeight(sourceDataExtent) * stitchScale);\n\n    // Make sure we do not exceed the max texture size by lowering the resolution for this image.\n    // https://github.com/openlayers/openlayers/pull/15860#issuecomment-2254123580\n    const maxTexSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    const largeSide = Math.max(stitchWidth, stitchHeight);\n    const scaleFactor = largeSide > maxTexSize ? maxTexSize / largeSide : 1;\n    const stitchWidthFixed = Math.round(stitchWidth * scaleFactor);\n    const stitchHeightFixed = Math.round(stitchHeight * scaleFactor);\n\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      stitchWidthFixed,\n      stitchHeightFixed,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      stitchTexture,\n      0,\n    );\n    const webGLCanvas = new WebGLCanvas(gl);\n\n    sources.forEach(function (src, i, arr) {\n      const xPos =\n        (src.extent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n      const yPos =\n        -(src.extent[3] - sourceDataExtent[3]) * stitchScale * scaleFactor;\n      const srcWidth = getWidth(src.extent) * stitchScale * scaleFactor;\n      const srcHeight = getHeight(src.extent) * stitchScale * scaleFactor;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n      gl.viewport(0, 0, stitchWidthFixed, stitchHeightFixed);\n\n      if (src.clipExtent) {\n        const xPos =\n          (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n        const yPos =\n          -(src.clipExtent[3] - sourceDataExtent[3]) *\n          stitchScale *\n          scaleFactor;\n        const width = getWidth(src.clipExtent) * stitchScale * scaleFactor;\n        const height = getHeight(src.clipExtent) * stitchScale * scaleFactor;\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n          interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n        );\n      }\n\n      webGLCanvas.drawImage(\n        src.texture,\n        src.width,\n        src.height,\n        gutter,\n        gutter,\n        src.width - 2 * gutter,\n        src.height - 2 * gutter,\n        interpolate ? xPos : Math.round(xPos),\n        interpolate ? yPos : Math.round(yPos),\n        interpolate ? srcWidth : Math.round(xPos + srcWidth) - Math.round(xPos),\n        interpolate\n          ? srcHeight\n          : Math.round(yPos + srcHeight) - Math.round(yPos),\n        stitchWidthFixed,\n        stitchHeightFixed,\n      );\n\n      gl.disable(gl.SCISSOR_TEST);\n    });\n    gl.deleteFramebuffer(fb);\n  } else {\n    stitchTexture = sources[0].texture;\n    stitchWidth = sources[0].width;\n    stitchHeight = sources[0].width;\n  }\n\n  const targetTopLeft = getTopLeft(targetExtent);\n  const sourceTopLeft = getTopLeft(sourceDataExtent);\n\n  const getUVs = (\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ target,\n  ) => {\n    const u0 =\n      ((target[0][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v0 =\n      (-(target[0][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u1 =\n      ((target[1][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v1 =\n      (-(target[1][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u2 =\n      ((target[2][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v2 =\n      (-(target[2][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    return {u1, v1, u0, v0, u2, v2};\n  };\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n  gl.viewport(0, 0, width, height);\n\n  // Draw source to reprojtile\n  {\n    /** @type {Array<number>} */\n    const vertices = [];\n    /** @type {Array<number>} */\n    const texcoords = [];\n\n    const triProgram = createProgram(\n      gl,\n      TRIANGLE_FRAGMENT_SHADER,\n      TRIANGLE_VERTEX_SHADER,\n    );\n    gl.useProgram(triProgram);\n\n    // Bind image\n    const textureLocation = gl.getUniformLocation(triProgram, 'u_texture');\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    // Tell the shader to get the texture from texture unit 0\n    gl.uniform1i(textureLocation, 0);\n\n    // Calculate vert and tex coordinates.\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const source = triangle.source;\n      const target = triangle.target;\n      // Make sure that everything is on pixel boundaries\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      const su0 =\n        (source[0][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv0 =\n        -(source[0][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su1 =\n        (source[1][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv1 =\n        -(source[1][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su2 =\n        (source[2][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv2 =\n        -(source[2][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n\n      vertices.push(u1, v1, u0, v0, u2, v2);\n      texcoords.push(su1, sv1, su0, sv0, su2, sv2);\n    });\n\n    // Convert pixel space to clip space.\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(triProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const positionLocation = gl.getAttribLocation(triProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const texcoordLocation = gl.getAttribLocation(triProgram, 'a_texcoord');\n    const texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texcoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n  }\n\n  if (renderEdges) {\n    const edgeProgram = createProgram(\n      gl,\n      EDGE_FRAGMENT_SHADER,\n      EDGE_VERTEX_SHADER,\n    );\n    gl.useProgram(edgeProgram);\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(edgeProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const burnval = Array.isArray(renderEdges) ? renderEdges : [0, 0, 0, 255];\n    const burnvalLocation = gl.getUniformLocation(edgeProgram, 'u_val');\n    const isFloat = true;\n    if (isFloat) {\n      gl.uniform4fv(burnvalLocation, burnval);\n    } else {\n      gl.uniform4iv(burnvalLocation, burnval);\n    }\n\n    const positionLocation = gl.getAttribLocation(edgeProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    /** @type {Array<number>} */\n    const lines = triangulation.getTriangles().reduce(function (\n      /** @type {Array<number>} */ lines,\n      triangle,\n    ) {\n      const target = triangle.target;\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      return lines.concat([u1, v1, u0, v0, u0, v0, u2, v2, u2, v2, u1, v1]);\n    }, []);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n    gl.drawArrays(gl.LINES, 0, lines.length / 2);\n  }\n\n  return {\n    width,\n    height,\n    framebuffer: resultFrameBuffer,\n    texture: resultTexture,\n  };\n}\n","/**\n * @module ol/reproj/DataTile\n */\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceExtentResolution} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\nimport {\n  canvasGLPool,\n  createCanvasContextWebGL,\n  releaseGLCanvas,\n  render as renderReprojected,\n} from './glreproj.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {import(\"../transform.js\").Transform} [transformMatrix] Source transform matrix.\n * @property {boolean} [renderEdges] Render reprojection edges.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean | Array<number>}\n     */\n    this.renderEdges_ =\n      options.renderEdges !== undefined ? options.renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n      options.transformMatrix,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: tileDataR,\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n        bandCount: bandCount,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const outWidth = targetWidth * this.pixelRatio_;\n    const outHeight = targetHeight * this.pixelRatio_;\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    const bandCount = dataSources[0].bandCount;\n    const dataR = new dataSources[0].dataType(bandCount * outWidth * outHeight);\n\n    const gl = createCanvasContextWebGL(outWidth, outHeight, canvasGLPool, {\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    let willInterpolate;\n    const format = gl.RGBA;\n    let textureType;\n    if (dataSources[0].dataType == Float32Array) {\n      textureType = gl.FLOAT;\n      gl.getExtension('WEBGL_color_buffer_float');\n      gl.getExtension('OES_texture_float');\n      gl.getExtension('EXT_float_blend');\n      const extension = gl.getExtension('OES_texture_float_linear');\n      const canInterpolate = extension !== null;\n      willInterpolate = canInterpolate && this.interpolate;\n    } else {\n      textureType = gl.UNSIGNED_BYTE;\n      willInterpolate = this.interpolate;\n    }\n\n    const BANDS_PR_REPROJ = 4;\n    const reprojs = Math.ceil(bandCount / BANDS_PR_REPROJ);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n\n        const data = new dataSource.dataType(BANDS_PR_REPROJ * width * height);\n        const dataS = dataSource.data;\n        let offset = reproj * BANDS_PR_REPROJ;\n        for (let j = 0, len = data.length; j < len; j += BANDS_PR_REPROJ) {\n          data[j] = dataS[offset];\n          data[j + 1] = dataS[offset + 1];\n          data[j + 2] = dataS[offset + 2];\n          data[j + 3] = dataS[offset + 3];\n          offset += bandCount;\n        }\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        if (willInterpolate) {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        } else {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          format,\n          width,\n          height,\n          0,\n          format,\n          textureType,\n          data,\n        );\n\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          texture: texture,\n          width: width,\n          height: height,\n        });\n      }\n\n      const {framebuffer, width, height} = renderReprojected(\n        gl,\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        textureType,\n        this.renderEdges_,\n        willInterpolate,\n      );\n\n      // The texture is always RGBA.\n      const rows = width;\n      const cols = height * BANDS_PR_REPROJ;\n      const data = new dataSources[0].dataType(rows * cols);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.readPixels(0, 0, width, height, gl.RGBA, textureType, data);\n\n      let offset = reproj * BANDS_PR_REPROJ;\n      for (let i = 0, len = data.length; i < len; i += BANDS_PR_REPROJ) {\n        // The data read by `readPixels` is flipped in the y-axis so flip it again.\n        const flipY = (rows - 1 - ((i / cols) | 0)) * cols + (i % cols);\n        dataR[offset] = data[flipY];\n        dataR[offset + 1] = data[flipY + 1];\n        dataR[offset + 2] = data[flipY + 2];\n        dataR[offset + 3] = data[flipY + 3];\n        offset += bandCount;\n      }\n    }\n\n    releaseGLCanvas(gl);\n    canvasGLPool.push(gl.canvas);\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [Math.round(outWidth), Math.round(outHeight)];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    let allTilesIdle = true;\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.IDLE) {\n        allTilesIdle = false;\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n    if (!this.renderComplete && !allTilesIdle) {\n      frameState.animate = true;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ascending} from '../../array.js';\nimport {wrapX} from '../../coordinate.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {toSize} from '../../size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(layer);\n    const declutter = layer.getDeclutter();\n    const declutteredFeatures = declutter\n      ? frameState.declutter[declutter].all().map((item) => item.value)\n      : null;\n    let found;\n    foundFeature: for (let i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const executorGroups = tile.executorGroups[layerUid];\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        found = executorGroups[t].forEachFeatureAtCoordinate(\n          coordinate,\n          resolution,\n          rotation,\n          hitTolerance,\n          featureCallback,\n          declutteredFeatures,\n        );\n        if (found) {\n          break foundFeature;\n        }\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (this.renderedTiles.length === 0) {\n      return Promise.resolve([]);\n    }\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoordString = tileGrid\n        .getTileCoordForCoordAndResolution(coordinate, resolution)\n        .toString();\n      const tile =\n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n          this.renderedTiles\n        ).find(\n          (tile) =>\n            tile.tileCoord.toString() === tileCoordString &&\n            tile.getState() === TileState.LOADED,\n        );\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      if (\n        source.getWrapX() &&\n        projection.canWrapX() &&\n        !containsExtent(\n          projectionExtent,\n          tileGrid.getTileCoordExtent(tile.tileCoord),\n        )\n      ) {\n        wrapX(coordinate, projection);\n      }\n      const layerUid = getUid(layer);\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      const features = tile\n        .getSourceTiles()\n        .reduce(\n          (accumulator, sourceTile) =>\n            accumulator.concat(sourceTile.getFeatures()),\n          /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */ ([]),\n        );\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    /** @type {Array<import('../../Feature.js').FeatureLike>} */\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      this.frameState.viewState.projection,\n    );\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    /** @type {Object<string, true>} */\n    const visitedSourceTiles = {};\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const key = sourceTile.getKey();\n        if (key in visitedSourceTiles) {\n          continue;\n        }\n        visitedSourceTiles[key] = true;\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const scaledCanvasSize = [\n      this.context.canvas.width,\n      this.context.canvas.height,\n    ];\n    const declutter = this.getLayer().getDeclutter();\n    const declutterTree = declutter\n      ? frameState.declutter[declutter]\n      : undefined;\n    const layerUid = getUid(this.getLayer());\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[layerUid];\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            scaledCanvasSize,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutterTree,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(this.getLayer());\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[layerUid].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, /** @type {Array<{executorGroup: CanvasExecutorGroup, index: number}>} */ ([]));\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    /** @type {Object<number, true>} */\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).map(Number).sort(ascending);\n    zIndexKeys.forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile The tile\n   * @param {import('../../Map.js').FrameState} frameState Current frame state\n   * @return {import('../../transform.js').Transform} Transform to use to render this tile\n   */\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    const layerUid = getUid(layer);\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = tiles[i];\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[layerUid].filter((group) =>\n        group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport {assert} from '../asserts.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport EventType from '../events/EventType.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {isEmpty} from '../obj.js';\nimport {toSize} from '../size.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, Array<string>>}\n     * @private\n     */\n    this.tileKeysBySourceTileUrl_ = {};\n\n    /**\n     @type {Object<string, Tile<FeatureType>>}\n     */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector render tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        if (!this.sourceTiles_[tileUrl]) {\n          this.sourceTiles_[tileUrl] = new this.tileClass(\n            sourceTileCoord,\n            tileUrl ? TileState.IDLE : TileState.EMPTY,\n            tileUrl,\n            this.format_,\n            this.tileLoadFunction,\n          );\n        }\n        const sourceTile = this.sourceTiles_[tileUrl];\n        tile.sourceTiles.push(sourceTile);\n        if (!this.tileKeysBySourceTileUrl_[tileUrl]) {\n          this.tileKeysBySourceTileUrl_[tileUrl] = [];\n        }\n        this.tileKeysBySourceTileUrl_[tileUrl].push(tile.getKey());\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {VectorRenderTile} tile Vector render tile.\n   */\n  removeSourceTiles(tile) {\n    const sourceTiles = tile.sourceTiles;\n    for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n      const sourceTileUrl = sourceTiles[i].getTileUrl();\n      const tileKey = this.getKey();\n      if (!this.tileKeysBySourceTileUrl_[sourceTileUrl]) {\n        return;\n      }\n      const index = this.tileKeysBySourceTileUrl_[sourceTileUrl][tileKey];\n      if (index === -1) {\n        continue;\n      }\n      this.tileKeysBySourceTileUrl_[sourceTileUrl].splice(index, 1);\n      if (this.tileKeysBySourceTileUrl_[sourceTileUrl].length === 0) {\n        delete this.tileKeysBySourceTileUrl_[sourceTileUrl];\n        delete this.sourceTiles_[sourceTileUrl];\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n      this.removeSourceTiles.bind(this),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * @param {boolean} overlaps The source has overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { toPromise } from 'ol/functions.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport TileState from 'ol/TileState.js';\nimport { VectorTile } from 'ol';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { METERS_PER_UNIT } from 'ol/proj/Units.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { get as get$1, getUserProjection, getPointResolution, fromLonLat, equivalent } from 'ol/proj.js';\nimport { getCenter, getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_byte(parseFloat(str) / 100 * 255);\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_float(parseFloat(str) / 100);\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        h += 1;\n    else if (h > 1)\n        h -= 1;\n    if (h * 6 < 1)\n        return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1)\n        return m2;\n    if (h * 3 < 2)\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        return kCSSColorTable[str].slice();\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                return null;\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                return null;\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor_1(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${ Math.round(r) },${ Math.round(g) },${ Math.round(b) },${ a })`;\n    }\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha() {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(stop => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        const expression = [\n            'step',\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = [\n            'match',\n            get\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${ type }`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error(`Unknown zoom function type \"${ type }\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nclass ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${ name } not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        const itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? `array<${ itemType }, ${ type.N }>` : type.itemType.kind === 'value' ? 'array' : `array<${ itemType }>`;\n    } else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${ toString$1(expected) } but found ${ toString$1(t) } instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n            sensitivity: this.sensitivity,\n            usage: 'search'\n        });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n    }\n}\n\n//      \nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\n                    'image',\n                    section.image.name\n                ]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = [\n                    'literal',\n                    section.fontStack.split(',')\n                ];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null;\n        // treat empty values as no image\n        return new ResolvedImage({\n            name,\n            available: false\n        });\n    }\n    serialize() {\n        return [\n            'image',\n            this.name\n        ];\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return `Invalid rgba value [${ value.join(', ') }]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return `Invalid rgba value [${ [\n            r,\n            g,\n            b,\n            a\n        ].join(', ') }]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\n                'literal',\n                this.value\n            ];\n        } else if (this.value instanceof Color$1) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            return this.value;\n        }\n    }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nvar RuntimeError$1 = RuntimeError;\n\nconst types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$2) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$2[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array$1(itemType, N);\n        } else {\n            type = types$2[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError$1(`Expected value to be of type ${ toString$1(this.type) }, but found ${ toString$1(typeOf(value)) } instead.`);\n            }\n        }\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array$1(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n                nextTokenMayBeObject = true;\n                sections.push({\n                    content,\n                    scale: null,\n                    font: null,\n                    textColor: null\n                });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error(`No image name provided.`);\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return [\n            'image',\n            this.input.serialize()\n        ];\n    }\n}\n\nconst types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        const name = args[0];\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const type = types$1[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color$1) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${ JSON.stringify(input) }: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError$1(error || `Could not parse color from value '${ typeof input === 'string' ? input : String(JSON.stringify(input)) }'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError$1(`Could not convert ${ JSON.stringify(value) } to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n        } else {\n            return toString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{\n                    content: this.args[0],\n                    scale: null,\n                    font: null,\n                    textColor: null\n                }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${ this.type.kind }`];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n    id() {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    distanceFromCenter() {\n        if (this.featureTileCoord && this.featureDistanceData) {\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n            // Distance is calculated as `dot(d, v)`\n            const dist = bX * dX + bY * dY;\n            return dist;\n        }\n        return 0;\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color$1.parse(input);\n        }\n        return cached;\n    }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ? definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ? [[\n                definition[1],\n                definition[2]\n            ]] : definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) || // varags\n        signature.length === args.length - 1    // correct param count\n);\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${ params.length } arguments, but found ${ parsedArgs.length } instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString$1(parsed.type));\n            }\n            context.error(`Expected arguments of type ${ signatures }, but found (${ actualTypes.join(', ') }) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${ signature.map(toString$1).join(', ') })`;\n    } else {\n        return `(${ toString$1(signature.type) }...)`;\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\n            'collator',\n            options\n        ];\n    }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    const vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tilePoints = [];\n    if (!geometry)\n        return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tileLines = [];\n    if (!geometry)\n        return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'within',\n            this.geojson\n        ];\n    }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${ name }\". Make sure \"${ name }\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'var',\n            this.name\n        ];\n    }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${ part }]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = [\n                'literal',\n                expr\n            ];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion$1(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion$1(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${ typeof op } instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                    const ec = new EvaluationContext$1();\n                    try {\n                        parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${ typeof expr } instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${ this.key }${ keys.map(k => `[${ k }]`).join('') }`;\n        this.errors.push(new ParsingError$1(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = [\n            'step',\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        epsilon = 0.000001;\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            return t2;\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            break;\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        return t0;\n    if (t2 > t1)\n        return t1;\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            return t2;\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nconst lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nconst hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${ String(interpolation[0]) }`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n            return context.error(`Type ${ toString$1(outputType) } is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);    // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = [\n                    'exponential',\n                    this.interpolation.base\n                ];\n            }\n        } else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [\n            this.operator,\n            interpolation,\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${ args.length - 1 } instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${ typeof name } instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([\n                name,\n                value\n            ]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } > ${ array.length - 1 }.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError$1(`Array index must be an integer, but found ${ index } instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'at',\n            this.index.serialize(),\n            this.input.serialize()\n        ];\n    }\n}\nvar At$1 = At;\n\n//      \nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (haystack == null)\n            return false;\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'in',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\n                'index-of',\n                this.needle.serialize(),\n                this.haystack.serialize(),\n                fromIndex\n            ];\n        }\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${ Number.MAX_SAFE_INTEGER }.`);\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = [\n            'match',\n            this.input.serialize()\n        ];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {};\n        // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([\n                    this.cases[label],\n                    [label]\n                ]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nvar Match$1 = Match;\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([\n                test,\n                result\n            ]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [\n                array$1(ValueType),\n                StringType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${ toString$1(input.type) } instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\n                'slice',\n                this.input.serialize(),\n                this.beginIndex.serialize(),\n                endIndex\n            ];\n        }\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize()\n        ];\n    }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(lhs.type) }'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(rhs.type) }'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${ toString$1(lhs.type) }' and '${ toString$1(rhs.type) }'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1(`Expected arguments for \"${ op }\" to be (string, string) or (number, number), but found (${ lt.kind }, ${ rt.kind }) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n    // BCP 47 language tag\n    // ISO 4217 currency code, required if style=currency\n    // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    // Default 0\n    // Default 3\n    constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\n            'number-format',\n            this.number.serialize(),\n            options\n        ];\n    }\n}\n\n//      \nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${ args.length - 1 } instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${ toString$1(input.type) } instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError$1(`Expected value to be of type string or array, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError$1(error);\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = i + j >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => {\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        ctx => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        ctx => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        ctx => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        ctx => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        ctx => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        ctx => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        ctx => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ],\n            [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        ctx => ctx.id() !== null && ctx.id() !== undefined\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext$1();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError$1(`Expected value to be one of ${ Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ') }, but found ${ JSON.stringify(val) } instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(child => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n    if (filter === null || filter === undefined) {\n        return {\n            filter: () => true,\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = filter;\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${ JSON.stringify(filterExp, null, 2) }\n        `);\n    }\n    // Compile the static component of the filter\n    const filterSpec = spec[`filter_${ layerType }`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    } else {\n        filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    const needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    let isBranchingDynamically = false;\n    const branches = [];\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return op !== 'any';\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-${ op }`,\n            value\n        ];\n    case '$id':\n        return [\n            `filter-id-${ op }`,\n            value\n        ];\n    default:\n        return [\n            `filter-${ op }`,\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            `filter-id-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [\n            `filter-has`,\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(k => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 200,\n    'extra-light': 200,\n    light: 300,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    'extra-bold': 800,\n    'ultra-bold': 800,\n    heavy: 900,\n    black: 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900,\n    'ultra-black': 950,\n    'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                haveStyle = true;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n                haveStyle = true;\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n                haveWeight = true;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    const startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    const startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected sprites url: ${ url }`);\n    }\n    const sprite = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ sprite }/sprite?access_token=${ token }`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    const startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected style url: ${ url }`);\n    }\n    const style = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ style }?&access_token=${ token }`;\n}\nconst mapboxSubdomains = [\n    'a',\n    'b',\n    'c',\n    'd'\n];\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {Array<string>} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    const urlObject = new URL(url, styleUrl);\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return [decodeURI(urlObject.href)];\n        }\n        if (!urlObject.searchParams.has(tokenParam)) {\n            urlObject.searchParams.set(tokenParam, token);\n        }\n        return [decodeURI(urlObject.href)];\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return [`https://api.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}${ sizeFactor }.webp?access_token=${ token }`];\n    }\n    return mapboxSubdomains.map(sub => `https://${ sub }.tiles.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}.vector.pbf?access_token=${ token }`);\n}\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    let functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (const key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    let filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst defaultResolutions = (function () {\n    const resolutions = [];\n    for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    let i = 0;\n    const ii = resolutions.length;\n    for (; i < ii; ++i) {\n        const candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            const zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nfunction getResolutionForZoom(zoom, resolutions) {\n    const base = Math.floor(zoom);\n    const factor = Math.pow(2, zoom - base);\n    return resolutions[base] / factor;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    const transformedRequest = options.transformRequest ? options.transformRequest(url, resourceType) || url : url;\n    const pendingRequest = toPromise(() => transformedRequest).then(transformedRequest => {\n        if (!(transformedRequest instanceof Request)) {\n            transformedRequest = new Request(transformedRequest);\n        }\n        if (!transformedRequest.headers.get('Accept')) {\n            transformedRequest.headers.set('Accept', 'application/json');\n        }\n        if (metadata) {\n            metadata.request = transformedRequest;\n        }\n        return fetch(transformedRequest).then(function (response) {\n            delete pendingRequests[url];\n            return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n        }).catch(function (error) {\n            delete pendingRequests[url];\n            return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    });\n    pendingRequests[url] = [\n        transformedRequest,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                const glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n    const cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    let promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        let tileLoadFunction;\n        if (options.transformRequest) {\n            tileLoadFunction = (tile, src) => {\n                const transformedRequest = options.transformRequest ? options.transformRequest(src, 'Tiles') || src : src;\n                if (tile instanceof VectorTile) {\n                    tile.setLoader((extent, resolution, projection) => {\n                        toPromise(() => transformedRequest).then(transformedRequest => {\n                            fetch(transformedRequest).then(response => response.arrayBuffer()).then(data => {\n                                const format = tile.getFormat();\n                                const features = format.readFeatures(data, {\n                                    extent: extent,\n                                    featureProjection: projection\n                                });\n                                // @ts-ignore\n                                tile.setFeatures(features);\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        });\n                    });\n                } else {\n                    const img = tile.getImage();\n                    toPromise(() => transformedRequest).then(transformedRequest => {\n                        if (transformedRequest instanceof Request) {\n                            fetch(transformedRequest).then(response => response.blob()).then(blob => {\n                                const url = URL.createObjectURL(blob);\n                                img.addEventListener('load', () => URL.revokeObjectURL(url));\n                                img.addEventListener('error', () => URL.revokeObjectURL(url));\n                                img.src = url;\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        } else {\n                            img.src = transformedRequest;\n                        }\n                    });\n                }\n            };\n        }\n        const url = glSource.url;\n        if (url && !glSource.tiles) {\n            const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve({\n                    tileJson: Object.assign({}, glSource, {\n                        url: undefined,\n                        tiles: normalizedSourceUrl\n                    }),\n                    tileLoadFunction\n                });\n            } else {\n                const metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl[0], options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url)[0];\n                    });\n                    return Promise.resolve({\n                        tileJson,\n                        tileLoadFunction\n                    });\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href)[0];\n                })\n            });\n            promise = Promise.resolve({\n                tileJson: Object.assign({}, glSource),\n                tileLoadFunction\n            });\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    const imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = `rgba(${ haloColor.r * 255 },${ haloColor.g * 255 },${ haloColor.b * 255 },${ haloColor.a })`;\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    const imageCanvas = createCanvas(area.width, area.height);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const dist = data[index + 3] / 255;\n            const buffer = 0.75;\n            const gamma = 0.1;\n            const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        let textWithLetterSpacing = '';\n        const lines = text.split('\\n');\n        const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (let l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        const hardLines = text.split('\\n');\n        const lines = [];\n        for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    let wrappedText = measureCache[key];\n    if (!wrappedText) {\n        const words = text.split(' ');\n        if (words.length > 1) {\n            const ctx = getMeasureContext();\n            ctx.font = font;\n            const oneEm = ctx.measureText('M').width;\n            const maxWidth = oneEm * em;\n            let line = '';\n            const lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (let i = 0, ii = words.length; i < ii; ++i) {\n                const word = words[i];\n                const testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                const line = lines[i];\n                if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n                    const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line;\n                        i -= 1;\n                    } else {\n                        lines[i] = line + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n                const line = lines[i];\n                const next = lines[i + 1];\n                if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    const lineWords = line.split(' ');\n                    const lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        const styleSheets = document.styleSheets;\n        for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n            const styleSheet = styleSheets[i];\n            try {\n                const cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n                        const cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            const match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n    const fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    const fontDescriptions = [];\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        const font = fonts[i];\n        const cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        const parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n        const fontDescription = fontDescriptions[i];\n        const family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(`${ fontDescription[2] }\\n${ fontDescription[1] } \\n${ family }`) !== 100) {\n                const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    const markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\nconst types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nconst anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n    const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    }\n    return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = { zoom: 0 };\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    const layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    const functions = functionCache[layerId];\n    if (!functions[property]) {\n        let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        const propertySpec = spec[`${ layoutOrPaint }_${ layer.type }`][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        let isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            const compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n    const allowOverlap = getValue(layer, 'layout', `${ prefix }-allow-overlap`, zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    const ignorePlacement = getValue(layer, 'layout', `${ prefix }-ignore-placement`, zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        const a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox/MapLibre Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n    recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox/MapLibre Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox/MapLibre Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox/MapLibre Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox/MapLibre Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox/MapLibre Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox/MapLibre Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    let spriteImage, spriteImageSize;\n    let spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            const img = new Image();\n            let blobUrl;\n            toPromise(() => spriteImageUrl).then(spriteImageUrl => {\n                if (spriteImageUrl instanceof Request) {\n                    fetch(spriteImageUrl).then(response => response.blob()).then(blob => {\n                        blobUrl = URL.createObjectURL(blob);\n                        img.src = blobUrl;\n                    }).catch(() => {\n                    });\n                } else {\n                    img.crossOrigin = 'anonymous';\n                    img.src = spriteImageUrl;\n                    if (blobUrl) {\n                        URL.revokeObjectURL(blobUrl);\n                    }\n                }\n            });\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            const worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    const allLayers = derefLayers(glStyle.layers);\n    const layersBySourceLayer = {};\n    const mapboxLayers = [];\n    const iconImageCache = {};\n    const patternCache = {};\n    const functionCache = getFunctionCache(glStyle);\n    const filterCache = getFilterCache(glStyle);\n    let mapboxSource;\n    for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n        const layer = allLayers[i];\n        const layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1) {\n            const sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                const source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error(`Source \"${ mapboxSource }\" is not defined`);\n                }\n                const type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(`Source \"${ mapboxSource }\" is not of type \"vector\" or \"geojson\", but \"${ type }\"`);\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error(`Layer \"${ layerId }\" does not use source \"${ mapboxSource }`);\n            }\n            let layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    const textHalo = new Stroke();\n    const textColor = new Fill();\n    const styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    const styleFunction = function (feature, resolution, onlyLayer) {\n        const properties = feature.getProperties();\n        const layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        let zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        const type = types[feature.getGeometry().getType()];\n        const f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        let stylesLength = -1;\n        let featureBelongsToLayer;\n        for (let i = 0, ii = layers.length; i < ii; ++i) {\n            const layerData = layers[i];\n            const layer = layerData.layer;\n            const layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            const layout = layer.layout || emptyObj$1;\n            const paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            const filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                let color, opacity, fill, stroke, strokeColor, style;\n                const index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                const icon_cache_key = icon + '.' + opacity;\n                                let pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    const spriteImageData = spriteData[icon];\n                                    const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    const ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    if (!('line-pattern' in paint)) {\n                        color = colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState));\n                    } else {\n                        color = undefined;\n                    }\n                    const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                let hasImage = false;\n                let text = null;\n                let placementAngle = 0;\n                let icon, iconImg, skipLabel;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        let styleGeom = undefined;\n                        const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n                            const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                const geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    const extent = geom.getExtent();\n                                    const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], 2, {}, undefined);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            const stride = geom.getStride();\n                                            const coordinates = geom.getFlatCoordinates();\n                                            for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                                                const x1 = coordinates[i];\n                                                const y1 = coordinates[i + 1];\n                                                const x2 = coordinates[i + stride];\n                                                const y2 = coordinates[i + stride + 1];\n                                                const minX = Math.min(x1, x2);\n                                                const maxX = Math.max(x1, x2);\n                                                const xM = midpoint[0];\n                                                const yM = midpoint[1];\n                                                const dotProduct = (y2 - y1) * (xM - x1) - (x2 - x1) * (yM - y1);\n                                                if (Math.abs(dotProduct) < 0.001 && //midpoint is aligned with the segment\n                                                    xM <= maxX && xM >= minX    //midpoint is on the segment and not outside it\n) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    let iconCacheKey = `${ icon }.${ iconSize }.${ haloWidth }.${ haloColor }`;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += `.${ iconColor }`;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        const declutterMode = getDeclutterMode(layer, zoom, f, 'icon', functionCache);\n                                        let displacement;\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[0] *= iconSize;\n                                            displacement[1] *= -iconSize;\n                                        }\n                                        let color = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            const iconOptions = {\n                                                color: color,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode,\n                                                scale: iconSize\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            const spriteImageData = spriteData[icon];\n                                            let img, size, offset;\n                                            if (haloWidth) {\n                                                if (spriteImageData.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor || [\n                                                        0,\n                                                        0,\n                                                        0,\n                                                        1\n                                                    ]), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData.width,\n                                                        height: spriteImageData.height,\n                                                        pixelRatio: spriteImageData.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                                                }\n                                            } else {\n                                                if (spriteImageData.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                size = [\n                                                    spriteImageData.width,\n                                                    spriteImageData.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData.x,\n                                                    spriteImageData.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color,\n                                                img: img,\n                                                // @ts-ignore\n                                                imgSize: spriteImageSize,\n                                                size: size,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    const circleTranslate = getValue(layer, 'paint', 'circle-translate', zoom, f, functionCache, featureState);\n                    const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth + '.' + circleTranslate[0] + '.' + circleTranslate[1];\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            displacement: [\n                                circleTranslate[0],\n                                -circleTranslate[1]\n                            ],\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce((acc, chunk, i) => {\n                                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                let text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return acc;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (let i = 0, ii = text.length; i < ii; ++i) {\n                                    if (i > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    const declutterMode = getDeclutterMode(layer, zoom, f, 'text', functionCache);\n                    if (!style.getText()) {\n                        style.setText(text);\n                    }\n                    text = style.getText();\n                    if (!text || 'getDeclutterMode' in text && text.getDeclutterMode() !== declutterMode) {\n                        text = new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ],\n                            // @ts-ignore\n                            declutterMode: declutterMode\n                        });\n                        style.setText(text);\n                    }\n                    const textTransform = getValue(layer, 'layout', 'text-transform', zoom, f, functionCache, featureState);\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n                    }\n                    const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    if (typeof text.setKeepUpright === 'function') {\n                        const keepUpright = getValue(layer, 'layout', 'text-keep-upright', zoom, f, functionCache, featureState);\n                        text.setKeepUpright(keepUpright);\n                    }\n                    const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    let textAlign;\n                    if (placement === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement);\n                    }\n                    if (placement === 'line' && typeof text.setRepeat === 'function') {\n                        const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement === 'point');\n                    let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    let vOffset = 0;\n                    let hOffset = 0;\n                    if (placement == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    let textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor && textHaloWidth > 0) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        const halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    const padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    const evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    const elevationImage = inputs[0];\n    const width = elevationImage.width;\n    const height = elevationImage.height;\n    const elevationData = elevationImage.data;\n    const shadeData = new Uint8ClampedArray(elevationData.length);\n    const dp = data.resolution * 2;\n    const maxX = width - 1;\n    const maxY = height - 1;\n    const pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    const twoPi = 2 * Math.PI;\n    const halfPi = Math.PI / 2;\n    const sunEl = Math.PI * data.sunEl / 180;\n    const sunAz = Math.PI * data.sunAz / 180;\n    const cosSunEl = Math.cos(sunEl);\n    const sinSunEl = Math.sin(sunEl);\n    const highlightColor = data.highlightColor;\n    const shadowColor = data.shadowColor;\n    const accentColor = data.accentColor;\n    const encoding = data.encoding;\n    let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding = 'mapbox') {\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox/MapLibre Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox/MapLibre style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        const searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach((value, key) => {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox/MapLibre Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox/MapLibre Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n    let styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    let options;\n    let sourceOrLayers;\n    let updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error(`No ${ type } source found in the glStyle.`));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        const targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        const tileGrid = layer.getSource().getTileGrid();\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom()) && tileGrid.getMinZoom() > 0) {\n                            layer.setMaxResolution(getResolutionForZoom(Math.max(0, tileGrid.getMinZoom() - 1e-12), tileGrid.getResolutions()));\n                        }\n                    });\n                }\n                const glSource = glStyle.sources[sourceId];\n                let source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                const targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            let spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        const projection = get$1(options.projection);\n                        const units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, (fonts, templateUrl = options.webfonts) => getFonts(fonts, templateUrl), options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error(`Nothing to show for source [${ sourceId }]`));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage') || spriteImageUrl;\n                        if (transformed instanceof Request || transformed instanceof Promise) {\n                            spriteImageUrl = transformed;\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error(`Sprites cannot be loaded: ${ spriteUrl }: ${ err.message }`));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().insertAt(0, setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox/MapLibre Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox/MapLibre Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    let sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    const bounds = tileJSON.bounds;\n    if (bounds) {\n        const ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        const tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    const tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    const tileJSONDoc = tileJSONSource.getTileJSON();\n    const tileGrid = tileJSONSource.getTileGrid();\n    const projection = get$1(options.projection || 'EPSG:3857');\n    const extent = extentFromTileJSON(tileJSONDoc, projection);\n    const projectionExtent = projection.getExtent();\n    const minZoom = tileJSONDoc.minzoom || 0;\n    const maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n    const sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    const background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    const layout = glLayer.layout || {};\n    const paint = glLayer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    let opacity;\n    const bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox/MapLibre Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    const div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render(frameState) {\n            const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJson, options);\n            sourceOptions.tileLoadFunction = tileLoadFunction;\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    const layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    const projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return `{bbox-${ projCode.toLowerCase().replace(/[^a-z0-9]/g, '-') }}`;\n}\nfunction setupRasterSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const source = new TileJSON({\n                interpolate: options.interpolate === undefined ? true : options.interpolate,\n                transition: 0,\n                crossOrigin: 'anonymous',\n                tileJSON: tileJson\n            });\n            source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n            if (options.projection) {\n                //@ts-ignore\n                source.projection = get$1(options.projection);\n            }\n            const getTileUrl = source.getTileUrlFunction();\n            if (tileLoadFunction) {\n                source.setTileLoadFunction(tileLoadFunction);\n            }\n            source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n                const bboxTemplate = getBboxTemplate(projection);\n                let src = getTileUrl(tileCoord, pixelRatio, projection);\n                if (src.indexOf(bboxTemplate) != -1) {\n                    const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                    src = src.replace(bboxTemplate, bbox.toString());\n                }\n                return src;\n            });\n            source.set('mapbox-source', glSource);\n            resolve(source);\n        }).catch(function (error) {\n            reject(error);\n        });\n    });\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    const layer = new TileLayer();\n    setupRasterSource(glSource, styleUrl, options).then(function (source) {\n        layer.setSource(source);\n    }).catch(function () {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox/MapLibre Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    const layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    const geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    const data = glSource.data;\n    const sourceOptions = {};\n    if (typeof data == 'string') {\n        const [geoJsonUrl] = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            const extentUrl = (extent, resolution, projection) => {\n                const bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, `${ extent.join(',') }`);\n            };\n            const source = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                loader: (extent, resolution, projection, success, failure) => {\n                    const url = typeof extentUrl === 'function' ? extentUrl(extent, resolution, projection) : extentUrl;\n                    fetchResource('GeoJSON', url, options).then(json => {\n                        const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                        source.addFeatures(features);\n                        success(features);\n                    }).catch(response => {\n                        source.removeLoadedExtent(extent);\n                        failure();\n                    });\n                },\n                strategy: bbox\n            });\n            source.set('mapbox-source', glSource);\n            return source;\n        }\n        const source = new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl,\n            loader: (extent, resolution, projection, success, failure) => {\n                fetchResource('GeoJSON', geoJsonUrl, options).then(json => {\n                    const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                    source.addFeatures(features);\n                    success(features);\n                }).catch(response => {\n                    source.removeLoadedExtent(extent);\n                    failure();\n                });\n            }\n        });\n        return source;\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    const source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    let zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        const glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        const mapboxLayers = derefLayers(glStyle.layers);\n        const layerMapboxLayerids = layer.get('mapbox-layers');\n        const visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    const functionCache = getFunctionCache(glStyle);\n    const glLayers = glStyle.layers;\n    const type = glLayer.type;\n    const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    const glSource = glStyle.sources[id];\n    let layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = getPointResolution(options.projection || 'EPSG:3857', event.resolution, getCenter(event.extent), 'm');\n            const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    const glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox/MapLibre Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    const promises = [];\n    let view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            const projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl,\n        options\n    });\n    const glLayers = glStyle.layers;\n    let layerIds = [];\n    let layer, glSourceId, id;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        const type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            // eslint-disable-next-line no-console\n            console.debug(`layers[${ i }].type \"${ type }\" not supported`);\n            continue;\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox/MapLibre Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox/MapLibre Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox/MapLibre Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox/MapLibre Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox/MapLibre Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox/MapLibre Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox/MapLibre Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox/MapLibre Style document). When passed\n * as style url, layers will be added to the map when the Mapbox/MapLibre Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n    let promise;\n    /** @type {Map|LayerGroup} */\n    let mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error(`Could not load ${ style }: ${ err.message }`));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n    let minZoom = 24;\n    let maxZoom = 0;\n    const glLayers = glStyle.layers;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        const setStyle = function () {\n            const source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    const sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions), getResolutionForZoom(Math.max(0, sourceMinZoom - 1e-12), tileGrid.getResolutions())));\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(getResolutionForZoom(maxZoom, defaultResolutions));\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions));\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        const layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    const style = mapOrGroup.get('mapbox-style');\n    const layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    let spliceIndex;\n    let sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error(`Layer with id \"${ beforeLayerId }\" not found.`);\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    let sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n        const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" already exists.`);\n    }\n    const sourceLayerId = mapboxLayers[sourceIndex].id;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    const index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" not found.`);\n    }\n    const oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nfunction updateMapboxSource(mapOrGroup, id, mapboxSource) {\n    const currentSource = getSource(mapOrGroup, id);\n    const layers = mapOrGroup.getLayers().getArray().filter(function (layer) {\n        return (layer instanceof VectorLayer || layer instanceof TileLayer || layer instanceof VectorTileLayer) && layer.getSource() === currentSource;\n    });\n    const metadata = mapOrGroup.get('mapbox-metadata');\n    let newSourcePromise;\n    switch (mapboxSource.type) {\n    case 'vector':\n        newSourcePromise = setupVectorSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    case 'geojson':\n        newSourcePromise = Promise.resolve(setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options));\n        break;\n    case 'raster':\n    case 'raster-dem':\n        newSourcePromise = setupRasterSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    default:\n        return Promise.reject(new Error('Unsupported source type ' + mapboxSource.type));\n    }\n    newSourcePromise.then(function (newSource) {\n        layers.forEach(function (layer) {\n            layer.setSource(newSource);\n        });\n    });\n    return newSourcePromise;\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    const layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    const layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const layers = glStyle.layers;\n    layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n    const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox/MapLibre Style\n * `layer`. Note that multiple Mapbox/MapLibre Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox/MapLibre Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    const result = [];\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox/MapLibre Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox/MapLibre Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error(`Map or layer for source \"${ feature.source }\" not found.`);\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n    /**\n   * @param {Error} error error object.\n   */\n    constructor(error) {\n        super(EventType.ERROR);\n        /**\n     * @type {Error}\n     */\n        this.error = error;\n    }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox/MapLibre Style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox/MapLibre style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox/MapLibre style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox/MapLibre Style object will be used. Set to `false` to prevent\n * the Mapbox/MapLibre style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox/MapLibre style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n    /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n    constructor(options) {\n        const declutter = 'declutter' in options ? options.declutter : true;\n        const source = new VectorTileSource({\n            state: 'loading',\n            format: new MVT()\n        });\n        super({\n            source: source,\n            background: options.background === false ? null : options.background,\n            declutter: declutter,\n            className: options.className,\n            opacity: options.opacity,\n            visible: options.visible,\n            zIndex: options.zIndex,\n            minResolution: options.minResolution,\n            maxResolution: options.maxResolution,\n            minZoom: options.minZoom,\n            maxZoom: options.maxZoom,\n            renderOrder: options.renderOrder,\n            renderBuffer: options.renderBuffer,\n            renderMode: options.renderMode,\n            map: options.map,\n            updateWhileAnimating: options.updateWhileAnimating,\n            updateWhileInteracting: options.updateWhileInteracting,\n            preload: options.preload,\n            useInterimTilesOnError: options.useInterimTilesOnError,\n            properties: options.properties\n        });\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n        }\n        const url = options.styleUrl;\n        const promises = [applyStyle(this, url, options.layers || options.source, { accessToken: this.accessToken })];\n        if (this.getBackground() === undefined) {\n            promises.push(applyBackground(this, options.styleUrl, { accessToken: this.accessToken }));\n        }\n        Promise.all(promises).then(() => {\n            source.setState('ready');\n        }).catch(error => {\n            this.dispatchEvent(new ErrorEvent(error));\n            const source = this.getSource();\n            source.setState('error');\n        });\n    }\n}\n\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer, updateMapboxSource };\n//# sourceMappingURL=index.js.map\n","import {stylefunction} from 'ol-mapbox-style';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport MVT from '../src/ol/format/MVT.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport {get} from '../src/ol/proj.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/streets-v2/style.json?key=' + key;\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont,\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    ),\n  () => worker.postMessage({action: 'requestRender'}),\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState),\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel),\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: features.map((e) => e.getProperties()),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  frameState.layerStatesArray = layers.map((l) => l.getLayerState());\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      if (!renderer.prepareFrame(frameState)) {\n        return;\n      }\n      if (layer.getDeclutter() && !frameState.declutterTree) {\n        frameState.declutter = {};\n      }\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach((layer) => {\n    if (!layer.getRenderer().context) {\n      return;\n    }\n    layer.renderDeclutter(frameState, layer.getLayerState());\n    layer.renderDeferred(frameState);\n  });\n  frameState.postRenderFunctions.forEach((fn) => fn(null, frameState));\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: {\n        viewState: {\n          center: frameState.viewState.center.slice(0),\n          resolution: frameState.viewState.resolution,\n          rotation: frameState.viewState.rotation,\n        },\n        pixelRatio: frameState.pixelRatio,\n        size: frameState.size.slice(0),\n        extent: frameState.extent.slice(0),\n        coordinateToPixelTransform:\n          frameState.coordinateToPixelTransform.slice(0),\n        pixelToCoordinateTransform:\n          frameState.pixelToCoordinateTransform.slice(0),\n      },\n    },\n    [imageData],\n  );\n});\n"],"names":["module","exports","__webpack_module_cache__","IDLE","LOADING","LOADED","ERROR","EMPTY","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","cstr","m","space","parts","alpha","values","String","toLowerCase","slice","base","size","length","parseInt","exec","name","dims","replace","trim","split","shift","map","x","i","parseFloat","baseHues","endsWith","Math","PI","pop","test","match","value","join","red","orange","yellow","green","blue","purple","min","max","channel","alias","rgb","hsl","t1","t2","t3","val","h","s","l","r","g","b","delta","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","y","z","pow","arg","o","_u","_v","u","v","xn","yn","zn","luv","un","vn","yr","lchuv","hr","c","cos","sin","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","t","angleInRadians","angleInDegrees","a","lerp","n","decimals","factor","round","floor","ceil","wrap","range","sqrt","atan2","NO_COLOR","NaN","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","color","output","rgbaToLcha","fromString","hasOwnProperty","key","Array","isArray","raw","arguments","Number","parsed","push","Error","isNaN","normalize","asArray","ua","navigator","userAgent","WORKER_OFFSCREEN_CANVAS","includes","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","prototype","decode","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","createCanvasContext2D","width","height","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","constructor","this","disposed","dispose","disposeInternal","ascending","descending","linearFindNearest","arr","target","direction","candidate","reverseSubArray","begin","end","tmp","data","extension","equals","arr1","arr2","len1","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","call","apply","toPromise","getter","err","Promise","reject","resolve","promiseGetter","clear","object","property","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","getListeners","hasListener","keys","index","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","decodeFallback","image","src","then","catch","e","complete","handleLoad","unlisten","handleError","load","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","set","pattern","update","getImageState","ImageState","ready","createPattern","getImage","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","EventType","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","fillRect","getSize","getSrc","HTMLImageElement","ctx","scale","globalCompositeOperation","fillStyle","asString","onChange","cacheKey","asColorLike","offset","canvasPattern","patternCanvasContext","asCanvasPattern","Observable","on","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","uidCounter_","getUid","obj","ol_uid","ObjectEvent","oldValue","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","source","unset","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","style","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","save","globalAlpha","contextInstructions","translate","label","executeLabelInstructions","restore","toSize","dest","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","clone","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius","radius2_","radius2","angle_","angle","stroke_","stroke","renderOptions_","loading","render","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","fillKey","getKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","Infinity","r1","r2","d","miterRatio","k","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","add","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","toString","assertion","errorMessage","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","getHeight","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","center","resolution","x0","y0","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","isFinite","linearRingss","endss","flatCenters","ends","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","fraction","dimension","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","startOrientation","prevEndIndex","orientation","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance","douglasPeuckerArray","simplifiedEnds","snap","tolerance","quantize","dx1","dy1","dx2","dy2","quantizeArray","transform2D","destinationStride","j","rotate","anchorX","anchorY","deltaX","deltaY","levels","info","warn","error","none","level","args","console","coordinate1","coordinate2","cosAngle","sinAngle","worldsAway","sourceExtentWidth","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","toEPSG4326","atan","exp","EPSG4326Projection","transforms","destination","sourceCode","destinationCode","K0","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c2","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","makeTransformFunction","transformer","coord","DEFAULT_RADIUS","getDistance","c1","lat1","lat2","deltaLatBy2","deltaLonBy2","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","projectionLike","makeProjection","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","dimensions","getTransform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","projections2","forwardTransform","inverseTransform","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","b2","e2","f2","f","compose","sx","sy","makeInverse","det","mat","matrixPrecision","tmpTransform","RenderFeature","properties","id","styleFunction","id_","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","ends_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoint","flatCenter","getFlatInteriorPoints","getFlatMidpoint","getFlatMidpoints","midpoint","getId","getOrientedFlatCoordinates","getGeometry","getSimplifiedGeometry","simplifyTransformed","getStride","getStyleFunction","getType","pixelExtent","projectedExtent","getEnds","enableSimplifyTransformed","getFlatCoordinates","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","setZIndex","defaultStyles","createDefaultStyle","Circle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","easeIn","easeOut","inAndOut","tileCoord","state","transition_","transition","transitionStarts_","interpolate","release","setState","TileState","getTileCoord","getState","getAlpha","time","start","inTransition","endTransition","format","tileLoadFunction","format_","features_","loader_","tileLoadFunction_","url_","getTileUrl","getFormat","getFeatures","onLoad","features","dataProjection","setFeatures","onError","setLoader","loader","geometryOrProperties","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","setStyle","handleGeometryChange_","styles","createStyleFunction","setId","tmpPoint","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","closestPointXY","closestPoint","minSquaredDistance","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","intersectsExtent","sourceProj","inCoordinates","outCoordinates","transformed","projTransform","getLayoutForStride","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","startsWith","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","deflateCoordinate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","ret","intersectsLineString","coordinatesExtent","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","linearRing","twiceArea","linearRings","LinearRing","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","appendPoint","multiPoint","getPoint","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","power","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createMinMaxResolution","cappedMaxRes","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","duration","easing","getResolutionForZoom","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","background_","background","visible","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getVisible","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setVisible","zindex","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","clearRenderer","pixel","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","buffer","pos","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","p","toNum","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","readString","subarray","str","b0","b3","bytesPerSequence","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","LN2","layersPBFReader","layers","layerPBFReader","version","featurePBFReader","readRawFeature","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","ctor","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","quickselect","compare","defaultCompare","sd","swap","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","node","toBBox","nodesToSearch","children","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","item","createNode","remove","equalsFn","path","indexes","parent","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","Set","featureId","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","JSON","stringify","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","setDeclutter","inversePixelTransform","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","getWrapX","getInterpolate","refresh","setAttributions","TileRange","containsTileRange","tileRange","extend","getKeyZXY","tmpTileCoord","strict","every","currentVal","res","isSorted","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileSize","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","unlisten_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","TileSourceEvent","tilePixelRatio_","tilePixelRatio","tmpSize","key_","tileOptions","zDirection","getGutterForProjection","setKey","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","expandUrl","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","pixelContext","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","prepareContainer","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","onerror","send","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","data_","error_","controller_","controller","getError","abort","orthographic","bottom","top","near","far","out","lr","bt","nf","Canvas","gl","gl_","program_","createProgram","positionLocation","getAttribLocation","texcoordLocation","matrixLocation","getUniformLocation","textureMatrixLocation","textureLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","Float32Array","STATIC_DRAW","texcoordBuffer","texcoords","tex","texWidth","texHeight","dstX","dstY","dstWidth","dstHeight","bindTexture","TEXTURE_2D","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","matrix","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","uniformMatrix4fv","texMatrix","uniform1i","drawArrays","TRIANGLES","createShader","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentSource","vertexSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","canvasGLPool","dataType","resultFrameBuffer","resultTexture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage2D","RGBA","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebuffer","texture","stitchTexture","stitchWidth","stitchHeight","maxTexSize","getParameter","MAX_TEXTURE_SIZE","largeSide","scaleFactor","stitchWidthFixed","stitchHeightFixed","fb","webGLCanvas","enable","SCISSOR_TEST","scissor","deleteFramebuffer","getUVs","triProgram","su0","sv0","su1","sv1","su2","sv2","edgeProgram","burnval","burnvalLocation","uniform4fv","uniform4iv","lines","LINES","Uint8ClampedArray","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","transformMatrix","dataSources","imageLike","tileData","arrayData","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","targetWidth","targetHeight","outWidth","outHeight","dataR","createCanvasContextWebGL","premultipliedAlpha","antialias","willInterpolate","textureType","getExtension","UNSIGNED_BYTE","reproj","dataSource","dataS","rows","cols","readPixels","flipY","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","releaseGLCanvas","ImageData","putImageData","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","containsKey","value_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","layerIndex","gridExtent","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision_","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","pixelToCoordinateTransform","tileOrigin","sourceRevision","enqueueTiles","initialZ","preload","minZ","tileQueueKey","tileQueue","findStaleTile_","staleKeys","findAltTiles_","altZ","covered","allTilesIdle","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","nextExtent","targetZ","renderExtent","parentZ","canvasScale","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","usedTiles","postRenderFunction","tilesCount","updateCacheSize","postRenderFunctions","tileCount","getTileImage","alphaChanged","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","viewHints","wantedResolution","layerRevision","builderState","getReplayState","dirty","renderedRevision","renderedRenderOrder","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","getOverlaps","lastIndexOf","foundFeature","tileCoordString","loadingSourceTiles","tilePixel","accumulator","getFeaturesInExtent","visitedSourceTiles","tileFeatures","hifi","tiles","getTileRenderTransform","executorGroup","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","group","clipContext","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","getUseInterimTilesOnError","urlTileCoord","removeSourceTiles","replayState_","errorTileKeys","removeSourceTiles_","hasContext","renderedTileZ","defaultLoadFunction","tileKeysBySourceTileUrl_","tileClass","tileGrids_","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","sourceTileUrl","newTile","setOverlaps","getDefaultExportFromCjs","__esModule","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","substr","ep","fname","params","parse","rgba","toArray01","toArray01PremultipliedAlpha","black","transparent","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","colorSpace","getFallback","defaultValue","curve","interpolated","literal","lastIndex","ParsingError","ParsingError$1","Scope","bindings","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","toString$1","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError$1","types$2","string","boolean","Assertion","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","types$1","Coercion","parseColor","Coercion$1","geometryTypes","EvaluationContext$1","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CompoundExpression$1","CollatorExpression","updateBBox","boxWithinBox","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","vectorQ","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","solve","UnitBezier$1","freeze","__proto__","from","to","Xn","Yn","Zn","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Interpolate$1","needsAnnotation","firstImage","Coalesce$1","Let","binding","Let$1","At","At$1","In$1","IndexOf","fromIndex","IndexOf$1","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Match$1","branches","_","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","types","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","create","ref","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","haveWeight","haveStyle","fontFamilies","maybeWeight","previousPart","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj$1","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","blobUrl","Request","fetch","response","blob","URL","createObjectURL","revokeObjectURL","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","xM","dotProduct","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","metadata","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","observables","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","transferToImageBitmap"],"sourceRoot":""}