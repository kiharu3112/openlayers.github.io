{"version":3,"file":"cog-colors.js","mappings":"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","sources":["webpack:///../node_modules/chroma-js/src/utils/limit.js","webpack:///../node_modules/chroma-js/src/utils/clip_rgb.js","webpack:///../node_modules/chroma-js/src/utils/type.js","webpack:///../node_modules/chroma-js/src/utils/unpack.js","webpack:///../node_modules/chroma-js/src/utils/last.js","webpack:///../node_modules/chroma-js/src/utils/index.js","webpack:///../node_modules/chroma-js/src/io/input.js","webpack:///../node_modules/chroma-js/src/Color.js","webpack:///../node_modules/chroma-js/src/version.js","webpack:///../node_modules/chroma-js/src/chroma.js","webpack:///../node_modules/chroma-js/src/colors/w3cx11.js","webpack:///../node_modules/chroma-js/src/io/hex/hex2rgb.js","webpack:///../node_modules/chroma-js/src/io/hex/rgb2hex.js","webpack:///../node_modules/chroma-js/src/io/named/index.js","webpack:///../node_modules/chroma-js/src/ops/alpha.js","webpack:///../node_modules/chroma-js/src/ops/clipped.js","webpack:///../node_modules/chroma-js/src/io/lab/lab-constants.js","webpack:///../node_modules/chroma-js/src/io/lab/lab2rgb.js","webpack:///../node_modules/chroma-js/src/io/lab/rgb2lab.js","webpack:///../node_modules/chroma-js/src/io/lab/index.js","webpack:///../node_modules/chroma-js/src/ops/darken.js","webpack:///../node_modules/chroma-js/src/ops/get.js","webpack:///../node_modules/chroma-js/src/ops/luminance.js","webpack:///../node_modules/chroma-js/src/interpolator/index.js","webpack:///../node_modules/chroma-js/src/generator/mix.js","webpack:///../node_modules/chroma-js/src/ops/mix.js","webpack:///../node_modules/chroma-js/src/ops/premultiply.js","webpack:///../node_modules/chroma-js/src/io/lch/lch2lab.js","webpack:///../node_modules/chroma-js/src/io/lch/lch2rgb.js","webpack:///../node_modules/chroma-js/src/io/lch/hcl2rgb.js","webpack:///../node_modules/chroma-js/src/io/lch/lab2lch.js","webpack:///../node_modules/chroma-js/src/io/lch/rgb2lch.js","webpack:///../node_modules/chroma-js/src/io/lch/index.js","webpack:///../node_modules/chroma-js/src/ops/saturate.js","webpack:///../node_modules/chroma-js/src/ops/set.js","webpack:///../node_modules/chroma-js/src/ops/shade.js","webpack:///../node_modules/chroma-js/src/interpolator/rgb.js","webpack:///../node_modules/chroma-js/src/interpolator/lrgb.js","webpack:///../node_modules/chroma-js/src/interpolator/lab.js","webpack:///../node_modules/chroma-js/src/interpolator/_hsx.js","webpack:///../node_modules/chroma-js/src/interpolator/lch.js","webpack:///../node_modules/chroma-js/src/io/num/num2rgb.js","webpack:///../node_modules/chroma-js/src/io/num/rgb2num.js","webpack:///../node_modules/chroma-js/src/io/num/index.js","webpack:///../node_modules/chroma-js/src/interpolator/num.js","webpack:///../node_modules/chroma-js/src/io/hcg/hcg2rgb.js","webpack:///../node_modules/chroma-js/src/io/hcg/rgb2hcg.js","webpack:///../node_modules/chroma-js/src/io/hcg/index.js","webpack:///../node_modules/chroma-js/src/interpolator/hcg.js","webpack:///../node_modules/chroma-js/src/io/hsi/hsi2rgb.js","webpack:///../node_modules/chroma-js/src/io/hsi/rgb2hsi.js","webpack:///../node_modules/chroma-js/src/io/hsi/index.js","webpack:///../node_modules/chroma-js/src/interpolator/hsi.js","webpack:///../node_modules/chroma-js/src/io/hsl/hsl2rgb.js","webpack:///../node_modules/chroma-js/src/io/hsl/rgb2hsl.js","webpack:///../node_modules/chroma-js/src/io/hsl/index.js","webpack:///../node_modules/chroma-js/src/interpolator/hsl.js","webpack:///../node_modules/chroma-js/src/io/hsv/hsv2rgb.js","webpack:///../node_modules/chroma-js/src/io/hsv/rgb2hsv.js","webpack:///../node_modules/chroma-js/src/io/hsv/index.js","webpack:///../node_modules/chroma-js/src/interpolator/hsv.js","webpack:///../node_modules/chroma-js/src/utils/multiply-matrices.js","webpack:///../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","webpack:///../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","webpack:///../node_modules/chroma-js/src/io/oklab/index.js","webpack:///../node_modules/chroma-js/src/interpolator/oklab.js","webpack:///../node_modules/chroma-js/src/interpolator/oklch.js","webpack:///../node_modules/chroma-js/src/generator/average.js","webpack:///../node_modules/chroma-js/src/generator/scale.js","webpack:///../node_modules/chroma-js/src/io/rgb/index.js","webpack:///../node_modules/chroma-js/src/generator/blend.js","webpack:///../node_modules/chroma-js/src/generator/cubehelix.js","webpack:///../node_modules/chroma-js/src/generator/random.js","webpack:///../node_modules/chroma-js/src/utils/analyze.js","webpack:///../node_modules/chroma-js/src/utils/contrastAPCA.js","webpack:///../node_modules/chroma-js/src/utils/delta-e.js","webpack:///../node_modules/chroma-js/src/utils/valid.js","webpack:///../node_modules/chroma-js/src/utils/scales.js","webpack:///../node_modules/chroma-js/src/colors/colorbrewer.js","webpack:///../node_modules/chroma-js/src/io/cmyk/cmyk2rgb.js","webpack:///../node_modules/chroma-js/src/io/cmyk/rgb2cmyk.js","webpack:///../node_modules/chroma-js/src/io/cmyk/index.js","webpack:///../node_modules/chroma-js/src/io/css/hsl2css.js","webpack:///../node_modules/chroma-js/src/io/css/lab2css.js","webpack:///../node_modules/chroma-js/src/io/css/lch2css.js","webpack:///../node_modules/chroma-js/src/io/css/oklab2css.js","webpack:///../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","webpack:///../node_modules/chroma-js/src/io/css/oklch2css.js","webpack:///../node_modules/chroma-js/src/io/css/rgb2css.js","webpack:///../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","webpack:///../node_modules/chroma-js/src/io/css/css2rgb.js","webpack:///../node_modules/chroma-js/src/io/css/index.js","webpack:///../node_modules/chroma-js/src/io/gl/index.js","webpack:///../node_modules/chroma-js/src/io/hex/index.js","webpack:///../node_modules/chroma-js/src/io/temp/temperature2rgb.js","webpack:///../node_modules/chroma-js/src/io/temp/rgb2temperature.js","webpack:///../node_modules/chroma-js/src/io/temp/index.js","webpack:///../node_modules/chroma-js/src/io/oklch/index.js","webpack:///../node_modules/chroma-js/index.js","webpack:///../node_modules/chroma-js/src/generator/bezier.js","webpack:///../node_modules/chroma-js/src/utils/contrast.js","webpack:///../node_modules/chroma-js/src/utils/distance.js","webpack:///./cog-colors.js"],"sourcesContent":["const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","import limit from './limit.js';\n\nexport default (rgb) => {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (let i = 0; i <= 3; i++) {\n        if (i < 3) {\n            if (rgb[i] < 0 || rgb[i] > 255) rgb._clipped = true;\n            rgb[i] = limit(rgb[i], 0, 255);\n        } else if (i === 3) {\n            rgb[i] = limit(rgb[i], 0, 1);\n        }\n    }\n    return rgb;\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","import type from './type.js';\n\nexport default (args) => {\n    if (args.length < 2) return null;\n    const l = args.length - 1;\n    if (type(args[l]) == 'string') return args[l].toLowerCase();\n    return null;\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3 };\n","export default {\n    format: {},\n    autodetect: []\n};\n","import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\n\nclass Color {\n    constructor(...args) {\n        const me = this;\n        if (\n            type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor\n        ) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n        if (!mode) {\n            autodetect = true;\n\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n                _input.sorted = true;\n            }\n\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(\n                null,\n                autodetect ? args : args.slice(0, -1)\n            );\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: ' + args);\n        }\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n}\nexport default Color;\n","// this gets updated automatically\nexport const version = '3.1.1';\n","import Color from './Color.js';\nimport { version } from './version.js';\n\nconst chroma = (...args) => {\n    return new Color(...args);\n};\n\nchroma.version = version;\n\nexport default chroma;\n","/**\n\tX11 color names\n\n\thttp://www.w3.org/TR/css3-color/#svg-color\n*/\n\nconst w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\n\nexport default w3cx11;\n","const RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\nconst RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\nconst hex2rgb = (hex) => {\n    if (hex.match(RE_HEX)) {\n        // remove optional leading #\n        if (hex.length === 4 || hex.length === 7) {\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full six-digit\n        if (hex.length === 3) {\n            hex = hex.split('');\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        const u = parseInt(hex, 16);\n        const r = u >> 16;\n        const g = (u >> 8) & 0xff;\n        const b = u & 0xff;\n        return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n        if (hex.length === 5 || hex.length === 9) {\n            // remove optional leading #\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full eight-digit\n        if (hex.length === 4) {\n            hex = hex.split('');\n            hex =\n                hex[0] +\n                hex[0] +\n                hex[1] +\n                hex[1] +\n                hex[2] +\n                hex[2] +\n                hex[3] +\n                hex[3];\n        }\n        const u = parseInt(hex, 16);\n        const r = (u >> 24) & 0xff;\n        const g = (u >> 16) & 0xff;\n        const b = (u >> 8) & 0xff;\n        const a = Math.round(((u & 0xff) / 0xff) * 100) / 100;\n        return [r, g, b, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(`unknown hex color: ${hex}`);\n};\n\nexport default hex2rgb;\n","import { unpack, last } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2hex = (...args) => {\n    let [r, g, b, a] = unpack(args, 'rgba');\n    let mode = last(args) || 'auto';\n    if (a === undefined) a = 1;\n    if (mode === 'auto') {\n        mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round(r);\n    g = round(g);\n    b = round(b);\n    const u = (r << 16) | (g << 8) | b;\n    let str = '000000' + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    let hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n        case 'rgba':\n            return `#${str}${hxa}`;\n        case 'argb':\n            return `#${hxa}${str}`;\n        default:\n            return `#${str}`;\n    }\n};\n\nexport default rgb2hex;\n","import Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport w3cx11 from '../../colors/w3cx11.js';\nimport hex2rgb from '../hex/hex2rgb.js';\nimport rgb2hex from '../hex/rgb2hex.js';\n\nColor.prototype.name = function () {\n    const hex = rgb2hex(this._rgb, 'rgb');\n    for (let n of Object.keys(w3cx11)) {\n        if (w3cx11[n] === hex) return n.toLowerCase();\n    }\n    return hex;\n};\n\ninput.format.named = (name) => {\n    name = name.toLowerCase();\n    if (w3cx11[name]) return hex2rgb(w3cx11[name]);\n    throw new Error('unknown color name: ' + name);\n};\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && w3cx11[h.toLowerCase()]) {\n            return 'named';\n        }\n    }\n});\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.alpha = function (a, mutate = false) {\n    if (a !== undefined && type(a) === 'number') {\n        if (mutate) {\n            this._rgb[3] = a;\n            return this;\n        }\n        return new Color([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n    return this._rgb[3];\n};\n","import Color from '../Color.js';\n\nColor.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n};\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lab2rgb from './lab2rgb.js';\nimport rgb2lab from './rgb2lab.js';\nimport { getLabWhitePoint, setLabWhitePoint } from './lab-constants.js';\n\nColor.prototype.lab = function () {\n    return rgb2lab(this._rgb);\n};\n\nconst lab = (...args) => new Color(...args, 'lab');\nObject.assign(chroma, { lab, getLabWhitePoint, setLabWhitePoint });\n\ninput.format.lab = lab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'lab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'lab';\n        }\n    }\n});\n\nexport { lab, getLabWhitePoint, setLabWhitePoint };\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.darken = function (amount = 1) {\n    const me = this;\n    const lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return new Color(lab, 'lab').alpha(me.alpha(), true);\n};\n\nColor.prototype.brighten = function (amount = 1) {\n    return this.darken(-amount);\n};\n\nColor.prototype.darker = Color.prototype.darken;\nColor.prototype.brighter = Color.prototype.brighten;\n","import Color from '../Color.js';\n\nColor.prototype.get = function (mc) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) return src[i];\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nconst { pow } = Math;\n\nconst EPS = 1e-7;\nconst MAX_ITER = 20;\n\nColor.prototype.luminance = function (lum, mode = 'rgb') {\n    if (lum !== undefined && type(lum) === 'number') {\n        if (lum === 0) {\n            // return pure black\n            return new Color([0, 0, 0, this._rgb[3]], 'rgb');\n        }\n        if (lum === 1) {\n            // return pure white\n            return new Color([255, 255, 255, this._rgb[3]], 'rgb');\n        }\n        // compute new color using...\n        let cur_lum = this.luminance();\n        let max_iter = MAX_ITER;\n\n        const test = (low, high) => {\n            const mid = low.interpolate(high, 0.5, mode);\n            const lm = mid.luminance();\n            if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                // close enough\n                return mid;\n            }\n            return lm > lum ? test(low, mid) : test(mid, high);\n        };\n\n        const rgb = (\n            cur_lum > lum\n                ? test(new Color([0, 0, 0]), this)\n                : test(this, new Color([255, 255, 255]))\n        ).rgb();\n        return new Color([...rgb, this._rgb[3]]);\n    }\n    return rgb2luminance(...this._rgb.slice(0, 3));\n};\n\nconst rgb2luminance = (r, g, b) => {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n\nconst luminance_x = (x) => {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\n};\n","export default {};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nimport interpolator from '../interpolator/index.js';\n\nexport default (col1, col2, f = 0.5, ...rest) => {\n    let mode = rest[0] || 'lrgb';\n    if (!interpolator[mode] && !rest.length) {\n        // fall back to the first supported mode\n        mode = Object.keys(interpolator)[0];\n    }\n    if (!interpolator[mode]) {\n        throw new Error(`interpolation mode ${mode} is not defined`);\n    }\n    if (type(col1) !== 'object') col1 = new Color(col1);\n    if (type(col2) !== 'object') col2 = new Color(col2);\n    return interpolator[mode](col1, col2, f).alpha(\n        col1.alpha() + f * (col2.alpha() - col1.alpha())\n    );\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.mix = Color.prototype.interpolate = function (\n    col2,\n    f = 0.5,\n    ...rest\n) {\n    return mix(this, col2, f, ...rest);\n};\n","import Color from '../Color.js';\n\nColor.prototype.premultiply = function (mutate = false) {\n    const rgb = this._rgb;\n    const a = rgb[3];\n    if (mutate) {\n        this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n        return this;\n    } else {\n        return new Color([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n};\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from './lch2lab.js';\nimport lab2rgb from '../lab/lab2rgb.js';\n\nconst lch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = lab2rgb(L, a, b_);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default lch2rgb;\n","import { unpack } from '../../utils/index.js';\nimport lch2rgb from './lch2rgb.js';\n\nconst hcl2rgb = (...args) => {\n    const hcl = unpack(args, 'hcl').reverse();\n    return lch2rgb(...hcl);\n};\n\nexport default hcl2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lab2lch from './lab2lch.js';\n\nconst rgb2lch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2lab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2lch;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lch2rgb from './lch2rgb.js';\nimport hcl2rgb from './hcl2rgb.js';\nimport rgb2lch from './rgb2lch.js';\n\nColor.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n};\nColor.prototype.hcl = function () {\n    return rgb2lch(this._rgb).reverse();\n};\n\nconst lch = (...args) => new Color(...args, 'lch');\nconst hcl = (...args) => new Color(...args, 'hcl');\n\nObject.assign(chroma, { lch, hcl });\n\ninput.format.lch = lch2rgb;\ninput.format.hcl = hcl2rgb;\n['lch', 'hcl'].forEach((m) =>\n    input.autodetect.push({\n        p: 2,\n        test: (...args) => {\n            args = unpack(args, m);\n            if (type(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    })\n);\n\nexport { lch, hcl };\n","import '../io/lch/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.saturate = function (amount = 1) {\n    const me = this;\n    const lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n    if (lch[1] < 0) lch[1] = 0;\n    return new Color(lch, 'lch').alpha(me.alpha(), true);\n};\n\nColor.prototype.desaturate = function (amount = 1) {\n    return this.saturate(-amount);\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.set = function (mc, value, mutate = false) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) {\n            if (type(value) == 'string') {\n                switch (value.charAt(0)) {\n                    case '+':\n                        src[i] += +value;\n                        break;\n                    case '-':\n                        src[i] += +value;\n                        break;\n                    case '*':\n                        src[i] *= +value.substr(1);\n                        break;\n                    case '/':\n                        src[i] /= +value.substr(1);\n                        break;\n                    default:\n                        src[i] = +value;\n                }\n            } else if (type(value) === 'number') {\n                src[i] = value;\n            } else {\n                throw new Error(`unsupported value for Color.set`);\n            }\n            const out = new Color(src, mode);\n            if (mutate) {\n                this._rgb = out._rgb;\n                return this;\n            }\n            return out;\n        }\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.tint = function (f = 0.5, ...rest) {\n    return mix(this, 'white', f, ...rest);\n};\n\nColor.prototype.shade = function (f = 0.5, ...rest) {\n    return mix(this, 'black', f, ...rest);\n};\n","import Color from '../Color.js';\nimport index from './index.js';\n\nconst rgb = (col1, col2, f) => {\n    const xyz0 = col1._rgb;\n    const xyz1 = col2._rgb;\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.rgb = rgb;\n\nexport default rgb;\n","import Color from '../Color.js';\nconst { sqrt, pow } = Math;\nimport index from './index.js';\n\nconst lrgb = (col1, col2, f) => {\n    const [x1, y1, z1] = col1._rgb;\n    const [x2, y2, z2] = col2._rgb;\n    return new Color(\n        sqrt(pow(x1, 2) * (1 - f) + pow(x2, 2) * f),\n        sqrt(pow(y1, 2) * (1 - f) + pow(y2, 2) * f),\n        sqrt(pow(z1, 2) * (1 - f) + pow(z2, 2) * f),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.lrgb = lrgb;\n\nexport default lrgb;\n","import '../io/lab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst lab = (col1, col2, f) => {\n    const xyz0 = col1.lab();\n    const xyz1 = col2.lab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'lab'\n    );\n};\n\n// register interpolator\nindex.lab = lab;\n\nexport default lab;\n","import Color from '../Color.js';\n\nexport default (col1, col2, f, m) => {\n    let xyz0, xyz1;\n    if (m === 'hsl') {\n        xyz0 = col1.hsl();\n        xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n        xyz0 = col1.hsv();\n        xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n        xyz0 = col1.hcg();\n        xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n        xyz0 = col1.hsi();\n        xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n        m = 'hcl';\n        xyz0 = col1.hcl();\n        xyz1 = col2.hcl();\n    } else if (m === 'oklch') {\n        xyz0 = col1.oklch().reverse();\n        xyz1 = col2.oklch().reverse();\n    }\n\n    let hue0, hue1, sat0, sat1, lbv0, lbv1;\n    if (m.substr(0, 1) === 'h' || m === 'oklch') {\n        [hue0, sat0, lbv0] = xyz0;\n        [hue1, sat1, lbv1] = xyz1;\n    }\n\n    let sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n        // both colors have hue\n        if (hue1 > hue0 && hue1 - hue0 > 180) {\n            dh = hue1 - (hue0 + 360);\n        } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n            dh = hue1 + 360 - hue0;\n        } else {\n            dh = hue1 - hue0;\n        }\n        hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n        hue = hue0;\n        if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') sat = sat0;\n    } else if (!isNaN(hue1)) {\n        hue = hue1;\n        if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') sat = sat1;\n    } else {\n        hue = Number.NaN;\n    }\n\n    if (sat === undefined) sat = sat0 + f * (sat1 - sat0);\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return m === 'oklch'\n        ? new Color([lbv, sat, hue], m)\n        : new Color([hue, sat, lbv], m);\n};\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst lch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'lch');\n};\n\n// register interpolator\nindex.lch = lch;\nindex.hcl = lch;\n\nexport default lch;\n","import { type } from '../../utils/index.js';\n\nconst num2rgb = (num) => {\n    if (type(num) == 'number' && num >= 0 && num <= 0xffffff) {\n        const r = num >> 16;\n        const g = (num >> 8) & 0xff;\n        const b = num & 0xff;\n        return [r, g, b, 1];\n    }\n    throw new Error('unknown num color: ' + num);\n};\n\nexport default num2rgb;\n","import { unpack } from '../../utils/index.js';\n\nconst rgb2num = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    return (r << 16) + (g << 8) + b;\n};\n\nexport default rgb2num;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\nimport num2rgb from './num2rgb.js';\nimport rgb2num from './rgb2num.js';\n\nColor.prototype.num = function () {\n    return rgb2num(this._rgb);\n};\n\nconst num = (...args) => new Color(...args, 'num');\n\nObject.assign(chroma, { num });\n\ninput.format.num = num2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (...args) => {\n        if (\n            args.length === 1 &&\n            type(args[0]) === 'number' &&\n            args[0] >= 0 &&\n            args[0] <= 0xffffff\n        ) {\n            return 'num';\n        }\n    }\n});\n\nexport { num };\n","import '../io/num/index.js';\nimport index from './index.js';\n\nimport Color from '../Color.js';\n\nconst num = (col1, col2, f) => {\n    const c1 = col1.num();\n    const c2 = col2.num();\n    return new Color(c1 + f * (c2 - c1), 'num');\n};\n\n// register interpolator\nindex.num = num;\n\nexport default num;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\n/*\n * this is basically just HSV with some minor tweaks\n *\n * hue.. [0..360]\n * chroma .. [0..1]\n * grayness .. [0..1]\n */\n\nconst hcg2rgb = (...args) => {\n    args = unpack(args, 'hcg');\n    let [h, c, _g] = args;\n    let r, g, b;\n    _g = _g * 255;\n    const _c = c * 255;\n    if (c === 0) {\n        r = g = b = _g;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n        const i = floor(h);\n        const f = h - i;\n        const p = _g * (1 - c);\n        const q = p + _c * (1 - f);\n        const t = p + _c * f;\n        const v = p + _c;\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hcg2rgb;\n","import { unpack, max, min } from '../../utils/index.js';\n\nconst rgb2hcg = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n    const delta = maxRgb - minRgb;\n    const c = (delta * 100) / 255;\n    const _g = (minRgb / (255 - delta)) * 100;\n    let h;\n    if (delta === 0) {\n        h = Number.NaN;\n    } else {\n        if (r === maxRgb) h = (g - b) / delta;\n        if (g === maxRgb) h = 2 + (b - r) / delta;\n        if (b === maxRgb) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, c, _g];\n};\n\nexport default rgb2hcg;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hcg2rgb from './hcg2rgb.js';\nimport rgb2hcg from './rgb2hcg.js';\n\nColor.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n};\n\nconst hcg = (...args) => new Color(...args, 'hcg');\nchroma.hcg = hcg;\n\ninput.format.hcg = hcg2rgb;\n\ninput.autodetect.push({\n    p: 1,\n    test: (...args) => {\n        args = unpack(args, 'hcg');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hcg';\n        }\n    }\n});\n\nexport { hcg };\n","import '../io/hcg/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hcg = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hcg');\n};\n\n// register interpolator\nindex.hcg = hcg;\n\nexport default hcg;\n","import { unpack, limit, TWOPI, PITHIRD } from '../../utils/index.js';\nconst { cos } = Math;\n\n/*\n * hue [0..360]\n * saturation [0..1]\n * intensity [0..1]\n */\nconst hsi2rgb = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n    args = unpack(args, 'hsi');\n    let [h, s, i] = args;\n    let r, g, b;\n\n    if (isNaN(h)) h = 0;\n    if (isNaN(s)) s = 0;\n    // normalize hue\n    if (h > 360) h -= 360;\n    if (h < 0) h += 360;\n    h /= 360;\n    if (h < 1 / 3) {\n        b = (1 - s) / 3;\n        r = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n        h -= 1 / 3;\n        r = (1 - s) / 3;\n        g = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        b = 1 - (r + g);\n    } else {\n        h -= 2 / 3;\n        g = (1 - s) / 3;\n        b = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsi2rgb;\n","import { unpack, TWOPI } from '../../utils/index.js';\nconst { min, sqrt, acos } = Math;\n\nconst rgb2hsi = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n    let [r, g, b] = unpack(args, 'rgb');\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h;\n    const min_ = min(r, g, b);\n    const i = (r + g + b) / 3;\n    const s = i > 0 ? 1 - min_ / i : 0;\n    if (s === 0) {\n        h = NaN;\n    } else {\n        h = (r - g + (r - b)) / 2;\n        h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n        h = acos(h);\n        if (b > g) {\n            h = TWOPI - h;\n        }\n        h /= TWOPI;\n    }\n    return [h * 360, s, i];\n};\n\nexport default rgb2hsi;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsi2rgb from './hsi2rgb.js';\nimport rgb2hsi from './rgb2hsi.js';\n\nColor.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n};\n\nconst hsi = (...args) => new Color(...args, 'hsi');\nchroma.hsi = hsi;\n\ninput.format.hsi = hsi2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsi');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsi';\n        }\n    }\n});\n\nexport { hsi };\n","import '../io/hsi/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsi = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsi');\n};\n\n// register interpolator\nindex.hsi = hsi;\n\nexport default hsi;\n","import { unpack } from '../../utils/index.js';\n\nconst hsl2rgb = (...args) => {\n    args = unpack(args, 'hsl');\n    const [h, s, l] = args;\n    let r, g, b;\n    if (s === 0) {\n        r = g = b = l * 255;\n    } else {\n        const t3 = [0, 0, 0];\n        const c = [0, 0, 0];\n        const t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const t1 = 2 * l - t2;\n        const h_ = h / 360;\n        t3[0] = h_ + 1 / 3;\n        t3[1] = h_;\n        t3[2] = h_ - 1 / 3;\n        for (let i = 0; i < 3; i++) {\n            if (t3[i] < 0) t3[i] += 1;\n            if (t3[i] > 1) t3[i] -= 1;\n            if (6 * t3[i] < 1) c[i] = t1 + (t2 - t1) * 6 * t3[i];\n            else if (2 * t3[i] < 1) c[i] = t2;\n            else if (3 * t3[i] < 2) c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n            else c[i] = t1;\n        }\n        [r, g, b] = [c[0] * 255, c[1] * 255, c[2] * 255];\n    }\n    if (args.length > 3) {\n        // keep alpha channel\n        return [r, g, b, args[3]];\n    }\n    return [r, g, b, 1];\n};\n\nexport default hsl2rgb;\n","import { unpack, min, max } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - rgb2hsl(r,g,b)\n * - rgb2hsl(r,g,b,a)\n * - rgb2hsl([r,g,b])\n * - rgb2hsl([r,g,b,a])\n * - rgb2hsl({r,g,b,a})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgba');\n    let [r, g, b] = args;\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n\n    const l = (maxRgb + minRgb) / 2;\n    let s, h;\n\n    if (maxRgb === minRgb) {\n        s = 0;\n        h = Number.NaN;\n    } else {\n        s =\n            l < 0.5\n                ? (maxRgb - minRgb) / (maxRgb + minRgb)\n                : (maxRgb - minRgb) / (2 - maxRgb - minRgb);\n    }\n\n    if (r == maxRgb) h = (g - b) / (maxRgb - minRgb);\n    else if (g == maxRgb) h = 2 + (b - r) / (maxRgb - minRgb);\n    else if (b == maxRgb) h = 4 + (r - g) / (maxRgb - minRgb);\n\n    h *= 60;\n    if (h < 0) h += 360;\n    if (args.length > 3 && args[3] !== undefined) return [h, s, l, args[3]];\n    return [h, s, l];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsl2rgb from './hsl2rgb.js';\nimport rgb2hsl from './rgb2hsl.js';\n\nColor.prototype.hsl = function () {\n    return rgb2hsl(this._rgb);\n};\n\nconst hsl = (...args) => new Color(...args, 'hsl');\nchroma.hsl = hsl;\n\ninput.format.hsl = hsl2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsl');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsl';\n        }\n    }\n});\n\nexport { hsl };\n","import '../io/hsl/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsl = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsl');\n};\n\n// register interpolator\nindex.hsl = hsl;\n\nexport default hsl;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\nconst hsv2rgb = (...args) => {\n    args = unpack(args, 'hsv');\n    let [h, s, v] = args;\n    let r, g, b;\n    v *= 255;\n    if (s === 0) {\n        r = g = b = v;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n\n        const i = floor(h);\n        const f = h - i;\n        const p = v * (1 - s);\n        const q = v * (1 - s * f);\n        const t = v * (1 - s * (1 - f));\n\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsv2rgb;\n","import { unpack } from '../../utils/index.js';\nconst { min, max } = Math;\n\n/*\n * supported arguments:\n * - rgb2hsv(r,g,b)\n * - rgb2hsv([r,g,b])\n * - rgb2hsv({r,g,b})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgb');\n    let [r, g, b] = args;\n    const min_ = min(r, g, b);\n    const max_ = max(r, g, b);\n    const delta = max_ - min_;\n    let h, s, v;\n    v = max_ / 255.0;\n    if (max_ === 0) {\n        h = Number.NaN;\n        s = 0;\n    } else {\n        s = delta / max_;\n        if (r === max_) h = (g - b) / delta;\n        if (g === max_) h = 2 + (b - r) / delta;\n        if (b === max_) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, s, v];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsv2rgb from './hsv2rgb.js';\nimport rgb2hsv from './rgb2hsv.js';\n\nColor.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n};\n\nconst hsv = (...args) => new Color(...args, 'hsv');\nchroma.hsv = hsv;\n\ninput.format.hsv = hsv2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsv');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsv';\n        }\n    }\n});\n\nexport { hsv };\n","import '../io/hsv/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsv = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsv');\n};\n\n// register interpolator\nindex.hsv = hsv;\n\nexport default hsv;\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklab2rgb from './oklab2rgb.js';\nimport rgb2oklab from './rgb2oklab.js';\n\nColor.prototype.oklab = function () {\n    return rgb2oklab(this._rgb);\n};\n\nconst oklab = (...args) => new Color(...args, 'oklab');\nObject.assign(chroma, { oklab });\n\ninput.format.oklab = oklab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklab';\n        }\n    }\n});\n\nexport { oklab };\n","import '../io/oklab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst oklab = (col1, col2, f) => {\n    const xyz0 = col1.oklab();\n    const xyz1 = col2.oklab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'oklab'\n    );\n};\n\n// register interpolator\nindex.oklab = oklab;\n\nexport default oklab;\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst oklch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'oklch');\n};\n\n// register interpolator\nindex.oklch = oklch;\n\nexport default oklch;\n","import Color from '../Color.js';\nimport { clip_rgb } from '../utils/index.js';\n\nconst { pow, sqrt, PI, cos, sin, atan2 } = Math;\n\nexport default (colors, mode = 'lrgb', weights = null) => {\n    const l = colors.length;\n    if (!weights) weights = Array.from(new Array(l)).map(() => 1);\n    // normalize weights\n    const k =\n        l /\n        weights.reduce(function (a, b) {\n            return a + b;\n        });\n    weights.forEach((w, i) => {\n        weights[i] *= k;\n    });\n    // convert colors to Color objects\n    colors = colors.map((c) => new Color(c));\n    if (mode === 'lrgb') {\n        return _average_lrgb(colors, weights);\n    }\n    const first = colors.shift();\n    const xyz = first.get(mode);\n    const cnt = [];\n    let dx = 0;\n    let dy = 0;\n    // initial color\n    for (let i = 0; i < xyz.length; i++) {\n        xyz[i] = (xyz[i] || 0) * weights[0];\n        cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n        if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n            const A = (xyz[i] / 180) * PI;\n            dx += cos(A) * weights[0];\n            dy += sin(A) * weights[0];\n        }\n    }\n\n    let alpha = first.alpha() * weights[0];\n    colors.forEach((c, ci) => {\n        const xyz2 = c.get(mode);\n        alpha += c.alpha() * weights[ci + 1];\n        for (let i = 0; i < xyz.length; i++) {\n            if (!isNaN(xyz2[i])) {\n                cnt[i] += weights[ci + 1];\n                if (mode.charAt(i) === 'h') {\n                    const A = (xyz2[i] / 180) * PI;\n                    dx += cos(A) * weights[ci + 1];\n                    dy += sin(A) * weights[ci + 1];\n                } else {\n                    xyz[i] += xyz2[i] * weights[ci + 1];\n                }\n            }\n        }\n    });\n\n    for (let i = 0; i < xyz.length; i++) {\n        if (mode.charAt(i) === 'h') {\n            let A = (atan2(dy / cnt[i], dx / cnt[i]) / PI) * 180;\n            while (A < 0) A += 360;\n            while (A >= 360) A -= 360;\n            xyz[i] = A;\n        } else {\n            xyz[i] = xyz[i] / cnt[i];\n        }\n    }\n    alpha /= l;\n    return new Color(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n};\n\nconst _average_lrgb = (colors, weights) => {\n    const l = colors.length;\n    const xyz = [0, 0, 0, 0];\n    for (let i = 0; i < colors.length; i++) {\n        const col = colors[i];\n        const f = weights[i] / l;\n        const rgb = col._rgb;\n        xyz[0] += pow(rgb[0], 2) * f;\n        xyz[1] += pow(rgb[1], 2) * f;\n        xyz[2] += pow(rgb[2], 2) * f;\n        xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 0.9999999) xyz[3] = 1;\n    return new Color(clip_rgb(xyz));\n};\n","// minimal multi-purpose interface\n\n// @requires utils color analyze\nimport chroma from '../chroma.js';\nimport { limit, type } from '../utils/index.js';\n\nconst { pow } = Math;\n\nexport default function (colors) {\n    // constructor\n    let _mode = 'rgb';\n    let _nacol = chroma('#ccc');\n    let _spread = 0;\n    // const _fixed = false;\n    let _domain = [0, 1];\n    let _pos = [];\n    let _padding = [0, 0];\n    let _classes = false;\n    let _colors = [];\n    let _out = false;\n    let _min = 0;\n    let _max = 1;\n    let _correctLightness = false;\n    let _colorCache = {};\n    let _useCache = true;\n    let _gamma = 1;\n\n    // private methods\n\n    const setColors = function (colors) {\n        colors = colors || ['#fff', '#000'];\n        if (\n            colors &&\n            type(colors) === 'string' &&\n            chroma.brewer &&\n            chroma.brewer[colors.toLowerCase()]\n        ) {\n            colors = chroma.brewer[colors.toLowerCase()];\n        }\n        if (type(colors) === 'array') {\n            // handle single color\n            if (colors.length === 1) {\n                colors = [colors[0], colors[0]];\n            }\n            // make a copy of the colors\n            colors = colors.slice(0);\n            // convert to chroma classes\n            for (let c = 0; c < colors.length; c++) {\n                colors[c] = chroma(colors[c]);\n            }\n            // auto-fill color position\n            _pos.length = 0;\n            for (let c = 0; c < colors.length; c++) {\n                _pos.push(c / (colors.length - 1));\n            }\n        }\n        resetCache();\n        return (_colors = colors);\n    };\n\n    const getClass = function (value) {\n        if (_classes != null) {\n            const n = _classes.length - 1;\n            let i = 0;\n            while (i < n && value >= _classes[i]) {\n                i++;\n            }\n            return i - 1;\n        }\n        return 0;\n    };\n\n    let tMapLightness = (t) => t;\n    let tMapDomain = (t) => t;\n\n    // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n    const getColor = function (val, bypassMap) {\n        let col, t;\n        if (bypassMap == null) {\n            bypassMap = false;\n        }\n        if (isNaN(val) || val === null) {\n            return _nacol;\n        }\n        if (!bypassMap) {\n            if (_classes && _classes.length > 2) {\n                // find the class\n                const c = getClass(val);\n                t = c / (_classes.length - 2);\n            } else if (_max !== _min) {\n                // just interpolate between min/max\n                t = (val - _min) / (_max - _min);\n            } else {\n                t = 1;\n            }\n        } else {\n            t = val;\n        }\n\n        // domain map\n        t = tMapDomain(t);\n\n        if (!bypassMap) {\n            t = tMapLightness(t); // lightness correction\n        }\n\n        if (_gamma !== 1) {\n            t = pow(t, _gamma);\n        }\n\n        t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n\n        t = limit(t, 0, 1);\n\n        const k = Math.floor(t * 10000);\n\n        if (_useCache && _colorCache[k]) {\n            col = _colorCache[k];\n        } else {\n            if (type(_colors) === 'array') {\n                //for i in [0.._pos.length-1]\n                for (let i = 0; i < _pos.length; i++) {\n                    const p = _pos[i];\n                    if (t <= p) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t >= p && i === _pos.length - 1) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t > p && t < _pos[i + 1]) {\n                        t = (t - p) / (_pos[i + 1] - p);\n                        col = chroma.interpolate(\n                            _colors[i],\n                            _colors[i + 1],\n                            t,\n                            _mode\n                        );\n                        break;\n                    }\n                }\n            } else if (type(_colors) === 'function') {\n                col = _colors(t);\n            }\n            if (_useCache) {\n                _colorCache[k] = col;\n            }\n        }\n        return col;\n    };\n\n    var resetCache = () => (_colorCache = {});\n\n    setColors(colors);\n\n    // public interface\n\n    const f = function (v) {\n        const c = chroma(getColor(v));\n        if (_out && c[_out]) {\n            return c[_out]();\n        } else {\n            return c;\n        }\n    };\n\n    f.classes = function (classes) {\n        if (classes != null) {\n            if (type(classes) === 'array') {\n                _classes = classes;\n                _domain = [classes[0], classes[classes.length - 1]];\n            } else {\n                const d = chroma.analyze(_domain);\n                if (classes === 0) {\n                    _classes = [d.min, d.max];\n                } else {\n                    _classes = chroma.limits(d, 'e', classes);\n                }\n            }\n            return f;\n        }\n        return _classes;\n    };\n\n    f.domain = function (domain) {\n        if (!arguments.length) {\n            return _domain;\n        }\n        _min = domain[0];\n        _max = domain[domain.length - 1];\n        _pos = [];\n        const k = _colors.length;\n        if (domain.length === k && _min !== _max) {\n            // update positions\n            for (let d of Array.from(domain)) {\n                _pos.push((d - _min) / (_max - _min));\n            }\n        } else {\n            for (let c = 0; c < k; c++) {\n                _pos.push(c / (k - 1));\n            }\n            if (domain.length > 2) {\n                // set domain map\n                const tOut = domain.map((d, i) => i / (domain.length - 1));\n                const tBreaks = domain.map((d) => (d - _min) / (_max - _min));\n                if (!tBreaks.every((val, i) => tOut[i] === val)) {\n                    tMapDomain = (t) => {\n                        if (t <= 0 || t >= 1) return t;\n                        let i = 0;\n                        while (t >= tBreaks[i + 1]) i++;\n                        const f =\n                            (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n                        const out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n                        return out;\n                    };\n                }\n            }\n        }\n        _domain = [_min, _max];\n        return f;\n    };\n\n    f.mode = function (_m) {\n        if (!arguments.length) {\n            return _mode;\n        }\n        _mode = _m;\n        resetCache();\n        return f;\n    };\n\n    f.range = function (colors, _pos) {\n        setColors(colors, _pos);\n        return f;\n    };\n\n    f.out = function (_o) {\n        _out = _o;\n        return f;\n    };\n\n    f.spread = function (val) {\n        if (!arguments.length) {\n            return _spread;\n        }\n        _spread = val;\n        return f;\n    };\n\n    f.correctLightness = function (v) {\n        if (v == null) {\n            v = true;\n        }\n        _correctLightness = v;\n        resetCache();\n        if (_correctLightness) {\n            tMapLightness = function (t) {\n                const L0 = getColor(0, true).lab()[0];\n                const L1 = getColor(1, true).lab()[0];\n                const pol = L0 > L1;\n                let L_actual = getColor(t, true).lab()[0];\n                const L_ideal = L0 + (L1 - L0) * t;\n                let L_diff = L_actual - L_ideal;\n                let t0 = 0;\n                let t1 = 1;\n                let max_iter = 20;\n                while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n                    (function () {\n                        if (pol) {\n                            L_diff *= -1;\n                        }\n                        if (L_diff < 0) {\n                            t0 = t;\n                            t += (t1 - t) * 0.5;\n                        } else {\n                            t1 = t;\n                            t += (t0 - t) * 0.5;\n                        }\n                        L_actual = getColor(t, true).lab()[0];\n                        return (L_diff = L_actual - L_ideal);\n                    })();\n                }\n                return t;\n            };\n        } else {\n            tMapLightness = (t) => t;\n        }\n        return f;\n    };\n\n    f.padding = function (p) {\n        if (p != null) {\n            if (type(p) === 'number') {\n                p = [p, p];\n            }\n            _padding = p;\n            return f;\n        } else {\n            return _padding;\n        }\n    };\n\n    f.colors = function (numColors, out) {\n        // If no arguments are given, return the original colors that were provided\n        if (arguments.length < 2) {\n            out = 'hex';\n        }\n        let result = [];\n\n        if (arguments.length === 0) {\n            result = _colors.slice(0);\n        } else if (numColors === 1) {\n            result = [f(0.5)];\n        } else if (numColors > 1) {\n            const dm = _domain[0];\n            const dd = _domain[1] - dm;\n            result = __range__(0, numColors, false).map((i) =>\n                f(dm + (i / (numColors - 1)) * dd)\n            );\n        } else {\n            // returns all colors based on the defined classes\n            colors = [];\n            let samples = [];\n            if (_classes && _classes.length > 2) {\n                for (\n                    let i = 1, end = _classes.length, asc = 1 <= end;\n                    asc ? i < end : i > end;\n                    asc ? i++ : i--\n                ) {\n                    samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n                }\n            } else {\n                samples = _domain;\n            }\n            result = samples.map((v) => f(v));\n        }\n\n        if (chroma[out]) {\n            result = result.map((c) => c[out]());\n        }\n        return result;\n    };\n\n    f.cache = function (c) {\n        if (c != null) {\n            _useCache = c;\n            return f;\n        } else {\n            return _useCache;\n        }\n    };\n\n    f.gamma = function (g) {\n        if (g != null) {\n            _gamma = g;\n            return f;\n        } else {\n            return _gamma;\n        }\n    };\n\n    f.nodata = function (d) {\n        if (d != null) {\n            _nacol = chroma(d);\n            return f;\n        } else {\n            return _nacol;\n        }\n    };\n\n    return f;\n}\n\nfunction __range__(left, right, inclusive) {\n    let range = [];\n    let ascending = left < right;\n    let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n    }\n    return range;\n}\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nconst { round } = Math;\n\nColor.prototype.rgb = function (rnd = true) {\n    if (rnd === false) return this._rgb.slice(0, 3);\n    return this._rgb.slice(0, 3).map(round);\n};\n\nColor.prototype.rgba = function (rnd = true) {\n    return this._rgb.slice(0, 4).map((v, i) => {\n        return i < 3 ? (rnd === false ? v : round(v)) : v;\n    });\n};\n\nconst rgb = (...args) => new Color(...args, 'rgb');\nObject.assign(chroma, { rgb });\n\ninput.format.rgb = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    if (rgba[3] === undefined) rgba[3] = 1;\n    return rgba;\n};\n\ninput.autodetect.push({\n    p: 3,\n    test: (...args) => {\n        args = unpack(args, 'rgba');\n        if (\n            type(args) === 'array' &&\n            (args.length === 3 ||\n                (args.length === 4 &&\n                    type(args[3]) == 'number' &&\n                    args[3] >= 0 &&\n                    args[3] <= 1))\n        ) {\n            return 'rgb';\n        }\n    }\n});\n\nexport { rgb };\n","/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from https://web.archive.org/web/20180110014946/http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nimport '../io/rgb/index.js';\nimport chroma from '../chroma.js';\n\nconst blend = (bottom, top, mode) => {\n    if (!blend[mode]) {\n        throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n};\n\nconst blend_f = (f) => (bottom, top) => {\n    const c0 = chroma(top).rgb();\n    const c1 = chroma(bottom).rgb();\n    return chroma.rgb(f(c0, c1));\n};\n\nconst each = (f) => (c0, c1) => {\n    const out = [];\n    out[0] = f(c0[0], c1[0]);\n    out[1] = f(c0[1], c1[1]);\n    out[2] = f(c0[2], c1[2]);\n    return out;\n};\n\nconst normal = (a) => a;\nconst multiply = (a, b) => (a * b) / 255;\nconst darken = (a, b) => (a > b ? b : a);\nconst lighten = (a, b) => (a > b ? a : b);\nconst screen = (a, b) => 255 * (1 - (1 - a / 255) * (1 - b / 255));\nconst overlay = (a, b) =>\n    b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\nconst burn = (a, b) => 255 * (1 - (1 - b / 255) / (a / 255));\nconst dodge = (a, b) => {\n    if (a === 255) return 255;\n    a = (255 * (b / 255)) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n};\n\n// # add = (a,b) ->\n// #     if (a + b > 255) then 255 else a + b\n\nblend.normal = blend_f(each(normal));\nblend.multiply = blend_f(each(multiply));\nblend.screen = blend_f(each(screen));\nblend.overlay = blend_f(each(overlay));\nblend.darken = blend_f(each(darken));\nblend.lighten = blend_f(each(lighten));\nblend.dodge = blend_f(each(dodge));\nblend.burn = blend_f(each(burn));\n// blend.add = blend_f(each(add));\n\nexport default blend;\n","// cubehelix interpolation\n// based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n// http://astron-soc.in/bulletin/11June/289392011.pdf\nimport { type, clip_rgb, TWOPI } from '../utils/index.js';\nimport chroma from '../chroma.js';\nconst { pow, sin, cos } = Math;\n\nexport default function (\n    start = 300,\n    rotations = -1.5,\n    hue = 1,\n    gamma = 1,\n    lightness = [0, 1]\n) {\n    let dh = 0,\n        dl;\n    if (type(lightness) === 'array') {\n        dl = lightness[1] - lightness[0];\n    } else {\n        dl = 0;\n        lightness = [lightness, lightness];\n    }\n    const f = function (fract) {\n        const a = TWOPI * ((start + 120) / 360 + rotations * fract);\n        const l = pow(lightness[0] + dl * fract, gamma);\n        const h = dh !== 0 ? hue[0] + fract * dh : hue;\n        const amp = (h * l * (1 - l)) / 2;\n        const cos_a = cos(a);\n        const sin_a = sin(a);\n        const r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n        const g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n        const b = l + amp * (+1.97294 * cos_a);\n        return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function (s) {\n        if (s == null) {\n            return start;\n        }\n        start = s;\n        return f;\n    };\n    f.rotations = function (r) {\n        if (r == null) {\n            return rotations;\n        }\n        rotations = r;\n        return f;\n    };\n    f.gamma = function (g) {\n        if (g == null) {\n            return gamma;\n        }\n        gamma = g;\n        return f;\n    };\n    f.hue = function (h) {\n        if (h == null) {\n            return hue;\n        }\n        hue = h;\n        if (type(hue) === 'array') {\n            dh = hue[1] - hue[0];\n            if (dh === 0) {\n                hue = hue[1];\n            }\n        } else {\n            dh = 0;\n        }\n        return f;\n    };\n    f.lightness = function (h) {\n        if (h == null) {\n            return lightness;\n        }\n        if (type(h) === 'array') {\n            lightness = h;\n            dl = h[1] - h[0];\n        } else {\n            lightness = [h, h];\n            dl = 0;\n        }\n        return f;\n    };\n    f.scale = () => chroma.scale(f);\n    f.hue(hue);\n    return f;\n}\n","import Color from '../Color.js';\nconst digits = '0123456789abcdef';\n\nconst { floor, random } = Math;\n\nexport default () => {\n    let code = '#';\n    for (let i = 0; i < 6; i++) {\n        code += digits.charAt(floor(random() * 16));\n    }\n    return new Color(code, 'hex');\n};\n","import type from './type.js';\n\nconst { log, pow, floor, abs } = Math;\n\nexport function analyze(data, key = null) {\n    const r = {\n        min: Number.MAX_VALUE,\n        max: Number.MAX_VALUE * -1,\n        sum: 0,\n        values: [],\n        count: 0\n    };\n    if (type(data) === 'object') {\n        data = Object.values(data);\n    }\n    data.forEach((val) => {\n        if (key && type(val) === 'object') val = val[key];\n        if (val !== undefined && val !== null && !isNaN(val)) {\n            r.values.push(val);\n            r.sum += val;\n            if (val < r.min) r.min = val;\n            if (val > r.max) r.max = val;\n            r.count += 1;\n        }\n    });\n\n    r.domain = [r.min, r.max];\n\n    r.limits = (mode, num) => limits(r, mode, num);\n\n    return r;\n}\n\nexport function limits(data, mode = 'equal', num = 7) {\n    if (type(data) == 'array') {\n        data = analyze(data);\n    }\n    const { min, max } = data;\n    const values = data.values.sort((a, b) => a - b);\n\n    if (num === 1) {\n        return [min, max];\n    }\n\n    const limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n        // continuous\n        limits.push(min);\n        limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n        // equal interval\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(min + (i / num) * (max - min));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n        // log scale\n        if (min <= 0) {\n            throw new Error(\n                'Logarithmic scales are only possible for values > 0'\n            );\n        }\n        const min_log = Math.LOG10E * log(min);\n        const max_log = Math.LOG10E * log(max);\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n        // quantile scale\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            const p = ((values.length - 1) * i) / num;\n            const pb = floor(p);\n            if (pb === p) {\n                limits.push(values[pb]);\n            } else {\n                // p > pb\n                const pr = p - pb;\n                limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n            }\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n        // k-means clustering\n        /*\n        implementation based on\n        http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n        simplified for 1-d input values\n        */\n        let cluster;\n        const n = values.length;\n        const assignments = new Array(n);\n        const clusterSizes = new Array(num);\n        let repeat = true;\n        let nb_iters = 0;\n        let centroids = null;\n\n        // get seed values\n        centroids = [];\n        centroids.push(min);\n        for (let i = 1; i < num; i++) {\n            centroids.push(min + (i / num) * (max - min));\n        }\n        centroids.push(max);\n\n        while (repeat) {\n            // assignment step\n            for (let j = 0; j < num; j++) {\n                clusterSizes[j] = 0;\n            }\n            for (let i = 0; i < n; i++) {\n                const value = values[i];\n                let mindist = Number.MAX_VALUE;\n                let best;\n                for (let j = 0; j < num; j++) {\n                    const dist = abs(centroids[j] - value);\n                    if (dist < mindist) {\n                        mindist = dist;\n                        best = j;\n                    }\n                    clusterSizes[best]++;\n                    assignments[i] = best;\n                }\n            }\n\n            // update centroids step\n            const newCentroids = new Array(num);\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] = null;\n            }\n            for (let i = 0; i < n; i++) {\n                cluster = assignments[i];\n                if (newCentroids[cluster] === null) {\n                    newCentroids[cluster] = values[i];\n                } else {\n                    newCentroids[cluster] += values[i];\n                }\n            }\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] *= 1 / clusterSizes[j];\n            }\n\n            // check convergence\n            repeat = false;\n            for (let j = 0; j < num; j++) {\n                if (newCentroids[j] !== centroids[j]) {\n                    repeat = true;\n                    break;\n                }\n            }\n\n            centroids = newCentroids;\n            nb_iters++;\n\n            if (nb_iters > 200) {\n                repeat = false;\n            }\n        }\n\n        // finished k-means clustering\n        // the next part is borrowed from gabrielflor.it\n        const kClusters = {};\n        for (let j = 0; j < num; j++) {\n            kClusters[j] = [];\n        }\n        for (let i = 0; i < n; i++) {\n            cluster = assignments[i];\n            kClusters[cluster].push(values[i]);\n        }\n        let tmpKMeansBreaks = [];\n        for (let j = 0; j < num; j++) {\n            tmpKMeansBreaks.push(kClusters[j][0]);\n            tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n        }\n        tmpKMeansBreaks = tmpKMeansBreaks.sort((a, b) => a - b);\n        limits.push(tmpKMeansBreaks[0]);\n        for (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n            const v = tmpKMeansBreaks[i];\n            if (!isNaN(v) && limits.indexOf(v) === -1) {\n                limits.push(v);\n            }\n        }\n    }\n    return limits;\n}\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\n/**\n * @license\n *\n * The APCA contrast prediction algorithm is based of the formulas published\n * in the APCA-1.0.98G specification by Myndex. The specification is available at:\n * https://raw.githubusercontent.com/Myndex/apca-w3/master/images/APCAw3_0.1.17_APCA0.0.98G.svg\n *\n * Note that the APCA implementation is still beta, so please update to\n * future versions of chroma.js when they become available.\n *\n * You can read more about the APCA Readability Criterion at\n * https://readtech.org/ARC/\n */\n\n// constants\nconst W_offset = 0.027;\nconst P_in = 0.0005;\nconst P_out = 0.1;\nconst R_scale = 1.14;\nconst B_threshold = 0.022;\nconst B_exp = 1.414;\n\nexport default (text, bg) => {\n    // parse input colors\n    text = new Color(text);\n    bg = new Color(bg);\n    // if text color has alpha, blend against background\n    if (text.alpha() < 1) {\n        text = mix(bg, text, text.alpha(), 'rgb');\n    }\n    const l_text = lum(...text.rgb());\n    const l_bg = lum(...bg.rgb());\n\n    // soft clamp black levels\n    const Y_text =\n        l_text >= B_threshold\n            ? l_text\n            : l_text + Math.pow(B_threshold - l_text, B_exp);\n    const Y_bg =\n        l_bg >= B_threshold ? l_bg : l_bg + Math.pow(B_threshold - l_bg, B_exp);\n\n    // normal polarity (dark text on light background)\n    const S_norm = Math.pow(Y_bg, 0.56) - Math.pow(Y_text, 0.57);\n    // reverse polarity (light text on dark background)\n    const S_rev = Math.pow(Y_bg, 0.65) - Math.pow(Y_text, 0.62);\n    // clamp noise then scale\n    const C =\n        Math.abs(Y_bg - Y_text) < P_in\n            ? 0\n            : Y_text < Y_bg\n              ? S_norm * R_scale\n              : S_rev * R_scale;\n    // clamp minimum contrast then offset\n    const S_apc = Math.abs(C) < P_out ? 0 : C > 0 ? C - W_offset : C + W_offset;\n    // scale to 100\n    return S_apc * 100;\n};\n\nfunction lum(r, g, b) {\n    return (\n        0.2126729 * Math.pow(r / 255, 2.4) +\n        0.7151522 * Math.pow(g / 255, 2.4) +\n        0.072175 * Math.pow(b / 255, 2.4)\n    );\n}\n","import Color from '../Color.js';\nconst { sqrt, pow, min, max, atan2, abs, cos, sin, exp, PI } = Math;\n\nexport default function (a, b, Kl = 1, Kc = 1, Kh = 1) {\n    // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n    var rad2deg = function (rad) {\n        return (360 * rad) / (2 * PI);\n    };\n    var deg2rad = function (deg) {\n        return (2 * PI * deg) / 360;\n    };\n    a = new Color(a);\n    b = new Color(b);\n    const [L1, a1, b1] = Array.from(a.lab());\n    const [L2, a2, b2] = Array.from(b.lab());\n    const avgL = (L1 + L2) / 2;\n    const C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    const C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    const avgC = (C1 + C2) / 2;\n    const G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    const a1p = a1 * (1 + G);\n    const a2p = a2 * (1 + G);\n    const C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    const C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    const avgCp = (C1p + C2p) / 2;\n    const arctan1 = rad2deg(atan2(b1, a1p));\n    const arctan2 = rad2deg(atan2(b2, a2p));\n    const h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    const h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    const avgHp =\n        abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    const T =\n        1 -\n        0.17 * cos(deg2rad(avgHp - 30)) +\n        0.24 * cos(deg2rad(2 * avgHp)) +\n        0.32 * cos(deg2rad(3 * avgHp + 6)) -\n        0.2 * cos(deg2rad(4 * avgHp - 63));\n    let deltaHp = h2p - h1p;\n    deltaHp =\n        abs(deltaHp) <= 180\n            ? deltaHp\n            : h2p <= h1p\n              ? deltaHp + 360\n              : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    const deltaL = L2 - L1;\n    const deltaCp = C2p - C1p;\n    const sl = 1 + (0.015 * pow(avgL - 50, 2)) / sqrt(20 + pow(avgL - 50, 2));\n    const sc = 1 + 0.045 * avgCp;\n    const sh = 1 + 0.015 * avgCp * T;\n    const deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    const Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    const Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    const result = sqrt(\n        pow(deltaL / (Kl * sl), 2) +\n            pow(deltaCp / (Kc * sc), 2) +\n            pow(deltaHp / (Kh * sh), 2) +\n            Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh))\n    );\n    return max(0, min(100, result));\n}\n","import Color from '../Color.js';\n\nexport default (...args) => {\n    try {\n        new Color(...args);\n        return true;\n        // eslint-disable-next-line\n    } catch (e) {\n        return false;\n    }\n};\n","// some pre-defined color scales:\nimport chroma from '../chroma.js';\nimport '../io/hsl/index.js';\nimport scale from '../generator/scale.js';\n\nexport default {\n    cool() {\n        return scale([chroma.hsl(180, 1, 0.9), chroma.hsl(250, 0.7, 0.4)]);\n    },\n    hot() {\n        return scale(['#000', '#f00', '#ff0', '#fff'], [0, 0.25, 0.75, 1]).mode(\n            'rgb'\n        );\n    }\n};\n","/**\n    ColorBrewer colors for chroma.js\n\n    Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n    Pennsylvania State University.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software distributed\n    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n    CONDITIONS OF ANY KIND, either express or implied. See the License for the\n    specific language governing permissions and limitations under the License.\n*/\n\nconst colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n};\n\nconst colorbrewerTypes = Object.keys(colorbrewer);\nconst typeMap = new Map(colorbrewerTypes.map((key) => [key.toLowerCase(), key]));\n\n// use Proxy to allow case-insensitive access to palettes\nconst colorbrewerProxy =\n    typeof Proxy === 'function'\n        ? new Proxy(colorbrewer, {\n              get(target, prop) {\n                  const lower = prop.toLowerCase();\n                  if (typeMap.has(lower)) {\n                      return target[typeMap.get(lower)];\n                  }\n              },\n              getOwnPropertyNames() {\n                  return Object.getOwnPropertyNames(colorbrewerTypes);\n              }\n          })\n        : colorbrewer;\n\nexport default colorbrewerProxy;\n","import { unpack } from '../../utils/index.js';\n\nconst cmyk2rgb = (...args) => {\n    args = unpack(args, 'cmyk');\n    const [c, m, y, k] = args;\n    const alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) return [0, 0, 0, alpha];\n    return [\n        c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n        m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n        y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n        alpha\n    ];\n};\n\nexport default cmyk2rgb;\n","import { unpack } from '../../utils/index.js';\nconst { max } = Math;\n\nconst rgb2cmyk = (...args) => {\n    let [r, g, b] = unpack(args, 'rgb');\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    const k = 1 - max(r, max(g, b));\n    const f = k < 1 ? 1 / (1 - k) : 0;\n    const c = (1 - r - k) * f;\n    const m = (1 - g - k) * f;\n    const y = (1 - b - k) * f;\n    return [c, m, y, k];\n};\n\nexport default rgb2cmyk;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nimport cmyk2rgb from './cmyk2rgb.js';\nimport rgb2cmyk from './rgb2cmyk.js';\n\nColor.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n};\n\nconst cmyk = (...args) => new Color(...args, 'cmyk');\nObject.assign(chroma, { cmyk });\n\ninput.format.cmyk = cmyk2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'cmyk');\n        if (type(args) === 'array' && args.length === 4) {\n            return 'cmyk';\n        }\n    }\n});\n\nexport { cmyk };\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - hsl2css(h,s,l)\n * - hsl2css(h,s,l,a)\n * - hsl2css([h,s,l], mode)\n * - hsl2css([h,s,l,a], mode)\n * - hsl2css({h,s,l,a}, mode)\n */\nconst hsl2css = (...args) => {\n    const hsla = unpack(args, 'hsla');\n    let mode = last(args) || 'lsa';\n    hsla[0] = rnd2(hsla[0] || 0) + 'deg';\n    hsla[1] = rnd2(hsla[1] * 100) + '%';\n    hsla[2] = rnd2(hsla[2] * 100) + '%';\n    if (mode === 'hsla' || (hsla.length > 3 && hsla[3] < 1)) {\n        hsla[3] = '/ ' + (hsla.length > 3 ? hsla[3] : 1);\n        mode = 'hsla';\n    } else {\n        hsla.length = 3;\n    }\n    return `${mode.substr(0, 3)}(${hsla.join(' ')})`;\n};\n\nexport default hsl2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    let mode = last(args) || 'lab';\n    laba[0] = rnd2(laba[0]) + '%';\n    laba[1] = rnd2(laba[1]);\n    laba[2] = rnd2(laba[2]);\n    if (mode === 'laba' || (laba.length > 3 && laba[3] < 1)) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `lab(${laba.join(' ')})`;\n};\n\nexport default lab2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    let mode = last(args) || 'lab';\n    lcha[0] = rnd2(lcha[0]) + '%';\n    lcha[1] = rnd2(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (mode === 'lcha' || (lcha.length > 3 && lcha[3] < 1)) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `lch(${lcha.join(' ')})`;\n};\n\nexport default lch2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    laba[0] = rnd2(laba[0] * 100) + '%';\n    laba[1] = rnd3(laba[1]);\n    laba[2] = rnd3(laba[2]);\n    if (laba.length > 3 && laba[3] < 1) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `oklab(${laba.join(' ')})`;\n};\n\nexport default oklab2css;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    lcha[0] = rnd2(lcha[0] * 100) + '%';\n    lcha[1] = rnd3(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (lcha.length > 3 && lcha[3] < 1) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `oklch(${lcha.join(' ')})`;\n};\n\nexport default oklch2css;\n","import { unpack, last } from '../../utils/index.js';\nimport hsl2css from './hsl2css.js';\nimport rgb2hsl from '../hsl/rgb2hsl.js';\nimport lab2css from './lab2css.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lch2css from './lch2css.js';\nimport rgb2lch from '../lch/rgb2lch.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport oklab2css from './oklab2css.js';\nimport rgb2oklch from '../oklch/rgb2oklch.js';\nimport oklch2css from './oklch2css.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\nconst { round } = Math;\n\n/*\n * supported arguments:\n * - rgb2css(r,g,b)\n * - rgb2css(r,g,b,a)\n * - rgb2css([r,g,b], mode)\n * - rgb2css([r,g,b,a], mode)\n * - rgb2css({r,g,b,a}, mode)\n */\nconst rgb2css = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    let mode = last(args) || 'rgb';\n    if (mode.substr(0, 3) === 'hsl') {\n        return hsl2css(rgb2hsl(rgba), mode);\n    }\n    if (mode.substr(0, 3) === 'lab') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lab2css(rgb2lab(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 3) === 'lch') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lch2css(rgb2lch(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 5) === 'oklab') {\n        return oklab2css(rgb2oklab(rgba));\n    }\n    if (mode.substr(0, 5) === 'oklch') {\n        return oklch2css(rgb2oklch(rgba));\n    }\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n    if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {\n        rgba[3] = '/ ' + (rgba.length > 3 ? rgba[3] : 1);\n        mode = 'rgba';\n    }\n    return `${mode.substr(0, 3)}(${rgba.slice(0, mode === 'rgb' ? 3 : 4).join(' ')})`;\n};\n\nexport default rgb2css;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import hsl2rgb from '../hsl/hsl2rgb.js';\nimport lab2rgb from '../lab/lab2rgb.js';\nimport lch2rgb from '../lch/lch2rgb.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\nimport oklch2rgb from '../oklch/oklch2rgb.js';\nimport input from '../input.js';\nimport limit from '../../utils/limit.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\n\nconst INT_OR_PCT = /((?:-?\\d+)|(?:-?\\d+(?:\\.\\d+)?)%|none)/.source;\nconst FLOAT_OR_PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%?)|none)/.source;\nconst PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%)|none)/.source;\nconst RE_S = /\\s*/.source;\nconst SEP = /\\s+/.source;\nconst COMMA = /\\s*,\\s*/.source;\nconst ANLGE = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:deg)?)|none)/.source;\nconst ALPHA = /\\s*(?:\\/\\s*((?:[01]|[01]?\\.\\d+)|\\d+(?:\\.\\d+)?%))?/.source;\n\n// e.g. rgb(250 20 0), rgb(100% 50% 20%), rgb(100% 50% 20% / 0.5)\nconst RE_RGB = new RegExp(\n    '^rgba?\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_RGB_LEGACY = new RegExp(\n    '^rgb\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\nconst RE_RGBA_LEGACY = new RegExp(\n    '^rgba\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT, FLOAT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\n\nconst RE_HSL = new RegExp(\n    '^hsla?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(SEP) + ALPHA + '\\\\)$'\n);\nconst RE_HSL_LEGACY = new RegExp(\n    '^hsl?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(COMMA) + RE_S + '\\\\)$'\n);\nconst RE_HSLA_LEGACY =\n    /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\nconst RE_LAB = new RegExp(\n    '^lab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_LCH = new RegExp(\n    '^lch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLAB = new RegExp(\n    '^oklab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLCH = new RegExp(\n    '^oklch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\n\nconst { round } = Math;\n\nconst roundRGB = (rgb) => {\n    return rgb.map((v, i) => (i <= 2 ? limit(round(v), 0, 255) : v));\n};\n\nconst percentToAbsolute = (pct, min = 0, max = 100, signed = false) => {\n    if (typeof pct === 'string' && pct.endsWith('%')) {\n        pct = parseFloat(pct.substring(0, pct.length - 1)) / 100;\n        if (signed) {\n            // signed percentages are in the range -100% to 100%\n            pct = min + (pct + 1) * 0.5 * (max - min);\n        } else {\n            pct = min + pct * (max - min);\n        }\n    }\n    return +pct;\n};\n\nconst noneToValue = (v, noneValue) => {\n    return v === 'none' ? noneValue : v;\n};\n\nconst css2rgb = (css) => {\n    css = css.toLowerCase().trim();\n\n    if (css === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n\n    let m;\n\n    if (input.format.named) {\n        try {\n            return input.format.named(css);\n            // eslint-disable-next-line\n        } catch (e) {}\n    }\n\n    // rgb(250 20 0) or rgb(250,20,0)\n    if ((m = css.match(RE_RGB)) || (m = css.match(RE_RGB_LEGACY))) {\n        let rgb = m.slice(1, 4);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = +percentToAbsolute(noneToValue(rgb[i], 0), 0, 255);\n        }\n        rgb = roundRGB(rgb);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha; // default alpha\n        return rgb;\n    }\n\n    // rgba(250,20,0,0.4)\n    if ((m = css.match(RE_RGBA_LEGACY))) {\n        const rgb = m.slice(1, 5);\n        for (let i = 0; i < 4; i++) {\n            rgb[i] = +percentToAbsolute(rgb[i], 0, 255);\n        }\n        return rgb;\n    }\n\n    // hsl(0,100%,50%)\n    if ((m = css.match(RE_HSL)) || (m = css.match(RE_HSL_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[0] = +noneToValue(hsl[0].replace('deg', ''), 0);\n        hsl[1] = +percentToAbsolute(noneToValue(hsl[1], 0), 0, 100) * 0.01;\n        hsl[2] = +percentToAbsolute(noneToValue(hsl[2], 0), 0, 100) * 0.01;\n        const rgb = roundRGB(hsl2rgb(hsl));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    // hsla(0,100%,50%,0.5)\n    if ((m = css.match(RE_HSLA_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[1] *= 0.01;\n        hsl[2] *= 0.01;\n        const rgb = hsl2rgb(hsl);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = round(rgb[i]);\n        }\n        rgb[3] = +m[4]; // default alpha = 1\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LAB))) {\n        const lab = m.slice(1, 4);\n        lab[0] = percentToAbsolute(noneToValue(lab[0], 0), 0, 100);\n        lab[1] = percentToAbsolute(noneToValue(lab[1], 0), -125, 125, true);\n        lab[2] = percentToAbsolute(noneToValue(lab[2], 0), -125, 125, true);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lab2rgb(lab));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LCH))) {\n        const lch = m.slice(1, 4);\n        lch[0] = percentToAbsolute(lch[0], 0, 100);\n        lch[1] = percentToAbsolute(noneToValue(lch[1], 0), 0, 150, false);\n        lch[2] = +noneToValue(lch[2].replace('deg', ''), 0);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lch2rgb(lch));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLAB))) {\n        const oklab = m.slice(1, 4);\n        oklab[0] = percentToAbsolute(noneToValue(oklab[0], 0), 0, 1);\n        oklab[1] = percentToAbsolute(noneToValue(oklab[1], 0), -0.4, 0.4, true);\n        oklab[2] = percentToAbsolute(noneToValue(oklab[2], 0), -0.4, 0.4, true);\n        const rgb = roundRGB(oklab2rgb(oklab));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLCH))) {\n        const oklch = m.slice(1, 4);\n        oklch[0] = percentToAbsolute(noneToValue(oklch[0], 0), 0, 1);\n        oklch[1] = percentToAbsolute(noneToValue(oklch[1], 0), 0, 0.4, false);\n        oklch[2] = +noneToValue(oklch[2].replace('deg', ''), 0);\n        const rgb = roundRGB(oklch2rgb(oklch));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n};\n\ncss2rgb.test = (s) => {\n    return (\n        // modern\n        RE_RGB.test(s) ||\n        RE_HSL.test(s) ||\n        RE_LAB.test(s) ||\n        RE_LCH.test(s) ||\n        RE_OKLAB.test(s) ||\n        RE_OKLCH.test(s) ||\n        // legacy\n        RE_RGB_LEGACY.test(s) ||\n        RE_RGBA_LEGACY.test(s) ||\n        RE_HSL_LEGACY.test(s) ||\n        RE_HSLA_LEGACY.test(s) ||\n        s === 'transparent'\n    );\n};\n\nexport default css2rgb;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport rgb2css from './rgb2css.js';\nimport css2rgb from './css2rgb.js';\n\nColor.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n};\n\nconst css = (...args) => new Color(...args, 'css');\nchroma.css = css;\n\ninput.format.css = css2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && css2rgb.test(h)) {\n            return 'css';\n        }\n    }\n});\n\nexport { css };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport input from '../input.js';\nimport { unpack } from '../../utils/index.js';\n\ninput.format.gl = (...args) => {\n    const rgb = unpack(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n};\n\nconst gl = (...args) => new Color(...args, 'gl');\nchroma.gl = gl;\n\nColor.prototype.gl = function () {\n    const rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n};\n\nexport { gl };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport { type } from '../../utils/index.js';\nimport input from '../input.js';\nimport hex2rgb from './hex2rgb.js';\nimport rgb2hex from './rgb2hex.js';\n\nColor.prototype.hex = function (mode) {\n    return rgb2hex(this._rgb, mode);\n};\n\nconst hex = (...args) => new Color(...args, 'hex');\nchroma.hex = hex;\n\ninput.format.hex = hex2rgb;\ninput.autodetect.push({\n    p: 4,\n    test: (h, ...rest) => {\n        if (\n            !rest.length &&\n            type(h) === 'string' &&\n            [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0\n        ) {\n            return 'hex';\n        }\n    }\n});\n\nexport { hex };\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n */\n\nconst { log } = Math;\n\nconst temperature2rgb = (kelvin) => {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n        r = 255;\n        g =\n            temp < 6\n                ? 0\n                : -155.25485562709179 -\n                  0.44596950469579133 * (g = temp - 2) +\n                  104.49216199393888 * log(g);\n        b =\n            temp < 20\n                ? 0\n                : -254.76935184120902 +\n                  0.8274096064007395 * (b = temp - 10) +\n                  115.67994401066147 * log(b);\n    } else {\n        r =\n            351.97690566805693 +\n            0.114206453784165 * (r = temp - 55) -\n            40.25366309332127 * log(r);\n        g =\n            325.4494125711974 +\n            0.07943456536662342 * (g = temp - 50) -\n            28.0852963507957 * log(g);\n        b = 255;\n    }\n    return [r, g, b, 1];\n};\n\nexport default temperature2rgb;\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n **/\n\nimport temperature2rgb from './temperature2rgb.js';\nimport { unpack } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2temperature = (...args) => {\n    const rgb = unpack(args, 'rgb');\n    const r = rgb[0],\n        b = rgb[2];\n    let minTemp = 1000;\n    let maxTemp = 40000;\n    const eps = 0.4;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n        temp = (maxTemp + minTemp) * 0.5;\n        const rgb = temperature2rgb(temp);\n        if (rgb[2] / rgb[0] >= b / r) {\n            maxTemp = temp;\n        } else {\n            minTemp = temp;\n        }\n    }\n    return round(temp);\n};\n\nexport default rgb2temperature;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport temperature2rgb from './temperature2rgb.js';\nimport rgb2temperature from './rgb2temperature.js';\n\nColor.prototype.temp =\n    Color.prototype.kelvin =\n    Color.prototype.temperature =\n        function () {\n            return rgb2temperature(this._rgb);\n        };\n\nconst temp = (...args) => new Color(...args, 'temp');\nObject.assign(chroma, { temp, kelvin: temp, temperature: temp });\n\ninput.format.temp =\n    input.format.kelvin =\n    input.format.temperature =\n        temperature2rgb;\n\nexport { temp, temp as kelvin, temp as temperature };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklch2rgb from './oklch2rgb.js';\nimport rgb2oklch from './rgb2oklch.js';\n\nColor.prototype.oklch = function () {\n    return rgb2oklch(this._rgb);\n};\n\nconst oklch = (...args) => new Color(...args, 'oklch');\nObject.assign(chroma, { oklch });\n\ninput.format.oklch = oklch2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklch');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklch';\n        }\n    }\n});\n\nexport { oklch };\n","// feel free to comment out anything to rollup\n// a smaller chroma.js bundle\nimport chroma from './src/chroma.js';\n\n// io --> convert colors\nimport './src/io/named/index.js';\n\n// operators --> modify existing Colors\nimport './src/ops/alpha.js';\nimport './src/ops/clipped.js';\nimport './src/ops/darken.js';\nimport './src/ops/get.js';\nimport './src/ops/luminance.js';\nimport './src/ops/mix.js';\nimport './src/ops/premultiply.js';\nimport './src/ops/saturate.js';\nimport './src/ops/set.js';\nimport './src/ops/shade.js';\n\n// interpolators\nimport './src/interpolator/rgb.js';\nimport './src/interpolator/lrgb.js';\nimport './src/interpolator/lab.js';\nimport './src/interpolator/lch.js';\nimport './src/interpolator/num.js';\nimport './src/interpolator/hcg.js';\nimport './src/interpolator/hsi.js';\nimport './src/interpolator/hsl.js';\nimport './src/interpolator/hsv.js';\nimport './src/interpolator/oklab.js';\nimport './src/interpolator/oklch.js';\n\n// generators -- > create new colors\nimport average from './src/generator/average.js';\nimport bezier from './src/generator/bezier.js';\nimport blend from './src/generator/blend.js';\nimport cubehelix from './src/generator/cubehelix.js';\nimport mix from './src/generator/mix.js';\nimport random from './src/generator/random.js';\nimport scale from './src/generator/scale.js';\n\n// other utility methods\nimport { analyze } from './src/utils/analyze.js';\nimport contrast from './src/utils/contrast.js';\nimport contrastAPCA from './src/utils/contrastAPCA.js';\nimport deltaE from './src/utils/delta-e.js';\nimport distance from './src/utils/distance.js';\nimport { limits } from './src/utils/analyze.js';\nimport valid from './src/utils/valid.js';\nimport input from './src/io/input.js';\n\n// scale\nimport scales from './src/utils/scales.js';\n\n// colors\nimport colors from './src/colors/w3cx11.js';\nimport brewer from './src/colors/colorbrewer.js';\nimport Color from './src/Color.js';\n\nObject.assign(chroma, {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    interpolate: mix,\n    limits,\n    mix,\n    random,\n    scale,\n    scales,\n    valid\n});\n\nexport default chroma;\n\nexport {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    limits,\n    mix,\n    mix as interpolate,\n    random,\n    scale,\n    scales,\n    valid\n};\n\nexport * from './src/io/cmyk/index.js';\nexport * from './src/io/css/index.js';\nexport * from './src/io/gl/index.js';\nexport * from './src/io/hcg/index.js';\nexport * from './src/io/hex/index.js';\nexport * from './src/io/hsi/index.js';\nexport * from './src/io/hsl/index.js';\nexport * from './src/io/hsv/index.js';\nexport * from './src/io/lab/index.js';\nexport * from './src/io/lch/index.js';\nexport * from './src/io/num/index.js';\nexport * from './src/io/rgb/index.js';\nexport * from './src/io/temp/index.js';\nexport * from './src/io/oklab/index.js';\nexport * from './src/io/oklch/index.js';\n","//\n// interpolates between a set of colors uzing a bezier spline\n//\n\n// @requires utils lab\nimport Color from '../Color.js';\nimport '../io/lab/index.js';\nimport scale from './scale.js';\n\n// nth row of the pascal triangle\nconst binom_row = function (n) {\n    let row = [1, 1];\n    for (let i = 1; i < n; i++) {\n        let newrow = [1];\n        for (let j = 1; j <= row.length; j++) {\n            newrow[j] = (row[j] || 0) + row[j - 1];\n        }\n        row = newrow;\n    }\n    return row;\n};\n\nconst bezier = function (colors) {\n    let I, lab0, lab1, lab2;\n    colors = colors.map((c) => new Color(c));\n    if (colors.length === 2) {\n        // linear interpolation\n        [lab0, lab1] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map((i) => lab0[i] + t * (lab1[i] - lab0[i]));\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 3) {\n        // quadratic bezier interpolation\n        [lab0, lab1, lab2] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * lab0[i] +\n                    2 * (1 - t) * t * lab1[i] +\n                    t * t * lab2[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 4) {\n        // cubic bezier interpolation\n        let lab3;\n        [lab0, lab1, lab2, lab3] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * (1 - t) * lab0[i] +\n                    3 * (1 - t) * (1 - t) * t * lab1[i] +\n                    3 * (1 - t) * t * t * lab2[i] +\n                    t * t * t * lab3[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length >= 5) {\n        // general case (degree n bezier)\n        let labs, row, n;\n        labs = colors.map((c) => c.lab());\n        n = colors.length - 1;\n        row = binom_row(n);\n        I = function (t) {\n            const u = 1 - t;\n            const lab = [0, 1, 2].map((i) =>\n                labs.reduce(\n                    (sum, el, j) =>\n                        sum + row[j] * u ** (n - j) * t ** j * el[i],\n                    0\n                )\n            );\n            return new Color(lab, 'lab');\n        };\n    } else {\n        throw new RangeError('No point in running bezier with only one color.');\n    }\n    return I;\n};\n\nexport default (colors) => {\n    const f = bezier(colors);\n    f.scale = () => scale(f);\n    return f;\n};\n","import Color from '../Color.js';\nimport '../ops/luminance.js';\n\nexport default (a, b) => {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.luminance();\n    const l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n};\n","import Color from '../Color.js';\n\n// simple Euclidean distance\nexport default function (a, b, mode = 'lab') {\n    // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.get(mode);\n    const l2 = b.get(mode);\n    let sum_sq = 0;\n    for (let i in l1) {\n        const d = (l1[i] || 0) - (l2[i] || 0);\n        sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n}\n","import GeoTIFF from '../src/ol/source/GeoTIFF.js';\nimport Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport chroma from 'chroma-js';\n\nconst segments = 10;\n\nconst defaultMinColor = '#0300AD';\nconst defaultMaxColor = '#00ff00';\n\nconst defaultMinValue = -0.5;\nconst defaultMaxValue = 0.7;\n\nconst minColorInput = document.getElementById('min-color');\nminColorInput.value = defaultMinColor;\n\nconst maxColorInput = document.getElementById('max-color');\nmaxColorInput.value = defaultMaxColor;\n\nconst minValueOutput = document.getElementById('min-value-output');\nconst minValueInput = document.getElementById('min-value-input');\nminValueInput.value = defaultMinValue.toString();\n\nconst maxValueOutput = document.getElementById('max-value-output');\nconst maxValueInput = document.getElementById('max-value-input');\nmaxValueInput.value = defaultMaxValue.toString();\n\nfunction getVariables() {\n  const variables = {};\n\n  const minColor = minColorInput.value;\n  const maxColor = maxColorInput.value;\n  const scale = chroma.scale([minColor, maxColor]).mode('lab');\n\n  const minValue = parseFloat(minValueInput.value);\n  const maxValue = parseFloat(maxValueInput.value);\n  const delta = (maxValue - minValue) / segments;\n\n  for (let i = 0; i <= segments; ++i) {\n    const color = scale(i / segments).rgb();\n    const value = minValue + i * delta;\n    variables[`value${i}`] = value;\n    variables[`red${i}`] = color[0];\n    variables[`green${i}`] = color[1];\n    variables[`blue${i}`] = color[2];\n  }\n  return variables;\n}\n\nfunction colors() {\n  const stops = [];\n  for (let i = 0; i <= segments; ++i) {\n    stops[i * 2] = ['var', `value${i}`];\n    const red = ['var', `red${i}`];\n    const green = ['var', `green${i}`];\n    const blue = ['var', `blue${i}`];\n    stops[i * 2 + 1] = ['color', red, green, blue];\n  }\n  return stops;\n}\n\nconst ndvi = [\n  '/',\n  ['-', ['band', 2], ['band', 1]],\n  ['+', ['band', 2], ['band', 1]],\n];\n\nconst source = new GeoTIFF({\n  sources: [\n    {\n      // visible red, band 1 in the style expression above\n      url: 'https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/36/Q/WD/2020/7/S2A_36QWD_20200701_0_L2A/B04.tif',\n      max: 10000,\n    },\n    {\n      // near infrared, band 2 in the style expression above\n      url: 'https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/36/Q/WD/2020/7/S2A_36QWD_20200701_0_L2A/B08.tif',\n      max: 10000,\n    },\n  ],\n});\n\nconst layer = new TileLayer({\n  style: {\n    variables: getVariables(),\n    color: ['interpolate', ['linear'], ndvi, ...colors()],\n  },\n  source: source,\n});\n\nfunction update() {\n  layer.updateStyleVariables(getVariables());\n  minValueOutput.innerText = parseFloat(minValueInput.value).toFixed(1);\n  maxValueOutput.innerText = parseFloat(maxValueInput.value).toFixed(1);\n}\n\nminColorInput.addEventListener('input', update);\nmaxColorInput.addEventListener('input', update);\nminValueInput.addEventListener('input', update);\nmaxValueInput.addEventListener('input', update);\nupdate();\n\nconst map = new Map({\n  target: 'map',\n  layers: [layer],\n  view: source.getView(),\n});\n"],"names":["min","max","Math","x","low","high","rgb","_clipped","_unclipped","slice","i","limit","classToType","name","toLowerCase","obj","Object","prototype","toString","call","args","keyOrder","length","Array","type","split","filter","k","undefined","map","l","PI","rnd2","a","round","rnd3","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","format","autodetect","constructor","me","this","mode","last","sorted","sort","b","p","chk","test","Error","apply","_rgb","clip_rgb","push","hex","join","chroma","version","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RE_HEX","RE_HEXA","match","substr","u","parseInt","r","g","unpack","str","hxa","n","keys","input","named","h","rest","alpha","mutate","clipped","labConstants","Kn","labWhitePoint","Xn","Yn","Zn","t0","t1","t2","t3","kE","kKE","kK","RefWhiteRGB","X","Y","Z","MtxRGB2XYZ","m00","m01","m02","m10","m11","m12","m20","m21","m22","MtxXYZ2RGB","As","Bs","Cs","MtxAdaptMa","MtxAdaptMaI","ILLUMINANTS","Map","setLabWhitePoint","ill","get","String","getLabWhitePoint","lab2xyz","L","fy","fx","fz","fx3","fz3","pow","compand","linear","sign","abs","xyz2rgb","y","z","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","b_","gammaAdjustSRGB","companded","rgb2xyz","xr","yr","zr","xyz2lab","lab","assign","darken","amount","brighten","darker","brighter","mc","channel","src","indexOf","luminance","lum","cur_lum","max_iter","mid","interpolate","lm","rgb2luminance","luminance_x","col1","col2","f","interpolator","mix","premultiply","sin","cos","c","isNaN","hcl","reverse","sqrt","atan2","Number","NaN","lch","forEach","m","saturate","desaturate","set","value","charAt","out","tint","shade","xyz0","xyz1","lrgb","x1","y1","z1","x2","y2","z2","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","hsl","hsv","hcg","hsi","oklch","num","c1","c2","floor","_g","_c","q","t","v","minRgb","maxRgb","delta","s","min_","acos","h_","max_","rgb2hsv","multiplyMatrices","A","B","isArray","B_cols","_","product","row","col","reduce","LMStoXYZ","LMSnl","XYZ","LMStoOKLab","LMS","cbrt","XYZ_to_OKLab","oklab","_average_lrgb","colors","weights","xyz","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","d","analyze","limits","domain","arguments","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","left","right","inclusive","ascending","end","__range__","samples","asc","cache","gamma","nodata","rnd","rgba","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","log","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","best","mindist","dist","newCentroids","kClusters","tmpKMeansBreaks","B_threshold","cool","scale","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewerTypes","typeMap","Proxy","target","prop","lower","has","getOwnPropertyNames","cmyk","hsla","laba","lcha","prevWhitePoint","cssColor","INT_OR_PCT","source","FLOAT_OR_PCT","PCT","RE_S","SEP","COMMA","ANLGE","ALPHA","RE_RGB","RegExp","RE_RGB_LEGACY","RE_RGBA_LEGACY","RE_HSL","RE_HSL_LEGACY","RE_HSLA_LEGACY","RE_LAB","RE_LCH","RE_OKLAB","RE_OKLCH","roundRGB","percentToAbsolute","pct","signed","endsWith","parseFloat","substring","noneToValue","noneValue","css2rgb","css","trim","e","replace","wp","gl","kelvin","temp","minTemp","maxTemp","temperature","average","w","first","shift","cnt","dx","dy","ci","xyz2","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","newrow","binom_row","el","Color","contrast","l1","l2","contrastAPCA","text","bg","l_text","l_bg","Y_text","Y_bg","S_norm","S_rev","C","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","exp","Rt","distance","sum_sq","random","code","scales","valid","segments","minColorInput","document","getElementById","maxColorInput","minValueOutput","minValueInput","maxValueOutput","maxValueInput","getVariables","variables","minColor","maxColor","minValue","color","GeoTIFF","sources","url","style","stops","update","updateStyleVariables","innerText","toFixed","addEventListener","layers","view","getView"],"sourceRoot":""}