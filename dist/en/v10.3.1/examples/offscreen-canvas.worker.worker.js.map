{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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A,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,I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","sources":["webpack:///../node_modules/color-name/index.js","webpack:///webpack/bootstrap","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/math.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/proj/utm.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../node_modules/pbf/index.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../node_modules/rbush/node_modules/quickselect/index.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/ImageState.js","webpack:///../node_modules/color-space/rgb.js","webpack:///../node_modules/color-space/xyz.js","webpack:///../node_modules/color-space/luv.js","webpack:///../node_modules/color-space/lchuv.js","webpack:///../node_modules/color-parse/index.js","webpack:///../node_modules/color-space/hsl.js","webpack:///../src/ol/color.js","webpack:///../node_modules/color-rgba/index.js","webpack:///../src/ol/has.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/DataTile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/vec/mat4.js","webpack:///../src/ol/webgl/Canvas.js","webpack:///../src/ol/reproj/glreproj.js","webpack:///../src/ol/reproj/DataTile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/net.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  * WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  * WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  * WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport Projection from './Projection.js';\nimport {toDegrees, toRadians, wrap} from '../math.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport IconImage from './IconImage.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending, descending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {apply as applyMatrix} from '../transform.js';\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/** @typedef {Array<number>} Mat4 */\n\n/**\n * @return {Mat4} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Mat4} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Mat4} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @param {Mat4} [out] mat4 frustum matrix will be written into\n * @return {Mat4} out\n */\nexport function orthographic(left, right, bottom, top, near, far, out) {\n  out = out ?? create();\n  const lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {Mat4} m The matrix to scale.\n * @param {number} x How much to scale in the x direction.\n * @param {number} y How much to scale in the y direction.\n * @param {number} z How much to scale in the z direction.\n * @param {Mat4} [out] The matrix to write to.\n * @return {Mat4} out\n **/\nexport function scale(m, x, y, z, out) {\n  out = out ?? create();\n  out[0] = m[0] * x;\n  out[1] = m[1] * x;\n  out[2] = m[2] * x;\n  out[3] = m[3] * x;\n  out[4] = m[4] * y;\n  out[5] = m[5] * y;\n  out[6] = m[6] * y;\n  out[7] = m[7] * y;\n  out[8] = m[8] * z;\n  out[9] = m[9] * z;\n  out[10] = m[10] * z;\n  out[11] = m[11] * z;\n  out[12] = m[12];\n  out[13] = m[13];\n  out[14] = m[14];\n  out[15] = m[15];\n  return out;\n}\n\n/**\n * Translate a matrix.\n *\n * @param {Mat4} m the matrix to translate\n * @param {number} x How much to translate in the x direction.\n * @param {number} y How much to translate in the y direction.\n * @param {number} z How much to translate in the z direction.\n * @param {Mat4} [out] the receiving matrix\n * @return {Mat4} out\n */\nexport function translate(m, x, y, z, out) {\n  out = out ?? create();\n  let a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;\n\n  if (m === out) {\n    out[12] = m[0] * x + m[4] * y + m[8] * z + m[12];\n    out[13] = m[1] * x + m[5] * y + m[9] * z + m[13];\n    out[14] = m[2] * x + m[6] * y + m[10] * z + m[14];\n    out[15] = m[3] * x + m[7] * y + m[11] * z + m[15];\n  } else {\n    a00 = m[0];\n    a01 = m[1];\n    a02 = m[2];\n    a03 = m[3];\n    a10 = m[4];\n    a11 = m[5];\n    a12 = m[6];\n    a13 = m[7];\n    a20 = m[8];\n    a21 = m[9];\n    a22 = m[10];\n    a23 = m[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + m[12];\n    out[13] = a01 * x + a11 * y + a21 * z + m[13];\n    out[14] = a02 * x + a12 * y + a22 * z + m[14];\n    out[15] = a03 * x + a13 * y + a23 * z + m[15];\n  }\n\n  return out;\n}\n\n/**\n * @param {number} x x translation.\n * @param {number} y y translation.\n * @param {number} z z translation.\n * @param {Mat4} [out] optional matrix to store result\n * @return {Mat4} out\n */\nexport function translation(x, y, z, out) {\n  out = out ?? create();\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = x;\n  out[13] = y;\n  out[14] = z;\n  out[15] = 1;\n\n  return out;\n}\n","import * as mat4 from '../vec/mat4.js';\n\n/**\n * @module ol/webgl/Canvas\n */\n\nconst VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec4 a_texcoord;\n\n  uniform mat4 u_matrix;\n  uniform mat4 u_textureMatrix;\n\n  varying vec2 v_texcoord;\n\n  void main() {\n    gl_Position = u_matrix * a_position;\n    vec2 texcoord = (u_textureMatrix * a_texcoord).xy;\n    v_texcoord = texcoord;\n  }\n`;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (\n      v_texcoord.x < 0.0 ||\n      v_texcoord.y < 0.0 ||\n      v_texcoord.x > 1.0 ||\n      v_texcoord.y > 1.0\n    ) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/** @typedef {import(\"../transform.js\").Transform} Matrix */\n\n/**\n * Canvas-like operations implemented in webgl.\n */\nexport class Canvas {\n  /**\n   * @param {WebGLRenderingContext} gl Context to render in.\n   */\n  constructor(gl) {\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.program_ = createProgram(gl, FRAGMENT_SHADER, VERTEX_SHADER);\n\n    this.positionLocation = gl.getAttribLocation(this.program_, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(this.program_, 'a_texcoord');\n\n    this.matrixLocation = gl.getUniformLocation(this.program_, 'u_matrix');\n    this.textureMatrixLocation = gl.getUniformLocation(\n      this.program_,\n      'u_textureMatrix',\n    );\n    this.textureLocation = gl.getUniformLocation(this.program_, 'u_texture');\n\n    this.positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\n    this.positions = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.positions),\n      gl.STATIC_DRAW,\n    );\n\n    this.texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.texcoords = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.texcoords),\n      gl.STATIC_DRAW,\n    );\n  }\n\n  /**\n   * 2dContext drawImage call implemented in webgl.\n   * Unlike images, textures do not have a width and height associated\n   * with them so we'll pass in the width and height of the texture.\n   *\n   * @param {WebGLTexture} tex Image to draw.\n   * @param {number} texWidth Image width.\n   * @param {number} texHeight Image height.\n   * @param {number} srcX Top-left x-point to read src image.\n   * @param {number} srcY Top-left y-point to read src image.\n   * @param {number} [srcWidth] Width of source to read.\n   * @param {number} [srcHeight] Height of source to read.\n   * @param {number} [dstX] Top-left x-point of destination.\n   * @param {number} [dstY] Top-left y-point of destination.\n   * @param {number} [dstWidth] Width of written image in destination.\n   * @param {number} [dstHeight] Height of written image in destination.\n   * @param {number} [width] Width of canvas.\n   * @param {number} [height] Height of canvas.\n   */\n  drawImage(\n    tex,\n    texWidth,\n    texHeight,\n    srcX,\n    srcY,\n    srcWidth,\n    srcHeight,\n    dstX,\n    dstY,\n    dstWidth,\n    dstHeight,\n    width,\n    height,\n  ) {\n    const gl = this.gl_;\n\n    if (dstX === undefined) {\n      dstX = srcX;\n    }\n    if (dstY === undefined) {\n      dstY = srcY;\n    }\n    if (srcWidth === undefined) {\n      srcWidth = texWidth;\n    }\n    if (srcHeight === undefined) {\n      srcHeight = texHeight;\n    }\n    if (dstWidth === undefined) {\n      dstWidth = srcWidth;\n    }\n    if (dstHeight === undefined) {\n      dstHeight = srcHeight;\n    }\n    if (width === undefined) {\n      width = gl.canvas.width;\n    }\n    if (height === undefined) {\n      height = gl.canvas.height;\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n\n    gl.useProgram(this.program_);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n    gl.enableVertexAttribArray(this.texcoordLocation);\n    gl.vertexAttribPointer(this.texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // matrix for converting pixels to clip space\n    let matrix = mat4.orthographic(0, width, 0, height, -1, 1);\n    matrix = mat4.translate(matrix, dstX, dstY, 0);\n    matrix = mat4.scale(matrix, dstWidth, dstHeight, 1);\n    gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    let texMatrix = mat4.translation(srcX / texWidth, srcY / texHeight, 0);\n    texMatrix = mat4.scale(\n      texMatrix,\n      srcWidth / texWidth,\n      srcHeight / texHeight,\n      1,\n    );\n\n    gl.uniformMatrix4fv(this.textureMatrixLocation, false, texMatrix);\n    gl.uniform1i(this.textureLocation, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, this.positions.length / 2);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {GLenum} type Type of shader.\n * @param {string} source source of shader.\n * @return {WebGLShader} [progam] The program.\n */\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  if (shader === null) {\n    throw new Error('Shader compilation failed');\n  }\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader);\n    if (log === null) {\n      throw new Error('Shader info log creation failed');\n    }\n    throw new Error(log);\n  }\n\n  return shader;\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {string} fragmentSource Fragment shader source.\n * @param {string} vertexSource Vertex shader source.\n * @return {WebGLProgram} [progam] The program.\n */\nexport function createProgram(gl, fragmentSource, vertexSource) {\n  const program = gl.createProgram();\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n  if (program === null) {\n    throw new Error('Program creation failed');\n  }\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(program);\n    if (log === null) {\n      throw new Error('Program info log creation failed');\n    }\n    throw new Error();\n  }\n  return program;\n}\n","/**\n * @module ol/reproj/glreproj\n */\nimport * as mat4 from '../vec/mat4.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {Canvas as WebGLCanvas, createProgram} from '../webgl/Canvas.js';\nimport {\n  createEmpty,\n  extend,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from '../extent.js';\n\nconst EDGE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n  }\n`;\nconst EDGE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform vec4 u_val;\n  void main() {\n     gl_FragColor = u_val;\n  }\n`;\n\nconst TRIANGLE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec2 a_texcoord;\n\n  varying vec2 v_texcoord;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n     v_texcoord = a_texcoord;\n  }\n`;\nconst TRIANGLE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (v_texcoord.x < 0.0 || v_texcoord.x > 1.0 || v_texcoord.y < 0.0 || v_texcoord.y > 1.0) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/**\n * Create an html canvas element and returns its webgl context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement | OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {WebGLContextAttributes} [settings] CanvasRenderingContext2DSettings\n * @return {WebGLRenderingContext} The context.\n */\nexport function createCanvasContextWebGL(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {WebGLRenderingContext} */ (\n    canvas.getContext('webgl', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {WebGLRenderingContext} gl Context.\n */\nexport function releaseGLCanvas(gl) {\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n}\n\n/**\n * @type {Array<HTMLCanvasElement | OffscreenCanvas>}\n */\nexport const canvasGLPool = [];\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"../extent.js\").Extent} extent Extent.\n * @property {import(\"../extent.js\").Extent} [clipExtent] Clip extent.\n * @property {WebGLTexture} texture Texture.\n * @property {number} width Width of texture.\n * @property {number} height Height of texture.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {WebGLRenderingContext} gl the context to render in.\n * @param {number} width_ Width of the canvas.\n * @param {number} height_ Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"../extent.js\").Extent} targetExtent Target extent (tile).\n * @param {import(\"../reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {number} dataType What kind of data is the textures, must be gl.FLOAT or gl.UNSIGNED_BYTE\n * TODO: Allow setting renderEdges value in the data as this is done in \"data-space\".\n * @param {boolean | Array<number>} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchTexture.\n * @return {{framebuffer: WebGLFramebuffer, width: number, height: number, texture: WebGLTexture}} Canvas with reprojected data.\n */\nexport function render(\n  gl,\n  width_,\n  height_,\n  pixelRatio,\n  sourceResolution,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  dataType,\n  renderEdges,\n  interpolate,\n  drawSingle,\n) {\n  const width = Math.round(pixelRatio * width_);\n  const height = Math.round(pixelRatio * height_);\n  gl.canvas.width = width;\n  gl.canvas.height = height;\n\n  /** @type {WebGLFramebuffer | null} */\n  let resultFrameBuffer;\n  /** @type {WebGLTexture | null} */\n  let resultTexture;\n  {\n    resultTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, resultTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    resultFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      resultTexture,\n      0,\n    );\n  }\n\n  if (resultFrameBuffer === null) {\n    throw new Error('Could not create framebuffer');\n  }\n  if (resultTexture === null) {\n    throw new Error('Could not create texture');\n  }\n\n  if (sources.length === 0) {\n    return {\n      width,\n      height,\n      framebuffer: resultFrameBuffer,\n      texture: resultTexture,\n    };\n  }\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  /** @type {WebGLTexture | null} */\n  let stitchTexture;\n  /** @type {number} */\n  let stitchWidth;\n  /** @type {number} */\n  let stitchHeight;\n  const stitchScale = 1 / sourceResolution;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchTexture = gl.createTexture();\n    if (resultTexture === null) {\n      throw new Error('Could not create texture');\n    }\n    stitchWidth = Math.round(getWidth(sourceDataExtent) * stitchScale);\n    stitchHeight = Math.round(getHeight(sourceDataExtent) * stitchScale);\n\n    // Make sure we do not exceed the max texture size by lowering the resolution for this image.\n    // https://github.com/openlayers/openlayers/pull/15860#issuecomment-2254123580\n    const maxTexSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    const largeSide = Math.max(stitchWidth, stitchHeight);\n    const scaleFactor = largeSide > maxTexSize ? maxTexSize / largeSide : 1;\n    const stitchWidthFixed = Math.round(stitchWidth * scaleFactor);\n    const stitchHeightFixed = Math.round(stitchHeight * scaleFactor);\n\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      stitchWidthFixed,\n      stitchHeightFixed,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      stitchTexture,\n      0,\n    );\n    const webGLCanvas = new WebGLCanvas(gl);\n\n    sources.forEach(function (src, i, arr) {\n      const xPos =\n        (src.extent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n      const yPos =\n        -(src.extent[3] - sourceDataExtent[3]) * stitchScale * scaleFactor;\n      const srcWidth = getWidth(src.extent) * stitchScale * scaleFactor;\n      const srcHeight = getHeight(src.extent) * stitchScale * scaleFactor;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n      gl.viewport(0, 0, stitchWidthFixed, stitchHeightFixed);\n\n      if (src.clipExtent) {\n        const xPos =\n          (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n        const yPos =\n          -(src.clipExtent[3] - sourceDataExtent[3]) *\n          stitchScale *\n          scaleFactor;\n        const width = getWidth(src.clipExtent) * stitchScale * scaleFactor;\n        const height = getHeight(src.clipExtent) * stitchScale * scaleFactor;\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n          interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n        );\n      }\n\n      webGLCanvas.drawImage(\n        src.texture,\n        src.width,\n        src.height,\n        gutter,\n        gutter,\n        src.width - 2 * gutter,\n        src.height - 2 * gutter,\n        interpolate ? xPos : Math.round(xPos),\n        interpolate ? yPos : Math.round(yPos),\n        interpolate ? srcWidth : Math.round(xPos + srcWidth) - Math.round(xPos),\n        interpolate\n          ? srcHeight\n          : Math.round(yPos + srcHeight) - Math.round(yPos),\n        stitchWidthFixed,\n        stitchHeightFixed,\n      );\n\n      gl.disable(gl.SCISSOR_TEST);\n    });\n    gl.deleteFramebuffer(fb);\n  } else {\n    stitchTexture = sources[0].texture;\n    stitchWidth = sources[0].width;\n    stitchHeight = sources[0].width;\n  }\n\n  const targetTopLeft = getTopLeft(targetExtent);\n  const sourceTopLeft = getTopLeft(sourceDataExtent);\n\n  const getUVs = (\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ target,\n  ) => {\n    const u0 =\n      ((target[0][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v0 =\n      (-(target[0][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u1 =\n      ((target[1][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v1 =\n      (-(target[1][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u2 =\n      ((target[2][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v2 =\n      (-(target[2][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    return {u1, v1, u0, v0, u2, v2};\n  };\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n  gl.viewport(0, 0, width, height);\n\n  // Draw source to reprojtile\n  {\n    /** @type {Array<number>} */\n    const vertices = [];\n    /** @type {Array<number>} */\n    const texcoords = [];\n\n    const triProgram = createProgram(\n      gl,\n      TRIANGLE_FRAGMENT_SHADER,\n      TRIANGLE_VERTEX_SHADER,\n    );\n    gl.useProgram(triProgram);\n\n    // Bind image\n    const textureLocation = gl.getUniformLocation(triProgram, 'u_texture');\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    // Tell the shader to get the texture from texture unit 0\n    gl.uniform1i(textureLocation, 0);\n\n    // Calculate vert and tex coordinates.\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const source = triangle.source;\n      const target = triangle.target;\n      // Make sure that everything is on pixel boundaries\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      const su0 =\n        (source[0][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv0 =\n        -(source[0][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su1 =\n        (source[1][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv1 =\n        -(source[1][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su2 =\n        (source[2][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv2 =\n        -(source[2][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n\n      vertices.push(u1, v1, u0, v0, u2, v2);\n      texcoords.push(su1, sv1, su0, sv0, su2, sv2);\n    });\n\n    // Convert pixel space to clip space.\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(triProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const positionLocation = gl.getAttribLocation(triProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const texcoordLocation = gl.getAttribLocation(triProgram, 'a_texcoord');\n    const texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texcoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n  }\n\n  if (renderEdges) {\n    const edgeProgram = createProgram(\n      gl,\n      EDGE_FRAGMENT_SHADER,\n      EDGE_VERTEX_SHADER,\n    );\n    gl.useProgram(edgeProgram);\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(edgeProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const burnval = Array.isArray(renderEdges) ? renderEdges : [0, 0, 0, 255];\n    const burnvalLocation = gl.getUniformLocation(edgeProgram, 'u_val');\n    const isFloat = true;\n    if (isFloat) {\n      gl.uniform4fv(burnvalLocation, burnval);\n    } else {\n      gl.uniform4iv(burnvalLocation, burnval);\n    }\n\n    const positionLocation = gl.getAttribLocation(edgeProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    /** @type {Array<number>} */\n    const lines = triangulation.getTriangles().reduce(function (\n      /** @type {Array<number>} */ lines,\n      triangle,\n    ) {\n      const target = triangle.target;\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      return lines.concat([u1, v1, u0, v0, u0, v0, u2, v2, u2, v2, u1, v1]);\n    }, []);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n    gl.drawArrays(gl.LINES, 0, lines.length / 2);\n  }\n\n  return {\n    width,\n    height,\n    framebuffer: resultFrameBuffer,\n    texture: resultTexture,\n  };\n}\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {calculateSourceExtentResolution} from '../reproj.js';\nimport {\n  canvasGLPool,\n  createCanvasContextWebGL,\n  releaseGLCanvas,\n  render as renderReprojected,\n} from './glreproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {import(\"../transform.js\").Transform} [transformMatrix] Source transform matrix.\n * @property {boolean} [renderEdges] Render reprojection edges.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean | Array<number>}\n     */\n    this.renderEdges_ =\n      options.renderEdges !== undefined ? options.renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n      options.transformMatrix,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: tileDataR,\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n        bandCount: bandCount,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const outWidth = targetWidth * this.pixelRatio_;\n    const outHeight = targetHeight * this.pixelRatio_;\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    const bandCount = dataSources[0].bandCount;\n    const dataR = new dataSources[0].dataType(bandCount * outWidth * outHeight);\n\n    const gl = createCanvasContextWebGL(outWidth, outHeight, canvasGLPool, {\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    let willInterpolate;\n    const format = gl.RGBA;\n    let textureType;\n    if (dataSources[0].dataType == Float32Array) {\n      textureType = gl.FLOAT;\n      gl.getExtension('WEBGL_color_buffer_float');\n      gl.getExtension('OES_texture_float');\n      gl.getExtension('EXT_float_blend');\n      const extension = gl.getExtension('OES_texture_float_linear');\n      const canInterpolate = extension !== null;\n      willInterpolate = canInterpolate && this.interpolate;\n    } else {\n      textureType = gl.UNSIGNED_BYTE;\n      willInterpolate = this.interpolate;\n    }\n\n    const BANDS_PR_REPROJ = 4;\n    const reprojs = Math.ceil(bandCount / BANDS_PR_REPROJ);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n\n        const data = new dataSource.dataType(BANDS_PR_REPROJ * width * height);\n        const dataS = dataSource.data;\n        let offset = reproj * BANDS_PR_REPROJ;\n        for (let j = 0, len = data.length; j < len; j += BANDS_PR_REPROJ) {\n          data[j] = dataS[offset];\n          data[j + 1] = dataS[offset + 1];\n          data[j + 2] = dataS[offset + 2];\n          data[j + 3] = dataS[offset + 3];\n          offset += bandCount;\n        }\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        if (willInterpolate) {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        } else {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          format,\n          width,\n          height,\n          0,\n          format,\n          textureType,\n          data,\n        );\n\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          texture: texture,\n          width: width,\n          height: height,\n        });\n      }\n\n      const {framebuffer, width, height} = renderReprojected(\n        gl,\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        textureType,\n        this.renderEdges_,\n        willInterpolate,\n      );\n\n      // The texture is always RGBA.\n      const rows = width;\n      const cols = height * BANDS_PR_REPROJ;\n      const data = new dataSources[0].dataType(rows * cols);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.readPixels(0, 0, width, height, gl.RGBA, textureType, data);\n\n      let offset = reproj * BANDS_PR_REPROJ;\n      for (let i = 0, len = data.length; i < len; i += BANDS_PR_REPROJ) {\n        // The data read by `readPixels` is flipped in the y-axis so flip it again.\n        const flipY = (rows - 1 - ((i / cols) | 0)) * cols + (i % cols);\n        dataR[offset] = data[flipY];\n        dataR[offset + 1] = data[flipY + 1];\n        dataR[offset + 2] = data[flipY + 2];\n        dataR[offset + 3] = data[flipY + 3];\n        offset += bandCount;\n      }\n    }\n\n    releaseGLCanvas(gl);\n    canvasGLPool.push(gl.canvas);\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [Math.round(outWidth), Math.round(outHeight)];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    let allTilesIdle = true;\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.IDLE) {\n        allTilesIdle = false;\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n    if (!this.renderComplete && !allTilesIdle) {\n      frameState.animate = true;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(layer);\n    const declutter = layer.getDeclutter();\n    const declutteredFeatures = declutter\n      ? frameState.declutter[declutter].all().map((item) => item.value)\n      : null;\n    let found;\n    foundFeature: for (let i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const executorGroups = tile.executorGroups[layerUid];\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        found = executorGroups[t].forEachFeatureAtCoordinate(\n          coordinate,\n          resolution,\n          rotation,\n          hitTolerance,\n          featureCallback,\n          declutteredFeatures,\n        );\n        if (found) {\n          break foundFeature;\n        }\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (this.renderedTiles.length === 0) {\n      return Promise.resolve([]);\n    }\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoordString = tileGrid\n        .getTileCoordForCoordAndResolution(coordinate, resolution)\n        .toString();\n      const tile =\n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n          this.renderedTiles\n        ).find(\n          (tile) =>\n            tile.tileCoord.toString() === tileCoordString &&\n            tile.getState() === TileState.LOADED,\n        );\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      if (\n        source.getWrapX() &&\n        projection.canWrapX() &&\n        !containsExtent(\n          projectionExtent,\n          tileGrid.getTileCoordExtent(tile.tileCoord),\n        )\n      ) {\n        wrapX(coordinate, projection);\n      }\n      const layerUid = getUid(layer);\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      const features = tile\n        .getSourceTiles()\n        .reduce(\n          (accumulator, sourceTile) =>\n            accumulator.concat(sourceTile.getFeatures()),\n          /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */ ([]),\n        );\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    /** @type {Array<import('../../Feature.js').FeatureLike>} */\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      this.frameState.viewState.projection,\n    );\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    /** @type {Object<string, true>} */\n    const visitedSourceTiles = {};\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const key = sourceTile.getKey();\n        if (key in visitedSourceTiles) {\n          continue;\n        }\n        visitedSourceTiles[key] = true;\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const scaledCanvasSize = [\n      this.context.canvas.width,\n      this.context.canvas.height,\n    ];\n    const declutter = this.getLayer().getDeclutter();\n    const declutterTree = declutter\n      ? frameState.declutter[declutter]\n      : undefined;\n    const layerUid = getUid(this.getLayer());\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[layerUid];\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            scaledCanvasSize,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutterTree,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const layerUid = getUid(this.getLayer());\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[layerUid].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, /** @type {Array<{executorGroup: CanvasExecutorGroup, index: number}>} */ ([]));\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    /** @type {Object<number, true>} */\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).map(Number).sort(ascending);\n    zIndexKeys.forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile The tile\n   * @param {import('../../Map.js').FrameState} frameState Current frame state\n   * @return {import('../../transform.js').Transform} Transform to use to render this tile\n   */\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    const layerUid = getUid(layer);\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = tiles[i];\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[layerUid].filter((group) =>\n        group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @template {import('./Feature.js').FeatureLike} FeatureType\n */\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default<FeatureType>}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<FeatureType>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * @return {string} Tile url.\n   */\n  getTileUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default<FeatureType>} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<FeatureType>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in a {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<FeatureType>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader<FeatureType>} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport {abstract, getUid} from '../util.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, Array<string>>}\n     * @private\n     */\n    this.tileKeysBySourceTileUrl_ = {};\n\n    /**\n     @type {Object<string, Tile<FeatureType>>}\n     */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector render tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        if (!this.sourceTiles_[tileUrl]) {\n          this.sourceTiles_[tileUrl] = new this.tileClass(\n            sourceTileCoord,\n            tileUrl ? TileState.IDLE : TileState.EMPTY,\n            tileUrl,\n            this.format_,\n            this.tileLoadFunction,\n          );\n        }\n        const sourceTile = this.sourceTiles_[tileUrl];\n        tile.sourceTiles.push(sourceTile);\n        if (!this.tileKeysBySourceTileUrl_[tileUrl]) {\n          this.tileKeysBySourceTileUrl_[tileUrl] = [];\n        }\n        this.tileKeysBySourceTileUrl_[tileUrl].push(tile.getKey());\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {VectorRenderTile} tile Vector render tile.\n   */\n  removeSourceTiles(tile) {\n    const sourceTiles = tile.sourceTiles;\n    for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n      const sourceTileUrl = sourceTiles[i].getTileUrl();\n      const tileKey = this.getKey();\n      if (!this.tileKeysBySourceTileUrl_[sourceTileUrl]) {\n        return;\n      }\n      const index = this.tileKeysBySourceTileUrl_[sourceTileUrl][tileKey];\n      if (index === -1) {\n        continue;\n      }\n      this.tileKeysBySourceTileUrl_[sourceTileUrl].splice(index, 1);\n      if (this.tileKeysBySourceTileUrl_[sourceTileUrl].length === 0) {\n        delete this.tileKeysBySourceTileUrl_[sourceTileUrl];\n        delete this.sourceTiles_[sourceTileUrl];\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n      this.removeSourceTiles.bind(this),\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   * @override\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * @param {boolean} overlaps The source has overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @param {import(\"../VectorTile.js\").default<FeatureType>} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { toPromise } from 'ol/functions.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport TileState from 'ol/TileState.js';\nimport { VectorTile } from 'ol';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { METERS_PER_UNIT } from 'ol/proj/Units.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { get as get$1, getUserProjection, getPointResolution, fromLonLat, equivalent } from 'ol/proj.js';\nimport { getCenter, getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_byte(parseFloat(str) / 100 * 255);\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_float(parseFloat(str) / 100);\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        h += 1;\n    else if (h > 1)\n        h -= 1;\n    if (h * 6 < 1)\n        return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1)\n        return m2;\n    if (h * 3 < 2)\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        return kCSSColorTable[str].slice();\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                return null;\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                return null;\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor_1(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${ Math.round(r) },${ Math.round(g) },${ Math.round(b) },${ a })`;\n    }\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha() {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(stop => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        const expression = [\n            'step',\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = [\n            'match',\n            get\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${ type }`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error(`Unknown zoom function type \"${ type }\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nclass ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${ name } not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        const itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? `array<${ itemType }, ${ type.N }>` : type.itemType.kind === 'value' ? 'array' : `array<${ itemType }>`;\n    } else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${ toString$1(expected) } but found ${ toString$1(t) } instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n            sensitivity: this.sensitivity,\n            usage: 'search'\n        });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n    }\n}\n\n//      \nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\n                    'image',\n                    section.image.name\n                ]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = [\n                    'literal',\n                    section.fontStack.split(',')\n                ];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null;\n        // treat empty values as no image\n        return new ResolvedImage({\n            name,\n            available: false\n        });\n    }\n    serialize() {\n        return [\n            'image',\n            this.name\n        ];\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return `Invalid rgba value [${ value.join(', ') }]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return `Invalid rgba value [${ [\n            r,\n            g,\n            b,\n            a\n        ].join(', ') }]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\n                'literal',\n                this.value\n            ];\n        } else if (this.value instanceof Color$1) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            return this.value;\n        }\n    }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nvar RuntimeError$1 = RuntimeError;\n\nconst types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$2) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$2[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array$1(itemType, N);\n        } else {\n            type = types$2[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError$1(`Expected value to be of type ${ toString$1(this.type) }, but found ${ toString$1(typeOf(value)) } instead.`);\n            }\n        }\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array$1(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n                nextTokenMayBeObject = true;\n                sections.push({\n                    content,\n                    scale: null,\n                    font: null,\n                    textColor: null\n                });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error(`No image name provided.`);\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return [\n            'image',\n            this.input.serialize()\n        ];\n    }\n}\n\nconst types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        const name = args[0];\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const type = types$1[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color$1) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${ JSON.stringify(input) }: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError$1(error || `Could not parse color from value '${ typeof input === 'string' ? input : String(JSON.stringify(input)) }'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError$1(`Could not convert ${ JSON.stringify(value) } to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n        } else {\n            return toString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{\n                    content: this.args[0],\n                    scale: null,\n                    font: null,\n                    textColor: null\n                }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${ this.type.kind }`];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n    id() {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    distanceFromCenter() {\n        if (this.featureTileCoord && this.featureDistanceData) {\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n            // Distance is calculated as `dot(d, v)`\n            const dist = bX * dX + bY * dY;\n            return dist;\n        }\n        return 0;\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color$1.parse(input);\n        }\n        return cached;\n    }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ? definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ? [[\n                definition[1],\n                definition[2]\n            ]] : definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) || // varags\n        signature.length === args.length - 1    // correct param count\n);\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${ params.length } arguments, but found ${ parsedArgs.length } instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString$1(parsed.type));\n            }\n            context.error(`Expected arguments of type ${ signatures }, but found (${ actualTypes.join(', ') }) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${ signature.map(toString$1).join(', ') })`;\n    } else {\n        return `(${ toString$1(signature.type) }...)`;\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\n            'collator',\n            options\n        ];\n    }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    const vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tilePoints = [];\n    if (!geometry)\n        return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tileLines = [];\n    if (!geometry)\n        return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'within',\n            this.geojson\n        ];\n    }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${ name }\". Make sure \"${ name }\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'var',\n            this.name\n        ];\n    }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${ part }]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = [\n                'literal',\n                expr\n            ];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion$1(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion$1(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${ typeof op } instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                    const ec = new EvaluationContext$1();\n                    try {\n                        parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${ typeof expr } instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${ this.key }${ keys.map(k => `[${ k }]`).join('') }`;\n        this.errors.push(new ParsingError$1(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = [\n            'step',\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        epsilon = 0.000001;\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            return t2;\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            break;\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        return t0;\n    if (t2 > t1)\n        return t1;\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            return t2;\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nconst lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nconst hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${ String(interpolation[0]) }`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n            return context.error(`Type ${ toString$1(outputType) } is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);    // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = [\n                    'exponential',\n                    this.interpolation.base\n                ];\n            }\n        } else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [\n            this.operator,\n            interpolation,\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${ args.length - 1 } instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${ typeof name } instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([\n                name,\n                value\n            ]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } > ${ array.length - 1 }.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError$1(`Array index must be an integer, but found ${ index } instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'at',\n            this.index.serialize(),\n            this.input.serialize()\n        ];\n    }\n}\nvar At$1 = At;\n\n//      \nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (haystack == null)\n            return false;\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'in',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\n                'index-of',\n                this.needle.serialize(),\n                this.haystack.serialize(),\n                fromIndex\n            ];\n        }\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${ Number.MAX_SAFE_INTEGER }.`);\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = [\n            'match',\n            this.input.serialize()\n        ];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {};\n        // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([\n                    this.cases[label],\n                    [label]\n                ]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nvar Match$1 = Match;\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([\n                test,\n                result\n            ]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [\n                array$1(ValueType),\n                StringType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${ toString$1(input.type) } instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\n                'slice',\n                this.input.serialize(),\n                this.beginIndex.serialize(),\n                endIndex\n            ];\n        }\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize()\n        ];\n    }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(lhs.type) }'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(rhs.type) }'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${ toString$1(lhs.type) }' and '${ toString$1(rhs.type) }'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1(`Expected arguments for \"${ op }\" to be (string, string) or (number, number), but found (${ lt.kind }, ${ rt.kind }) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n    // BCP 47 language tag\n    // ISO 4217 currency code, required if style=currency\n    // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    // Default 0\n    // Default 3\n    constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\n            'number-format',\n            this.number.serialize(),\n            options\n        ];\n    }\n}\n\n//      \nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${ args.length - 1 } instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${ toString$1(input.type) } instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError$1(`Expected value to be of type string or array, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError$1(error);\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = i + j >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => {\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        ctx => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        ctx => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        ctx => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        ctx => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        ctx => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        ctx => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        ctx => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ],\n            [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        ctx => ctx.id() !== null && ctx.id() !== undefined\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext$1();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError$1(`Expected value to be one of ${ Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ') }, but found ${ JSON.stringify(val) } instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(child => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n    if (filter === null || filter === undefined) {\n        return {\n            filter: () => true,\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = filter;\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${ JSON.stringify(filterExp, null, 2) }\n        `);\n    }\n    // Compile the static component of the filter\n    const filterSpec = spec[`filter_${ layerType }`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    } else {\n        filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    const needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    let isBranchingDynamically = false;\n    const branches = [];\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return op !== 'any';\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-${ op }`,\n            value\n        ];\n    case '$id':\n        return [\n            `filter-id-${ op }`,\n            value\n        ];\n    default:\n        return [\n            `filter-${ op }`,\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            `filter-id-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [\n            `filter-has`,\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(k => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 200,\n    'extra-light': 200,\n    light: 300,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    'extra-bold': 800,\n    'ultra-bold': 800,\n    heavy: 900,\n    black: 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900,\n    'ultra-black': 950,\n    'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                haveStyle = true;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n                haveStyle = true;\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n                haveWeight = true;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    const startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    const startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected sprites url: ${ url }`);\n    }\n    const sprite = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ sprite }/sprite?access_token=${ token }`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    const startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected style url: ${ url }`);\n    }\n    const style = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ style }?&access_token=${ token }`;\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    const urlObject = new URL(url, styleUrl);\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        if (!urlObject.searchParams.has(tokenParam)) {\n            urlObject.searchParams.set(tokenParam, token);\n        }\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return `https://api.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}${ sizeFactor }.webp?access_token=${ token }`;\n    }\n    return `https://{a-d}.tiles.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}.vector.pbf?access_token=${ token }`;\n}\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    let functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (const key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    let filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst defaultResolutions = (function () {\n    const resolutions = [];\n    for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    let i = 0;\n    const ii = resolutions.length;\n    for (; i < ii; ++i) {\n        const candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            const zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nfunction getResolutionForZoom(zoom, resolutions) {\n    const base = Math.floor(zoom);\n    const factor = Math.pow(2, zoom - base);\n    return resolutions[base] / factor;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    const transformedRequest = options.transformRequest ? options.transformRequest(url, resourceType) || url : url;\n    const pendingRequest = toPromise(() => transformedRequest).then(transformedRequest => {\n        if (!(transformedRequest instanceof Request)) {\n            transformedRequest = new Request(transformedRequest);\n        }\n        if (!transformedRequest.headers.get('Accept')) {\n            transformedRequest.headers.set('Accept', 'application/json');\n        }\n        if (metadata) {\n            metadata.request = transformedRequest;\n        }\n        return fetch(transformedRequest).then(function (response) {\n            delete pendingRequests[url];\n            return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n        }).catch(function (error) {\n            delete pendingRequests[url];\n            return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    });\n    pendingRequests[url] = [\n        transformedRequest,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                const glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n    const cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    let promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        let tileLoadFunction;\n        if (options.transformRequest) {\n            tileLoadFunction = (tile, src) => {\n                const transformedRequest = options.transformRequest ? options.transformRequest(src, 'Tiles') || src : src;\n                if (tile instanceof VectorTile) {\n                    tile.setLoader((extent, resolution, projection) => {\n                        toPromise(() => transformedRequest).then(transformedRequest => {\n                            fetch(transformedRequest).then(response => response.arrayBuffer()).then(data => {\n                                const format = tile.getFormat();\n                                const features = format.readFeatures(data, {\n                                    extent: extent,\n                                    featureProjection: projection\n                                });\n                                // @ts-ignore\n                                tile.setFeatures(features);\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        });\n                    });\n                } else {\n                    const img = tile.getImage();\n                    toPromise(() => transformedRequest).then(transformedRequest => {\n                        if (transformedRequest instanceof Request) {\n                            fetch(transformedRequest).then(response => response.blob()).then(blob => {\n                                const url = URL.createObjectURL(blob);\n                                img.addEventListener('load', () => URL.revokeObjectURL(url));\n                                img.addEventListener('error', () => URL.revokeObjectURL(url));\n                                img.src = url;\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        } else {\n                            img.src = transformedRequest;\n                        }\n                    });\n                }\n            };\n        }\n        const url = glSource.url;\n        if (url && !glSource.tiles) {\n            const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve({\n                    tileJson: Object.assign({}, glSource, {\n                        url: undefined,\n                        tiles: expandUrl(normalizedSourceUrl)\n                    }),\n                    tileLoadFunction\n                });\n            } else {\n                const metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url);\n                    });\n                    return Promise.resolve({\n                        tileJson,\n                        tileLoadFunction\n                    });\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n                })\n            });\n            promise = Promise.resolve({\n                tileJson: Object.assign({}, glSource),\n                tileLoadFunction\n            });\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    const imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = `rgba(${ haloColor.r * 255 },${ haloColor.g * 255 },${ haloColor.b * 255 },${ haloColor.a })`;\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    const imageCanvas = createCanvas(area.width, area.height);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const dist = data[index + 3] / 255;\n            const buffer = 0.75;\n            const gamma = 0.1;\n            const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        let textWithLetterSpacing = '';\n        const lines = text.split('\\n');\n        const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (let l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        const hardLines = text.split('\\n');\n        const lines = [];\n        for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    let wrappedText = measureCache[key];\n    if (!wrappedText) {\n        const words = text.split(' ');\n        if (words.length > 1) {\n            const ctx = getMeasureContext();\n            ctx.font = font;\n            const oneEm = ctx.measureText('M').width;\n            const maxWidth = oneEm * em;\n            let line = '';\n            const lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (let i = 0, ii = words.length; i < ii; ++i) {\n                const word = words[i];\n                const testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                const line = lines[i];\n                if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n                    const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line;\n                        i -= 1;\n                    } else {\n                        lines[i] = line + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n                const line = lines[i];\n                const next = lines[i + 1];\n                if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    const lineWords = line.split(' ');\n                    const lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        const styleSheets = document.styleSheets;\n        for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n            const styleSheet = styleSheets[i];\n            try {\n                const cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n                        const cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            const match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n    const fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    const fontDescriptions = [];\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        const font = fonts[i];\n        const cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        const parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n        const fontDescription = fontDescriptions[i];\n        const family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(`${ fontDescription[2] }\\n${ fontDescription[1] } \\n${ family }`) !== 100) {\n                const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    const markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\nconst types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nconst anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n    const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    }\n    return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = { zoom: 0 };\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    const layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    const functions = functionCache[layerId];\n    if (!functions[property]) {\n        let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        const propertySpec = spec[`${ layoutOrPaint }_${ layer.type }`][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        let isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            const compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n    const allowOverlap = getValue(layer, 'layout', `${ prefix }-allow-overlap`, zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    const ignorePlacement = getValue(layer, 'layout', `${ prefix }-ignore-placement`, zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        const a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n    recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    let spriteImage, spriteImageSize;\n    let spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            const img = new Image();\n            let blobUrl;\n            toPromise(() => spriteImageUrl).then(spriteImageUrl => {\n                if (spriteImageUrl instanceof Request) {\n                    fetch(spriteImageUrl).then(response => response.blob()).then(blob => {\n                        blobUrl = URL.createObjectURL(blob);\n                        img.src = blobUrl;\n                    }).catch(() => {\n                    });\n                } else {\n                    img.crossOrigin = 'anonymous';\n                    img.src = spriteImageUrl;\n                    if (blobUrl) {\n                        URL.revokeObjectURL(blobUrl);\n                    }\n                }\n            });\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            const worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    const allLayers = derefLayers(glStyle.layers);\n    const layersBySourceLayer = {};\n    const mapboxLayers = [];\n    const iconImageCache = {};\n    const patternCache = {};\n    const functionCache = getFunctionCache(glStyle);\n    const filterCache = getFilterCache(glStyle);\n    let mapboxSource;\n    for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n        const layer = allLayers[i];\n        const layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1) {\n            const sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                const source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error(`Source \"${ mapboxSource }\" is not defined`);\n                }\n                const type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(`Source \"${ mapboxSource }\" is not of type \"vector\" or \"geojson\", but \"${ type }\"`);\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error(`Layer \"${ layerId }\" does not use source \"${ mapboxSource }`);\n            }\n            let layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    const textHalo = new Stroke();\n    const textColor = new Fill();\n    const styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    const styleFunction = function (feature, resolution, onlyLayer) {\n        const properties = feature.getProperties();\n        const layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        let zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        const type = types[feature.getGeometry().getType()];\n        const f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        let stylesLength = -1;\n        let featureBelongsToLayer;\n        for (let i = 0, ii = layers.length; i < ii; ++i) {\n            const layerData = layers[i];\n            const layer = layerData.layer;\n            const layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            const layout = layer.layout || emptyObj$1;\n            const paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            const filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                let color, opacity, fill, stroke, strokeColor, style;\n                const index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                const icon_cache_key = icon + '.' + opacity;\n                                let pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    const spriteImageData = spriteData[icon];\n                                    const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    const ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    if (!('line-pattern' in paint)) {\n                        color = colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState));\n                    } else {\n                        color = undefined;\n                    }\n                    const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                let hasImage = false;\n                let text = null;\n                let placementAngle = 0;\n                let icon, iconImg, skipLabel;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        let styleGeom = undefined;\n                        const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n                            const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                const geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    const extent = geom.getExtent();\n                                    const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], 2, {}, undefined);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            const stride = geom.getStride();\n                                            const coordinates = geom.getFlatCoordinates();\n                                            for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                                                const x1 = coordinates[i];\n                                                const y1 = coordinates[i + 1];\n                                                const x2 = coordinates[i + stride];\n                                                const y2 = coordinates[i + stride + 1];\n                                                const minX = Math.min(x1, x2);\n                                                const minY = Math.min(y1, y2);\n                                                const maxX = Math.max(x1, x2);\n                                                const maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    let iconCacheKey = `${ icon }.${ iconSize }.${ haloWidth }.${ haloColor }`;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += `.${ iconColor }`;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        const declutterMode = getDeclutterMode(layer, zoom, f, 'icon', functionCache);\n                                        let displacement;\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[0] *= iconSize;\n                                            displacement[1] *= -iconSize;\n                                        }\n                                        let color = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            const iconOptions = {\n                                                color: color,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode,\n                                                scale: iconSize\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            const spriteImageData = spriteData[icon];\n                                            let img, size, offset;\n                                            if (haloWidth) {\n                                                if (spriteImageData.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor || [\n                                                        0,\n                                                        0,\n                                                        0,\n                                                        1\n                                                    ]), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData.width,\n                                                        height: spriteImageData.height,\n                                                        pixelRatio: spriteImageData.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                                                }\n                                            } else {\n                                                if (spriteImageData.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                size = [\n                                                    spriteImageData.width,\n                                                    spriteImageData.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData.x,\n                                                    spriteImageData.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color,\n                                                img: img,\n                                                // @ts-ignore\n                                                imgSize: spriteImageSize,\n                                                size: size,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    const circleTranslate = getValue(layer, 'paint', 'circle-translate', zoom, f, functionCache, featureState);\n                    const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth + '.' + circleTranslate[0] + '.' + circleTranslate[1];\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            displacement: [\n                                circleTranslate[0],\n                                -circleTranslate[1]\n                            ],\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce((acc, chunk, i) => {\n                                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                let text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (let i = 0, ii = text.length; i < ii; ++i) {\n                                    if (i > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    const declutterMode = getDeclutterMode(layer, zoom, f, 'text', functionCache);\n                    if (!style.getText()) {\n                        style.setText(text);\n                    }\n                    text = style.getText();\n                    if (!text || 'getDeclutterMode' in text && text.getDeclutterMode() !== declutterMode) {\n                        text = new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ],\n                            // @ts-ignore\n                            declutterMode: declutterMode\n                        });\n                        style.setText(text);\n                    }\n                    const textTransform = getValue(layer, 'layout', 'text-transform', zoom, f, functionCache, featureState);\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n                    }\n                    const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    let textAlign;\n                    if (placement === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement);\n                    }\n                    if (placement === 'line' && typeof text.setRepeat === 'function') {\n                        const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement === 'point');\n                    let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    let vOffset = 0;\n                    let hOffset = 0;\n                    if (placement == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    let textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor && textHaloWidth > 0) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        const halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    const padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    const evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    const elevationImage = inputs[0];\n    const width = elevationImage.width;\n    const height = elevationImage.height;\n    const elevationData = elevationImage.data;\n    const shadeData = new Uint8ClampedArray(elevationData.length);\n    const dp = data.resolution * 2;\n    const maxX = width - 1;\n    const maxY = height - 1;\n    const pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    const twoPi = 2 * Math.PI;\n    const halfPi = Math.PI / 2;\n    const sunEl = Math.PI * data.sunEl / 180;\n    const sunAz = Math.PI * data.sunAz / 180;\n    const cosSunEl = Math.cos(sunEl);\n    const sinSunEl = Math.sin(sunEl);\n    const highlightColor = data.highlightColor;\n    const shadowColor = data.shadowColor;\n    const accentColor = data.accentColor;\n    const encoding = data.encoding;\n    let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding = 'mapbox') {\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        const searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach((value, key) => {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n    let styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    let options;\n    let sourceOrLayers;\n    let updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error(`No ${ type } source found in the glStyle.`));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        const targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        const tileGrid = layer.getSource().getTileGrid();\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom()) && tileGrid.getMinZoom() > 0) {\n                            layer.setMaxResolution(getResolutionForZoom(Math.max(0, tileGrid.getMinZoom() - 1e-12), tileGrid.getResolutions()));\n                        }\n                    });\n                }\n                const glSource = glStyle.sources[sourceId];\n                let source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                const targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            let spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        const projection = get$1(options.projection);\n                        const units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, (fonts, templateUrl = options.webfonts) => getFonts(fonts, templateUrl), options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error(`Nothing to show for source [${ sourceId }]`));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage') || spriteImageUrl;\n                        if (transformed instanceof Request || transformed instanceof Promise) {\n                            spriteImageUrl = transformed;\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error(`Sprites cannot be loaded: ${ spriteUrl }: ${ err.message }`));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().insertAt(0, setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    let sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    const bounds = tileJSON.bounds;\n    if (bounds) {\n        const ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        const tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    const tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    const tileJSONDoc = tileJSONSource.getTileJSON();\n    const tileGrid = tileJSONSource.getTileGrid();\n    const projection = get$1(options.projection || 'EPSG:3857');\n    const extent = extentFromTileJSON(tileJSONDoc, projection);\n    const projectionExtent = projection.getExtent();\n    const minZoom = tileJSONDoc.minzoom || 0;\n    const maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options<import(\"ol/render/Feature.js\").default>} */\n    const sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    const background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    const layout = glLayer.layout || {};\n    const paint = glLayer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    let opacity;\n    const bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    const div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render(frameState) {\n            const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJson, options);\n            sourceOptions.tileLoadFunction = tileLoadFunction;\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    const layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    const projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return `{bbox-${ projCode.toLowerCase().replace(/[^a-z0-9]/g, '-') }}`;\n}\nfunction setupRasterSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const source = new TileJSON({\n                interpolate: options.interpolate === undefined ? true : options.interpolate,\n                transition: 0,\n                crossOrigin: 'anonymous',\n                tileJSON: tileJson\n            });\n            source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n            if (options.projection) {\n                //@ts-ignore\n                source.projection = get$1(options.projection);\n            }\n            const getTileUrl = source.getTileUrlFunction();\n            if (tileLoadFunction) {\n                source.setTileLoadFunction(tileLoadFunction);\n            }\n            source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n                const bboxTemplate = getBboxTemplate(projection);\n                let src = getTileUrl(tileCoord, pixelRatio, projection);\n                if (src.indexOf(bboxTemplate) != -1) {\n                    const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                    src = src.replace(bboxTemplate, bbox.toString());\n                }\n                return src;\n            });\n            source.set('mapbox-source', glSource);\n            resolve(source);\n        }).catch(function (error) {\n            reject(error);\n        });\n    });\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    const layer = new TileLayer();\n    setupRasterSource(glSource, styleUrl, options).then(function (source) {\n        layer.setSource(source);\n    }).catch(function () {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    const layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    const geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    const data = glSource.data;\n    const sourceOptions = {};\n    if (typeof data == 'string') {\n        const geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            const extentUrl = (extent, resolution, projection) => {\n                const bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, `${ extent.join(',') }`);\n            };\n            const source = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                loader: (extent, resolution, projection, success, failure) => {\n                    const url = typeof extentUrl === 'function' ? extentUrl(extent, resolution, projection) : extentUrl;\n                    fetchResource('GeoJSON', url, options).then(json => {\n                        const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                        source.addFeatures(features);\n                        success(features);\n                    }).catch(response => {\n                        source.removeLoadedExtent(extent);\n                        failure();\n                    });\n                },\n                strategy: bbox\n            });\n            source.set('mapbox-source', glSource);\n            return source;\n        }\n        const source = new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl,\n            loader: (extent, resolution, projection, success, failure) => {\n                fetchResource('GeoJSON', geoJsonUrl, options).then(json => {\n                    const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                    source.addFeatures(features);\n                    success(features);\n                }).catch(response => {\n                    source.removeLoadedExtent(extent);\n                    failure();\n                });\n            }\n        });\n        return source;\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    const source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    let zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        const glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        const mapboxLayers = derefLayers(glStyle.layers);\n        const layerMapboxLayerids = layer.get('mapbox-layers');\n        const visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    const functionCache = getFunctionCache(glStyle);\n    const glLayers = glStyle.layers;\n    const type = glLayer.type;\n    const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    const glSource = glStyle.sources[id];\n    let layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = getPointResolution(options.projection || 'EPSG:3857', event.resolution, getCenter(event.extent), 'm');\n            const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    const glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    const promises = [];\n    let view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            const projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl,\n        options\n    });\n    const glLayers = glStyle.layers;\n    let layerIds = [];\n    let layer, glSourceId, id;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        const type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            // eslint-disable-next-line no-console\n            console.debug(`layers[${ i }].type \"${ type }\" not supported`);\n            continue;\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n    let promise;\n    /** @type {Map|LayerGroup} */\n    let mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error(`Could not load ${ style }: ${ err.message }`));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n    let minZoom = 24;\n    let maxZoom = 0;\n    const glLayers = glStyle.layers;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        const setStyle = function () {\n            const source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    const sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions), getResolutionForZoom(Math.max(0, sourceMinZoom - 1e-12), tileGrid.getResolutions())));\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(getResolutionForZoom(maxZoom, defaultResolutions));\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions));\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        const layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    const style = mapOrGroup.get('mapbox-style');\n    const layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    let spliceIndex;\n    let sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error(`Layer with id \"${ beforeLayerId }\" not found.`);\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    let sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n        const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" already exists.`);\n    }\n    const sourceLayerId = mapboxLayers[sourceIndex].id;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    const index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" not found.`);\n    }\n    const oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nfunction updateMapboxSource(mapOrGroup, id, mapboxSource) {\n    const currentSource = getSource(mapOrGroup, id);\n    const layers = mapOrGroup.getLayers().getArray().filter(function (layer) {\n        return (layer instanceof VectorLayer || layer instanceof TileLayer || layer instanceof VectorTileLayer) && layer.getSource() === currentSource;\n    });\n    const metadata = mapOrGroup.get('mapbox-metadata');\n    let newSourcePromise;\n    switch (mapboxSource.type) {\n    case 'vector':\n        newSourcePromise = setupVectorSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    case 'geojson':\n        newSourcePromise = Promise.resolve(setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options));\n        break;\n    case 'raster':\n    case 'raster-dem':\n        newSourcePromise = setupRasterSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    default:\n        return Promise.reject(new Error('Unsupported source type ' + mapboxSource.type));\n    }\n    newSourcePromise.then(function (newSource) {\n        layers.forEach(function (layer) {\n            layer.setSource(newSource);\n        });\n    });\n    return newSourcePromise;\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    const layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    const layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const layers = glStyle.layers;\n    layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n    const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    const result = [];\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error(`Map or layer for source \"${ feature.source }\" not found.`);\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n    /**\n   * @param {Error} error error object.\n   */\n    constructor(error) {\n        super(EventType.ERROR);\n        /**\n     * @type {Error}\n     */\n        this.error = error;\n    }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer<import(\"ol/source/VectorTile.js\").default>}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n    /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n    constructor(options) {\n        const declutter = 'declutter' in options ? options.declutter : true;\n        const source = new VectorTileSource({\n            state: 'loading',\n            format: new MVT()\n        });\n        super({\n            source: source,\n            background: options.background === false ? null : options.background,\n            declutter: declutter,\n            className: options.className,\n            opacity: options.opacity,\n            visible: options.visible,\n            zIndex: options.zIndex,\n            minResolution: options.minResolution,\n            maxResolution: options.maxResolution,\n            minZoom: options.minZoom,\n            maxZoom: options.maxZoom,\n            renderOrder: options.renderOrder,\n            renderBuffer: options.renderBuffer,\n            renderMode: options.renderMode,\n            map: options.map,\n            updateWhileAnimating: options.updateWhileAnimating,\n            updateWhileInteracting: options.updateWhileInteracting,\n            preload: options.preload,\n            useInterimTilesOnError: options.useInterimTilesOnError,\n            properties: options.properties\n        });\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n        }\n        const url = options.styleUrl;\n        const promises = [applyStyle(this, url, options.layers || options.source, { accessToken: this.accessToken })];\n        if (this.getBackground() === undefined) {\n            promises.push(applyBackground(this, options.styleUrl, { accessToken: this.accessToken }));\n        }\n        Promise.all(promises).then(() => {\n            source.setState('ready');\n        }).catch(error => {\n            this.dispatchEvent(new ErrorEvent(error));\n            const source = this.getSource();\n            source.setState('error');\n        });\n    }\n}\n\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer, updateMapboxSource };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=' + key,\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/streets-v2/style.json?key=' + key;\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont,\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    ),\n  () => worker.postMessage({action: 'requestRender'}),\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState),\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel),\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: features.map((e) => e.getProperties()),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  frameState.layerStatesArray = layers.map((l) => l.getLayerState());\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      if (layer.getDeclutter() && !frameState.declutterTree) {\n        frameState.declutter = {};\n      }\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach((layer) => {\n    if (!layer.getRenderer().context) {\n      return;\n    }\n    layer.renderDeclutter(frameState, layer.getLayerState());\n    layer.renderDeferred(frameState);\n  });\n  frameState.postRenderFunctions.forEach((fn) => fn(null, frameState));\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: {\n        viewState: {\n          center: frameState.viewState.center.slice(0),\n          resolution: frameState.viewState.resolution,\n          rotation: frameState.viewState.rotation,\n        },\n        pixelRatio: frameState.pixelRatio,\n        size: frameState.size.slice(0),\n        extent: frameState.extent.slice(0),\n        coordinateToPixelTransform:\n          frameState.coordinateToPixelTransform.slice(0),\n        pixelToCoordinateTransform:\n          frameState.pixelToCoordinateTransform.slice(0),\n      },\n    },\n    [imageData],\n  );\n});\n"],"names":["module","exports","__webpack_module_cache__","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","a","b","descending","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","data","extension","Array","isArray","equals","arr1","arr2","len1","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","key","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","assertion","errorMessage","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","name","tmp_","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","coordinate","x","y","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","matrixPrecision","map","round","join","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","intersects","applyTransform","transformFn","stops","width","height","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","squaredSegmentDistance","t","angleInRadians","PI","angleInDegrees","r","lerp","decimals","factor","pow","ceil","wrap","range","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance","douglasPeuckerArray","ends","simplifiedEnds","snap","tolerance","quantize","quantizeArray","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","NaN","maxSegmentLength","sort","segmentLength","abs","isNaN","getInteriorPointsOfMultiArray","endss","interiorPoints","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","coordinate1","coordinate2","cosAngle","sinAngle","worldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M2","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","MIN_LATITUDE","MAX_LATITUDE","MIN_LONGITUDE","MAX_LONGITUDE","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a3","a4","a5","a6","m","epsgRegExes","zoneFromCode","epsgId","re","match","parseInt","makeTransformFunction","transformer","coord","levels","info","warn","error","none","level","args","console","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","add","projectionLike","replace","makeProjection","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","j","jj","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","projections2","forwardTransform","inverseTransform","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","startOrientation","prevEndIndex","orientation","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingss","transform2D","destinationStride","k","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","RenderFeature","styleFunction","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","ends_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoint","flatCenter","getFlatInteriorPoints","getFlatMidpoint","getFlatMidpoints","midpoint","getOrientedFlatCoordinates","getSimplifiedGeometry","simplifyTransformed","getStride","getType","pixelExtent","projectedExtent","getEnds","enableSimplifyTransformed","getFlatCoordinates","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","simplify","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","transformed","projTransform","getLayoutForStride","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","startsWith","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","deflateCoordinate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","linearRing","twiceArea","linearRings","LinearRing","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","appendPoint","multiPoint","getPoint","getPoints","points","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","power","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","isView","dataView","DataView","pos","readFields","readField","result","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","s","p","h","toNum","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","str","b0","b3","bytesPerSequence","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","finish","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","charCodeAt","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","LN2","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","ctor","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","ERROR","EMPTY","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","clearRenderer","quickselect","left","compare","defaultCompare","sd","swap","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","node","toBBox","nodesToSearch","children","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","item","createNode","remove","equalsFn","path","indexes","parent","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","whitepoint","rgb","_xyz","white","g","arg","_u","_v","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","__webpack_require__","moduleId","cachedModule","__webpack_modules__","cstr","space","parts","alpha","toLowerCase","base","exec","dims","trim","split","shift","parseFloat","baseHues","endsWith","test","red","orange","yellow","green","blue","purple","hsl","t3","NO_COLOR","MAX_CACHE_SIZE","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","Number","parsed","normalize","asArray","ua","navigator","userAgent","WORKER_OFFSCREEN_CANVAS","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","passive","defineProperty","window","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","decodeFallback","image","src","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","getImageState","ImageState","ready","createPattern","getImage","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","pixelRatio","replaceColor_","getPixelRatio","getHitDetectionImage","fillRect","getSize","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","asString","onChange","cacheKey","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","toString","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","Set","featureId","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","JSON","stringify","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","setDeclutter","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","prepareContainer","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","tileCoord","transition_","transition","transitionStarts_","release","setState","getTileCoord","getAlpha","time","inTransition","endTransition","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","loader_","loader","data_","error_","controller_","controller","getError","abort","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","orthographic","bottom","top","near","far","out","lr","bt","nf","Canvas","gl","gl_","program_","createProgram","positionLocation","getAttribLocation","texcoordLocation","matrixLocation","getUniformLocation","textureMatrixLocation","textureLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","Float32Array","STATIC_DRAW","texcoordBuffer","texcoords","tex","texWidth","texHeight","srcX","srcY","dstX","dstY","dstWidth","dstHeight","bindTexture","TEXTURE_2D","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","matrix","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","uniformMatrix4fv","texMatrix","uniform1i","drawArrays","TRIANGLES","createShader","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentSource","vertexSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","canvasGLPool","dataType","resultFrameBuffer","resultTexture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage2D","RGBA","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebuffer","texture","stitchTexture","stitchWidth","stitchHeight","maxTexSize","getParameter","MAX_TEXTURE_SIZE","largeSide","scaleFactor","stitchWidthFixed","stitchHeightFixed","fb","webGLCanvas","viewport","enable","SCISSOR_TEST","scissor","deleteFramebuffer","getUVs","triProgram","su0","sv0","su1","sv1","su2","sv2","edgeProgram","burnval","burnvalLocation","uniform4fv","uniform4iv","lines","LINES","Uint8ClampedArray","renderEdges_","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","triangulation_","transformMatrix","getZForResolution","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","reproject_","dataSources","imageLike","tileData","arrayData","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","getTileSize","targetWidth","targetHeight","outWidth","outHeight","dataR","createCanvasContextWebGL","premultipliedAlpha","antialias","willInterpolate","format","textureType","getExtension","UNSIGNED_BYTE","reproj","dataSource","dataS","rows","cols","readPixels","flipY","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","releaseGLCanvas","ImageData","putImageData","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","tileRange","extend","getKeyZXY","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","layerIndex","getWrapX","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","pixelToCoordinateTransform","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","sourceRevision","renderedRevision_","enqueueTiles","initialZ","preload","minZ","zDirection","tileQueueKey","tileQueue","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","allTilesIdle","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","nextExtent","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","getInterpolate","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","usedTiles","postRenderFunction","tilesCount","updateCacheSize","postRenderFunctions","tileCount","getTileImage","alphaChanged","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","updateExecutorGroup_","tileImageNeedsRender_","renderTileImage_","viewHints","wantedResolution","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","executorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","getOverlaps","lastIndexOf","foundFeature","tileCoordString","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","accumulator","getFeaturesInExtent","visitedSourceTiles","tileFeatures","hifi","tiles","getTileRenderTransform","executorGroup","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","group","clipContext","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","getUseInterimTilesOnError","format_","features_","url_","getTileUrl","getFormat","onLoad","setFeatures","onError","setLoader","tmpTileCoord","strict","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","zRegEx","xRegEx","yRegEx","dashYRegEx","expandUrl","url","urls","startCharCode","stopCharCode","charCode","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","urlTileCoord","removeSourceTiles","replayState_","errorTileKeys","removeSourceTiles_","hasContext","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","onerror","send","defaultLoadFunction","tileKeysBySourceTileUrl_","tileClass","tileGrids_","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","sourceTileUrl","newTile","setOverlaps","getDefaultExportFromCjs","__esModule","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","substr","ep","fname","params","parse","rgba","toArray01","toArray01PremultipliedAlpha","black","transparent","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","colorSpace","getFallback","defaultValue","curve","interpolated","literal","lastIndex","ParsingError","ParsingError$1","Scope","bindings","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","toString$1","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError$1","types$2","string","boolean","Assertion","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","types$1","Coercion","parseColor","Coercion$1","geometryTypes","EvaluationContext$1","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CompoundExpression$1","CollatorExpression","updateBBox","boxWithinBox","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","vectorQ","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","solve","UnitBezier$1","freeze","__proto__","from","to","Xn","Yn","Zn","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Interpolate$1","needsAnnotation","firstImage","Coalesce$1","Let","binding","Let$1","At","At$1","In$1","IndexOf","fromIndex","IndexOf$1","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Match$1","branches","_","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","rt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","types","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","create","ref","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","haveWeight","haveStyle","fontFamilies","maybeWeight","previousPart","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj$1","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","blobUrl","Request","fetch","response","blob","URL","createObjectURL","revokeObjectURL","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","metadata","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","observables","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}