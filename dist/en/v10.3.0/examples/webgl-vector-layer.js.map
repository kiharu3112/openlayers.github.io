{"version":3,"file":"webgl-vector-layer.js","mappings":"2KASA,MAYMA,EAAM,IAAI,IAAU,CACxBC,OAAQ,IAAI,MAGRC,EAAc,IAAI,IAAiB,CACvCD,OAAQ,IAAI,IAAa,CACvBE,IAAK,qDACLC,OAAQ,IAAI,MAEdC,MArBY,CACZ,eAAgB,CACd,OACA,CAAC,KAAM,CAAC,MAAO,iBAAkB,CAAC,OAClC,QACA,CAAC,IAAK,CAAC,MAAO,SAAU,CAAC,IAAK,IAAK,OAErC,eAAgB,CAAC,OAAQ,CAAC,KAAM,CAAC,MAAO,iBAAkB,CAAC,OAAQ,EAAG,GACtE,iBAAkB,EAClB,aAAc,CAAC,IAAK,CAAC,MAAO,SAAU,CAAC,IAAK,IAAK,IAAK,MAatDC,UAAW,CACTC,eAAgB,KAIdC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACT,EAAKE,GACdQ,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIV,IAAIN,GAAiB,EACrB,MAAMO,EAAqB,SAAUC,GACnC,MAAMC,EAAUR,EAAIS,sBAAsBF,GAAO,SAAUC,GACzD,OAAOA,CACT,IAEME,EAAOC,SAASC,eAAe,QAEnCF,EAAKG,UADHL,GACeA,EAAQM,IAAI,aAEZ,SAGnB,MAAMC,EAAKP,EAAUA,EAAQQ,SAAW,EACpCD,IAAOhB,IACTA,EAAgBgB,EAChBrB,EAAYuB,qBAAqB,CAAClB,kBAEtC,EAEAC,EAAIkB,GAAG,eAAe,SAAUC,GAC1BA,EAAIC,UAGRd,EAAmBa,EAAIZ,MACzB,IAEAP,EAAIkB,GAAG,SAAS,SAAUC,GACxBb,EAAmBa,EAAIZ,MACzB,G","sources":["webpack:///./webgl-vector-layer.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport WebGLVectorLayer from '../src/ol/layer/WebGLVector.js';\n\n/** @type {import('../src/ol/style/webgl.js').WebGLStyle} */\nconst style = {\n  'stroke-color': [\n    'case',\n    ['==', ['var', 'highlightedId'], ['id']],\n    'white',\n    ['*', ['get', 'COLOR'], [220, 220, 220]],\n  ],\n  'stroke-width': ['case', ['==', ['var', 'highlightedId'], ['id']], 3, 2],\n  'stroke-offset': -1,\n  'fill-color': ['*', ['get', 'COLOR'], [255, 255, 255, 0.6]],\n};\n\nconst osm = new TileLayer({\n  source: new OSM(),\n});\n\nconst vectorLayer = new WebGLVectorLayer({\n  source: new VectorSource({\n    url: 'https://openlayers.org/data/vector/ecoregions.json',\n    format: new GeoJSON(),\n  }),\n  style,\n  variables: {\n    highlightedId: -1,\n  },\n});\n\nconst map = new Map({\n  layers: [osm, vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n  }),\n});\n\nlet highlightedId = -1;\nconst displayFeatureInfo = function (pixel) {\n  const feature = map.forEachFeatureAtPixel(pixel, function (feature) {\n    return feature;\n  });\n\n  const info = document.getElementById('info');\n  if (feature) {\n    info.innerHTML = feature.get('ECO_NAME') || '&nbsp;';\n  } else {\n    info.innerHTML = '&nbsp;';\n  }\n\n  const id = feature ? feature.getId() : -1;\n  if (id !== highlightedId) {\n    highlightedId = id;\n    vectorLayer.updateStyleVariables({highlightedId});\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  displayFeatureInfo(evt.pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"names":["osm","source","vectorLayer","url","format","style","variables","highlightedId","map","layers","target","view","center","zoom","displayFeatureInfo","pixel","feature","forEachFeatureAtPixel","info","document","getElementById","innerHTML","get","id","getId","updateStyleVariables","on","evt","dragging"],"sourceRoot":""}